42e56d5c36b9d8ff8922afd797621e8f
var _curry2 = require("./internal/_curry2");

var curry = require("./curry");

var nAry = require("./nAry");

var constructN = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }

  if (n === 0) {
    return function () {
      return new Fn();
    };
  }

  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);

      case 2:
        return new Fn($0, $1);

      case 3:
        return new Fn($0, $1, $2);

      case 4:
        return new Fn($0, $1, $2, $3);

      case 5:
        return new Fn($0, $1, $2, $3, $4);

      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);

      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);

      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);

      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);

      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});

module.exports = constructN;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0cnVjdE4uanMiXSwibmFtZXMiOlsiX2N1cnJ5MiIsInJlcXVpcmUiLCJjdXJyeSIsIm5BcnkiLCJjb25zdHJ1Y3ROIiwibiIsIkZuIiwiRXJyb3IiLCIkMCIsIiQxIiwiJDIiLCIkMyIsIiQ0IiwiJDUiLCIkNiIsIiQ3IiwiJDgiLCIkOSIsImFyZ3VtZW50cyIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE9BQU8sR0FFWEMsT0FBTyxDQUFDLG9CQUFELENBRlA7O0FBSUEsSUFBSUMsS0FBSyxHQUVURCxPQUFPLENBQUMsU0FBRCxDQUZQOztBQUlBLElBQUlFLElBQUksR0FFUkYsT0FBTyxDQUFDLFFBQUQsQ0FGUDs7QUF3Q0EsSUFBSUcsVUFBVSxHQUVkSixPQUFPLENBQUMsU0FBU0ksVUFBVCxDQUFvQkMsQ0FBcEIsRUFBdUJDLEVBQXZCLEVBQTJCO0FBQ2pDLE1BQUlELENBQUMsR0FBRyxFQUFSLEVBQVk7QUFDVixVQUFNLElBQUlFLEtBQUosQ0FBVSw2Q0FBVixDQUFOO0FBQ0Q7O0FBRUQsTUFBSUYsQ0FBQyxLQUFLLENBQVYsRUFBYTtBQUNYLFdBQU8sWUFBWTtBQUNqQixhQUFPLElBQUlDLEVBQUosRUFBUDtBQUNELEtBRkQ7QUFHRDs7QUFFRCxTQUFPSixLQUFLLENBQUNDLElBQUksQ0FBQ0UsQ0FBRCxFQUFJLFVBQVVHLEVBQVYsRUFBY0MsRUFBZCxFQUFrQkMsRUFBbEIsRUFBc0JDLEVBQXRCLEVBQTBCQyxFQUExQixFQUE4QkMsRUFBOUIsRUFBa0NDLEVBQWxDLEVBQXNDQyxFQUF0QyxFQUEwQ0MsRUFBMUMsRUFBOENDLEVBQTlDLEVBQWtEO0FBQ3JFLFlBQVFDLFNBQVMsQ0FBQ0MsTUFBbEI7QUFDRSxXQUFLLENBQUw7QUFDRSxlQUFPLElBQUliLEVBQUosQ0FBT0UsRUFBUCxDQUFQOztBQUVGLFdBQUssQ0FBTDtBQUNFLGVBQU8sSUFBSUYsRUFBSixDQUFPRSxFQUFQLEVBQVdDLEVBQVgsQ0FBUDs7QUFFRixXQUFLLENBQUw7QUFDRSxlQUFPLElBQUlILEVBQUosQ0FBT0UsRUFBUCxFQUFXQyxFQUFYLEVBQWVDLEVBQWYsQ0FBUDs7QUFFRixXQUFLLENBQUw7QUFDRSxlQUFPLElBQUlKLEVBQUosQ0FBT0UsRUFBUCxFQUFXQyxFQUFYLEVBQWVDLEVBQWYsRUFBbUJDLEVBQW5CLENBQVA7O0FBRUYsV0FBSyxDQUFMO0FBQ0UsZUFBTyxJQUFJTCxFQUFKLENBQU9FLEVBQVAsRUFBV0MsRUFBWCxFQUFlQyxFQUFmLEVBQW1CQyxFQUFuQixFQUF1QkMsRUFBdkIsQ0FBUDs7QUFFRixXQUFLLENBQUw7QUFDRSxlQUFPLElBQUlOLEVBQUosQ0FBT0UsRUFBUCxFQUFXQyxFQUFYLEVBQWVDLEVBQWYsRUFBbUJDLEVBQW5CLEVBQXVCQyxFQUF2QixFQUEyQkMsRUFBM0IsQ0FBUDs7QUFFRixXQUFLLENBQUw7QUFDRSxlQUFPLElBQUlQLEVBQUosQ0FBT0UsRUFBUCxFQUFXQyxFQUFYLEVBQWVDLEVBQWYsRUFBbUJDLEVBQW5CLEVBQXVCQyxFQUF2QixFQUEyQkMsRUFBM0IsRUFBK0JDLEVBQS9CLENBQVA7O0FBRUYsV0FBSyxDQUFMO0FBQ0UsZUFBTyxJQUFJUixFQUFKLENBQU9FLEVBQVAsRUFBV0MsRUFBWCxFQUFlQyxFQUFmLEVBQW1CQyxFQUFuQixFQUF1QkMsRUFBdkIsRUFBMkJDLEVBQTNCLEVBQStCQyxFQUEvQixFQUFtQ0MsRUFBbkMsQ0FBUDs7QUFFRixXQUFLLENBQUw7QUFDRSxlQUFPLElBQUlULEVBQUosQ0FBT0UsRUFBUCxFQUFXQyxFQUFYLEVBQWVDLEVBQWYsRUFBbUJDLEVBQW5CLEVBQXVCQyxFQUF2QixFQUEyQkMsRUFBM0IsRUFBK0JDLEVBQS9CLEVBQW1DQyxFQUFuQyxFQUF1Q0MsRUFBdkMsQ0FBUDs7QUFFRixXQUFLLEVBQUw7QUFDRSxlQUFPLElBQUlWLEVBQUosQ0FBT0UsRUFBUCxFQUFXQyxFQUFYLEVBQWVDLEVBQWYsRUFBbUJDLEVBQW5CLEVBQXVCQyxFQUF2QixFQUEyQkMsRUFBM0IsRUFBK0JDLEVBQS9CLEVBQW1DQyxFQUFuQyxFQUF1Q0MsRUFBdkMsRUFBMkNDLEVBQTNDLENBQVA7QUE3Qko7QUErQkQsR0FoQ2dCLENBQUwsQ0FBWjtBQWlDRCxDQTVDTSxDQUZQOztBQWdEQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsVUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2N1cnJ5MiA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fY3VycnkyXCIpO1xuXG52YXIgY3VycnkgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vY3VycnlcIik7XG5cbnZhciBuQXJ5ID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL25BcnlcIik7XG4vKipcbiAqIFdyYXBzIGEgY29uc3RydWN0b3IgZnVuY3Rpb24gaW5zaWRlIGEgY3VycmllZCBmdW5jdGlvbiB0aGF0IGNhbiBiZSBjYWxsZWRcbiAqIHdpdGggdGhlIHNhbWUgYXJndW1lbnRzIGFuZCByZXR1cm5zIHRoZSBzYW1lIHR5cGUuIFRoZSBhcml0eSBvZiB0aGUgZnVuY3Rpb25cbiAqIHJldHVybmVkIGlzIHNwZWNpZmllZCB0byBhbGxvdyB1c2luZyB2YXJpYWRpYyBjb25zdHJ1Y3RvciBmdW5jdGlvbnMuXG4gKlxuICogQGZ1bmNcbiAqIEBtZW1iZXJPZiBSXG4gKiBAc2luY2UgdjAuNC4wXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBzaWcgTnVtYmVyIC0+ICgqIC0+IHsqfSkgLT4gKCogLT4geyp9KVxuICogQHBhcmFtIHtOdW1iZXJ9IG4gVGhlIGFyaXR5IG9mIHRoZSBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IEZuIFRoZSBjb25zdHJ1Y3RvciBmdW5jdGlvbiB0byB3cmFwLlxuICogQHJldHVybiB7RnVuY3Rpb259IEEgd3JhcHBlZCwgY3VycmllZCBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogICAgICAvLyBWYXJpYWRpYyBDb25zdHJ1Y3RvciBmdW5jdGlvblxuICogICAgICBmdW5jdGlvbiBTYWxhZCgpIHtcbiAqICAgICAgICB0aGlzLmluZ3JlZGllbnRzID0gYXJndW1lbnRzO1xuICogICAgICB9XG4gKlxuICogICAgICBTYWxhZC5wcm90b3R5cGUucmVjaXBlID0gZnVuY3Rpb24oKSB7XG4gKiAgICAgICAgY29uc3QgaW5zdHJ1Y3Rpb25zID0gUi5tYXAoaW5ncmVkaWVudCA9PiAnQWRkIGEgZG9sbG9wIG9mICcgKyBpbmdyZWRpZW50LCB0aGlzLmluZ3JlZGllbnRzKTtcbiAqICAgICAgICByZXR1cm4gUi5qb2luKCdcXG4nLCBpbnN0cnVjdGlvbnMpO1xuICogICAgICB9O1xuICpcbiAqICAgICAgY29uc3QgVGhyZWVMYXllclNhbGFkID0gUi5jb25zdHJ1Y3ROKDMsIFNhbGFkKTtcbiAqXG4gKiAgICAgIC8vIE5vdGljZSB3ZSBubyBsb25nZXIgbmVlZCB0aGUgJ25ldycga2V5d29yZCwgYW5kIHRoZSBjb25zdHJ1Y3RvciBpcyBjdXJyaWVkIGZvciAzIGFyZ3VtZW50cy5cbiAqICAgICAgY29uc3Qgc2FsYWQgPSBUaHJlZUxheWVyU2FsYWQoJ01heW9ubmFpc2UnKSgnUG90YXRvIENoaXBzJykoJ0tldGNodXAnKTtcbiAqXG4gKiAgICAgIGNvbnNvbGUubG9nKHNhbGFkLnJlY2lwZSgpKTtcbiAqICAgICAgLy8gQWRkIGEgZG9sbG9wIG9mIE1heW9ubmFpc2VcbiAqICAgICAgLy8gQWRkIGEgZG9sbG9wIG9mIFBvdGF0byBDaGlwc1xuICogICAgICAvLyBBZGQgYSBkb2xsb3Agb2YgS2V0Y2h1cFxuICovXG5cblxudmFyIGNvbnN0cnVjdE4gPVxuLyojX19QVVJFX18qL1xuX2N1cnJ5MihmdW5jdGlvbiBjb25zdHJ1Y3ROKG4sIEZuKSB7XG4gIGlmIChuID4gMTApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbnN0cnVjdG9yIHdpdGggZ3JlYXRlciB0aGFuIHRlbiBhcmd1bWVudHMnKTtcbiAgfVxuXG4gIGlmIChuID09PSAwKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBuZXcgRm4oKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGN1cnJ5KG5BcnkobiwgZnVuY3Rpb24gKCQwLCAkMSwgJDIsICQzLCAkNCwgJDUsICQ2LCAkNywgJDgsICQ5KSB7XG4gICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHJldHVybiBuZXcgRm4oJDApO1xuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIHJldHVybiBuZXcgRm4oJDAsICQxKTtcblxuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gbmV3IEZuKCQwLCAkMSwgJDIpO1xuXG4gICAgICBjYXNlIDQ6XG4gICAgICAgIHJldHVybiBuZXcgRm4oJDAsICQxLCAkMiwgJDMpO1xuXG4gICAgICBjYXNlIDU6XG4gICAgICAgIHJldHVybiBuZXcgRm4oJDAsICQxLCAkMiwgJDMsICQ0KTtcblxuICAgICAgY2FzZSA2OlxuICAgICAgICByZXR1cm4gbmV3IEZuKCQwLCAkMSwgJDIsICQzLCAkNCwgJDUpO1xuXG4gICAgICBjYXNlIDc6XG4gICAgICAgIHJldHVybiBuZXcgRm4oJDAsICQxLCAkMiwgJDMsICQ0LCAkNSwgJDYpO1xuXG4gICAgICBjYXNlIDg6XG4gICAgICAgIHJldHVybiBuZXcgRm4oJDAsICQxLCAkMiwgJDMsICQ0LCAkNSwgJDYsICQ3KTtcblxuICAgICAgY2FzZSA5OlxuICAgICAgICByZXR1cm4gbmV3IEZuKCQwLCAkMSwgJDIsICQzLCAkNCwgJDUsICQ2LCAkNywgJDgpO1xuXG4gICAgICBjYXNlIDEwOlxuICAgICAgICByZXR1cm4gbmV3IEZuKCQwLCAkMSwgJDIsICQzLCAkNCwgJDUsICQ2LCAkNywgJDgsICQ5KTtcbiAgICB9XG4gIH0pKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnN0cnVjdE47Il19