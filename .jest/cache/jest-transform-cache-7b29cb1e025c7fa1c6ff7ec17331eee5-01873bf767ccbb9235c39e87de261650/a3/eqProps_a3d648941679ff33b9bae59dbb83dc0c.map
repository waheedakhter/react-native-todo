{"version":3,"sources":["eqProps.js"],"names":["_curry3","require","equals","eqProps","prop","obj1","obj2","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,MAAM,GAEVD,OAAO,CAAC,UAAD,CAFP;;AA0BA,IAAIE,OAAO,GAEXH,OAAO,CAAC,SAASG,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACzC,SAAOJ,MAAM,CAACG,IAAI,CAACD,IAAD,CAAL,EAAaE,IAAI,CAACF,IAAD,CAAjB,CAAb;AACD,CAFM,CAFP;;AAMAG,MAAM,CAACC,OAAP,GAAiBL,OAAjB","sourcesContent":["var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nmodule.exports = eqProps;"]}