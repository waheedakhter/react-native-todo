{"version":3,"sources":["isArray.js"],"names":["exports","__esModule","_ramda","require","_isFunction","_interopRequireDefault","obj","isArray","curryN","Array","pipe","type","identical","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAmBjG,IAAIC,OAAO,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGJ,WAAW,CAAC,SAAD,CAAf,EAA4BK,KAAK,CAACF,OAAlC,IAA6CE,KAAK,CAACF,OAAnD,GAA6D,CAAC,GAAGL,MAAM,CAACQ,IAAX,EAAiBR,MAAM,CAACS,IAAxB,EAA8B,CAAC,GAAGT,MAAM,CAACU,SAAX,EAAsB,OAAtB,CAA9B,CAAnF,CAAd;AACA,IAAIC,QAAQ,GAAGN,OAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isFunction = _interopRequireDefault(require(\"./isFunction\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if input value is `Array`.\n *\n * @func isArray\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.3.0|v0.3.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotArray|isNotArray}\n * @example\n *\n * RA.isArray([]); //=> true\n * RA.isArray(null); //=> false\n * RA.isArray({}); //=> false\n */\nvar isArray = (0, _ramda.curryN)(1, (0, _isFunction[\"default\"])(Array.isArray) ? Array.isArray : (0, _ramda.pipe)(_ramda.type, (0, _ramda.identical)('Array')));\nvar _default = isArray;\nexports[\"default\"] = _default;"]}