{"version":3,"sources":["flattenProp.js"],"names":["exports","__esModule","_ramda","require","_flattenPath","_interopRequireDefault","obj","flattenProp","curry","prop","of","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAuBjG,IAAIC,WAAW,GAAG,CAAC,GAAGL,MAAM,CAACM,KAAX,EAAkB,UAAUC,IAAV,EAAgBH,GAAhB,EAAqB;AACvD,SAAO,CAAC,GAAGF,YAAY,CAAC,SAAD,CAAhB,EAA6B,CAAC,GAAGF,MAAM,CAACQ,EAAX,EAAeD,IAAf,CAA7B,EAAmDH,GAAnD,CAAP;AACD,CAFiB,CAAlB;AAGA,IAAIK,QAAQ,GAAGJ,WAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBW,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _flattenPath = _interopRequireDefault(require(\"./flattenPath\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Flattens a property so that its fields are spread out into the provided object.\n * It's like {@link RA.spreadProp|spreadProp}, but preserves object under the property path.\n *\n * @func flattenProp\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.19.0|v1.19.0}\n * @category Object\n * @typedef Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {!string|number} prop The property to flatten\n * @param {!Object} obj The provided object\n * @return {!Object} The flattened object\n * @see {@link RA.flattenPath|flattenPath}, {@link RA.spreadProp|spreadProp}\n * @example\n *\n * RA.flattenProp(\n *   'b',\n *   { a: 1, b: { c: 3, d: 4 } }\n * ); // => { a: 1, c: 3, d: 4, b: { c: 3, d: 4 } };\n */\nvar flattenProp = (0, _ramda.curry)(function (prop, obj) {\n  return (0, _flattenPath[\"default\"])((0, _ramda.of)(prop), obj);\n});\nvar _default = flattenProp;\nexports[\"default\"] = _default;"]}