{"version":3,"sources":["isObj.js"],"names":["exports","__esModule","_ramda","require","_isNotNull","_interopRequireDefault","_isFunction","_isOfTypeObject","obj","isObj","curryN","both","either","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIG,WAAW,GAAGD,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAII,eAAe,GAAGF,sBAAsB,CAACF,OAAO,CAAC,2BAAD,CAAR,CAA5C;;AAEA,SAASE,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACP,UAAX,GAAwBO,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AA0BjG,IAAIC,KAAK,GAAG,CAAC,GAAGP,MAAM,CAACQ,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGR,MAAM,CAACS,IAAX,EAAiBP,UAAU,CAAC,SAAD,CAA3B,EAAwC,CAAC,GAAGF,MAAM,CAACU,MAAX,EAAmBL,eAAe,CAAC,SAAD,CAAlC,EAA+CD,WAAW,CAAC,SAAD,CAA1D,CAAxC,CAAtB,CAAZ;AACA,IAAIO,QAAQ,GAAGJ,KAAf;AACAT,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isNotNull = _interopRequireDefault(require(\"./isNotNull\"));\n\nvar _isFunction = _interopRequireDefault(require(\"./isFunction\"));\n\nvar _isOfTypeObject = _interopRequireDefault(require(\"./internal/isOfTypeObject\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint-disable max-len */\n\n/**\n * Checks if input value is language type of `Object`.\n *\n * @func isObj\n * @aliases isObject\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotObj|isNotObj}, {@link RA.isObjLike|isObjLike}, {@link RA.isPlainObj|isPlainObj}\n * @example\n *\n * RA.isObj({}); //=> true\n * RA.isObj([]); //=> true\n * RA.isObj(() => {}); //=> true\n * RA.isObj(null); //=> false\n * RA.isObj(undefined); //=> false\n */\n\n/* eslint-enable max-len */\nvar isObj = (0, _ramda.curryN)(1, (0, _ramda.both)(_isNotNull[\"default\"], (0, _ramda.either)(_isOfTypeObject[\"default\"], _isFunction[\"default\"])));\nvar _default = isObj;\nexports[\"default\"] = _default;"]}