{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","container","SingleNavigatorContext","unregister","register"],"mappings":";;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe,SAAA,oBAAA,GAAgC;AAC7C,wBAAcA,KAAK,CAALA,QAAAA,CAAe;AAAA,WAAM,CAAA,GAAA,UAAA,CAAnC,MAAmC,GAAN;AAAA,GAAfA,CAAd;AAAA;AAAA,MAAM,GAAN;;AACA,MAAMC,SAAS,GAAGD,KAAK,CAALA,UAAAA,CAAiBE,sBAAAA,CAAnC,sBAAkBF,CAAlB;;AAEA,MAAIC,SAAS,KAAb,SAAA,EAA6B;AAC3B,UAAM,IAAA,KAAA,CAAN,wFAAM,CAAN;AAGD;;AAEDD,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAM,QAAN,GAAA,SAAA,CAAM,QAAN;AAAA,QAAkBG,UAAlB,GAAA,SAAA,CAAkBA,UAAlB;AAEAC,IAAAA,QAAQ,CAARA,GAAQ,CAARA;AAEA,WAAO;AAAA,aAAMD,UAAU,CAAvB,GAAuB,CAAhB;AAAA,KAAP;AALFH,GAAAA,EAMG,CAAA,SAAA,EANHA,GAMG,CANHA;AAQA,SAAA,GAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]}