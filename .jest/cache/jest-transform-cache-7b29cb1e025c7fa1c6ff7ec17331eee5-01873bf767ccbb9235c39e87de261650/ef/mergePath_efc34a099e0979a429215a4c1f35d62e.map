{"version":3,"sources":["mergePath.js"],"names":["exports","__esModule","_ramda","require","_mergeRight","_interopRequireDefault","obj","mergePath","curry","path","source","over","lensPath","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAyBjG,IAAIC,SAAS,GAAG,CAAC,GAAGL,MAAM,CAACM,KAAX,EAAkB,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBJ,GAAxB,EAA6B;AAC7D,SAAO,CAAC,GAAGJ,MAAM,CAACS,IAAX,EAAiB,CAAC,GAAGT,MAAM,CAACU,QAAX,EAAqBH,IAArB,CAAjB,EAA6C,CAAC,GAAGL,WAAW,CAAC,SAAD,CAAf,EAA4BM,MAA5B,CAA7C,EAAkFJ,GAAlF,CAAP;AACD,CAFe,CAAhB;AAGA,IAAIO,QAAQ,GAAGN,SAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _mergeRight = _interopRequireDefault(require(\"./mergeRight\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Create a new object with the own properties of the object under the `path`\n * merged with the own properties of the provided `source`.\n * If a key exists in both objects, the value from the `source` object will be used.\n *\n * @func mergePath\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.18.0|v1.18.0}\n * @category Object\n * @sig [k] -> {a} -> {k: {a}} -> {k: {a}}\n * @see {@link RA.mergeProp|mergeProp}\n * @param {!Array} path The property path of the destination object\n * @param {!Object} source The source object\n * @param {!Object} obj The object that has destination object under corresponding property path\n * @return {!Object} The new version of object\n * @example\n *\n * RA.mergePath(\n *  ['outer', 'inner'],\n *  { foo: 3, bar: 4 },\n *  { outer: { inner: { foo: 2 } } }\n * ); //=> { outer: { inner: { foo: 3, bar: 4 } }\n */\nvar mergePath = (0, _ramda.curry)(function (path, source, obj) {\n  return (0, _ramda.over)((0, _ramda.lensPath)(path), (0, _mergeRight[\"default\"])(source), obj);\n});\nvar _default = mergePath;\nexports[\"default\"] = _default;"]}