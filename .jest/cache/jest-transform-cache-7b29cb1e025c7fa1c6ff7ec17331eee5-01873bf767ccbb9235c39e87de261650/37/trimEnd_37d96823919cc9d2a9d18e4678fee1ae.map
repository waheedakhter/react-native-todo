{"version":3,"sources":["trimEnd.js"],"names":["exports","__esModule","trimEndPonyfill","trimEndInvoker","_ramda","require","_String","_interopRequireDefault","_isFunction","obj","invoker","trimEnd","String","prototype","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,cAAR,GAAyBH,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA7E;;AAEA,IAAII,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACF,OAAO,CAAC,qCAAD,CAAR,CAApC;;AAEA,IAAIG,WAAW,GAAGD,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACR,UAAX,GAAwBQ,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIP,eAAe,GAAGI,OAAO,CAAC,SAAD,CAA7B;AACAN,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACA,IAAIC,cAAc,GAAG,CAAC,GAAGC,MAAM,CAACM,OAAX,EAAoB,CAApB,EAAuB,SAAvB,CAArB;AAiBAV,OAAO,CAACG,cAAR,GAAyBA,cAAzB;AACA,IAAIQ,OAAO,GAAG,CAAC,GAAGH,WAAW,CAAC,SAAD,CAAf,EAA4BI,MAAM,CAACC,SAAP,CAAiBF,OAA7C,IAAwDR,cAAxD,GAAyED,eAAvF;AACA,IAAIY,QAAQ,GAAGH,OAAf;AACAX,OAAO,CAAC,SAAD,CAAP,GAAqBc,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.trimEndPonyfill = exports.trimEndInvoker = exports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _String = _interopRequireDefault(require(\"./internal/ponyfills/String.trimEnd\"));\n\nvar _isFunction = _interopRequireDefault(require(\"./isFunction\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar trimEndPonyfill = _String[\"default\"];\nexports.trimEndPonyfill = trimEndPonyfill;\nvar trimEndInvoker = (0, _ramda.invoker)(0, 'trimEnd');\n/**\n * Removes whitespace from the end of a string.\n *\n * @func trimEnd\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.22.0|v2.22.0}\n * @category String\n * @sig String -> String\n * @param {string} value String value to have the whitespace removed from the end\n * @return {string} A new string representing the calling string stripped of whitespace from its end (right end).\n * @see {@link RA.trimEnd|trimEnd}\n * @example\n *\n * RA.trimEnd('abc   '); //=> 'abc'\n */\n\nexports.trimEndInvoker = trimEndInvoker;\nvar trimEnd = (0, _isFunction[\"default\"])(String.prototype.trimEnd) ? trimEndInvoker : trimEndPonyfill;\nvar _default = trimEnd;\nexports[\"default\"] = _default;"]}