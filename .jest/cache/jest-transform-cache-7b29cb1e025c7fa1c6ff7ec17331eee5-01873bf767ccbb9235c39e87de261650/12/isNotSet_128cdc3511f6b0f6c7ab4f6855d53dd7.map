{"version":3,"sources":["isNotSet.js"],"names":["exports","__esModule","_ramda","require","_isSet","_interopRequireDefault","obj","isNotSet","complement","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACF,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAoBjG,IAAIC,QAAQ,GAAG,CAAC,GAAGL,MAAM,CAACM,UAAX,EAAuBJ,MAAM,CAAC,SAAD,CAA7B,CAAf;AACA,IAAIK,QAAQ,GAAGF,QAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isSet = _interopRequireDefault(require(\"./isSet\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if value is complement of `Set` object.\n *\n * @func isNotSet\n * @memberOf RA\n * @category Type\n * @since {@link https://char0n.github.io/ramda-adjunct/2.27.0|v2.27.0}\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isSet|isSet}\n * @example\n *\n * RA.isNotSet(new Map()); //=> true\n * RA.isNotSet(new Set()); //=> false\n * RA.isNotSet(new Set([1,2]); //=> false\n * RA.isNotSet(new Object()); //=> true\n */\nvar isNotSet = (0, _ramda.complement)(_isSet[\"default\"]);\nvar _default = isNotSet;\nexports[\"default\"] = _default;"]}