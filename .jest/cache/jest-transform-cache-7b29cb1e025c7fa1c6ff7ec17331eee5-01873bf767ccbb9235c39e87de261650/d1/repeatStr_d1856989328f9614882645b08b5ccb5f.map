{"version":3,"sources":["repeatStr.js"],"names":["exports","__esModule","repeatStrPonyfill","repeatStrInvoker","_ramda","require","_String","_interopRequireDefault","_isFunction","obj","curry","flip","invoker","repeatStr","String","prototype","repeat","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,iBAAR,GAA4BF,OAAO,CAACG,gBAAR,GAA2BH,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAAjF;;AAEA,IAAII,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACF,OAAO,CAAC,oCAAD,CAAR,CAApC;;AAEA,IAAIG,WAAW,GAAGD,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACR,UAAX,GAAwBQ,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIP,iBAAiB,GAAG,CAAC,GAAGE,MAAM,CAACM,KAAX,EAAkBJ,OAAO,CAAC,SAAD,CAAzB,CAAxB;AACAN,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACA,IAAIC,gBAAgB,GAAG,CAAC,GAAGC,MAAM,CAACO,IAAX,EAAiB,CAAC,GAAGP,MAAM,CAACQ,OAAX,EAAoB,CAApB,EAAuB,QAAvB,CAAjB,CAAvB;AAkBAZ,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;AACA,IAAIU,SAAS,GAAG,CAAC,GAAGL,WAAW,CAAC,SAAD,CAAf,EAA4BM,MAAM,CAACC,SAAP,CAAiBC,MAA7C,IAAuDb,gBAAvD,GAA0ED,iBAA1F;AACA,IAAIe,QAAQ,GAAGJ,SAAf;AACAb,OAAO,CAAC,SAAD,CAAP,GAAqBiB,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.repeatStrPonyfill = exports.repeatStrInvoker = exports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _String = _interopRequireDefault(require(\"./internal/ponyfills/String.repeat\"));\n\nvar _isFunction = _interopRequireDefault(require(\"./isFunction\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar repeatStrPonyfill = (0, _ramda.curry)(_String[\"default\"]);\nexports.repeatStrPonyfill = repeatStrPonyfill;\nvar repeatStrInvoker = (0, _ramda.flip)((0, _ramda.invoker)(1, 'repeat'));\n/**\n * Constructs and returns a new string which contains the specified\n * number of copies of the string on which it was called, concatenated together.\n *\n * @func repeatStr\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.11.0|v2.11.0}\n * @category List\n * @sig String -> Number -> String\n * @param {string} value String value to be repeated\n * @param {number} count An integer between 0 and +∞: [0, +∞), indicating the number of times to repeat the string in the newly-created string that is to be returned\n * @return {string} A new string containing the specified number of copies of the given string\n * @example\n *\n * RA.repeatStr('a', 3); //=> 'aaa'\n */\n\nexports.repeatStrInvoker = repeatStrInvoker;\nvar repeatStr = (0, _isFunction[\"default\"])(String.prototype.repeat) ? repeatStrInvoker : repeatStrPonyfill;\nvar _default = repeatStr;\nexports[\"default\"] = _default;"]}