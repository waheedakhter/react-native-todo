{"version":3,"sources":["_stepCat.js"],"names":["_objectAssign","require","_identity","_isArrayLike","_isTransformer","objOf","_stepCatArray","Array","xs","x","push","_stepCatString","String","a","b","_stepCatObject","Object","result","input","_stepCat","obj","Error","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAEjBC,OAAO,CAAC,iBAAD,CAFP;;AAIA,IAAIC,SAAS,GAEbD,OAAO,CAAC,aAAD,CAFP;;AAIA,IAAIE,YAAY,GAEhBF,OAAO,CAAC,gBAAD,CAFP;;AAIA,IAAIG,cAAc,GAElBH,OAAO,CAAC,kBAAD,CAFP;;AAIA,IAAII,KAAK,GAETJ,OAAO,CAAC,UAAD,CAFP;;AAIA,IAAIK,aAAa,GAAG;AAClB,uBAAqBC,KADH;AAElB,uBAAqB,wBAAUC,EAAV,EAAcC,CAAd,EAAiB;AACpCD,IAAAA,EAAE,CAACE,IAAH,CAAQD,CAAR;AACA,WAAOD,EAAP;AACD,GALiB;AAMlB,yBAAuBN;AANL,CAApB;AAQA,IAAIS,cAAc,GAAG;AACnB,uBAAqBC,MADF;AAEnB,uBAAqB,wBAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnC,WAAOD,CAAC,GAAGC,CAAX;AACD,GAJkB;AAKnB,yBAAuBZ;AALJ,CAArB;AAOA,IAAIa,cAAc,GAAG;AACnB,uBAAqBC,MADF;AAEnB,uBAAqB,wBAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AAC5C,WAAOlB,aAAa,CAACiB,MAAD,EAASd,YAAY,CAACe,KAAD,CAAZ,GAAsBb,KAAK,CAACa,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAA3B,GAAkDA,KAA3D,CAApB;AACD,GAJkB;AAKnB,yBAAuBhB;AALJ,CAArB;;AAQA,SAASiB,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAIhB,cAAc,CAACgB,GAAD,CAAlB,EAAyB;AACvB,WAAOA,GAAP;AACD;;AAED,MAAIjB,YAAY,CAACiB,GAAD,CAAhB,EAAuB;AACrB,WAAOd,aAAP;AACD;;AAED,MAAI,OAAOc,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAOT,cAAP;AACD;;AAED,MAAI,OAAOS,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAOL,cAAP;AACD;;AAED,QAAM,IAAIM,KAAJ,CAAU,mCAAmCD,GAA7C,CAAN;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,QAAjB","sourcesContent":["var _objectAssign =\n/*#__PURE__*/\nrequire(\"./_objectAssign\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./_identity\");\n\nvar _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n\nvar objOf =\n/*#__PURE__*/\nrequire(\"../objOf\");\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nfunction _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}\n\nmodule.exports = _stepCat;"]}