{"version":3,"sources":["defaultWhen.js"],"names":["exports","__esModule","_ramda","require","defaultWhen","curry","predicate","defaultVal","val","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAqBA,IAAIC,WAAW,GAAG,CAAC,GAAGF,MAAM,CAACG,KAAX,EAAkB,UAAUC,SAAV,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsC;AACxE,SAAOF,SAAS,CAACE,GAAD,CAAT,GAAiBD,UAAjB,GAA8BC,GAArC;AACD,CAFiB,CAAlB;AAGA,IAAIC,QAAQ,GAAGL,WAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Returns the second argument if predicate function returns `true`,\n * otherwise the third argument is returned.\n *\n * @func defaultWhen\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.2.0|v2.2.0}\n * @category Logic\n * @sig  (a -> Boolean) -> b -> a -> a | b\n * @param {!function} predicate The predicate function\n * @param {*} defaultVal The default value\n * @param {*} val `val` will be returned instead of `defaultVal` if predicate returns false\n * @return {*} The `val` if predicate returns `false`, otherwise the default value\n * @see {@link http://ramdajs.com/docs/#defaultTo|R.defaultTo}\n * @example\n *\n * RA.defaultWhen(RA.isNull, 1, null); // => 1\n * RA.defaultWhen(RA.isNull, 1, 2); // => 2\n */\nvar defaultWhen = (0, _ramda.curry)(function (predicate, defaultVal, val) {\n  return predicate(val) ? defaultVal : val;\n});\nvar _default = defaultWhen;\nexports[\"default\"] = _default;"]}