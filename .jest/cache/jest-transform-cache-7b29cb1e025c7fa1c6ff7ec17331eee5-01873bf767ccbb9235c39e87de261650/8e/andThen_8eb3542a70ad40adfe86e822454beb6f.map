{"version":3,"sources":["andThen.js"],"names":["_curry2","require","_assertPromise","andThen","f","p","then","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,cAAc,GAElBD,OAAO,CAAC,2BAAD,CAFP;;AA+BA,IAAIE,OAAO,GAEXH,OAAO,CAAC,SAASG,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AAC7BH,EAAAA,cAAc,CAAC,SAAD,EAAYG,CAAZ,CAAd;;AAEA,SAAOA,CAAC,CAACC,IAAF,CAAOF,CAAP,CAAP;AACD,CAJM,CAFP;;AAQAG,MAAM,CAACC,OAAP,GAAiBL,OAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _assertPromise =\n/*#__PURE__*/\nrequire(\"./internal/_assertPromise\");\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n */\n\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nmodule.exports = andThen;"]}