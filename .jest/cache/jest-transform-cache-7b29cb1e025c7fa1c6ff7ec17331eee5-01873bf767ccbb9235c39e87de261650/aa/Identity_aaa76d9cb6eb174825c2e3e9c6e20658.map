{"version":3,"sources":["Identity.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","__esModule","_ramda","require","fl","_interopRequireWildcard","_traits","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","Identity","_fl$of","_fl$ap","_fl$map","_fl$equals","_fl$concat","_fl$chain","_fl$lte","_fl$empty","_fl$contramap","value","applyWithFn","applyTrait","ap","fn","functorTrait","map","setoid","setoidTrait","equals","semigroup","semigroupTrait","concat","chainTrait","chain","ord","ordTrait","lte","of","empty","_this","contramap","_value","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar fl = _interopRequireWildcard(require(\"./mapping\"));\n\nvar _traits = require(\"./traits\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\n * The simplest {@link https://github.com/fantasyland/fantasy-land|fantasy-land}\n * compatible monad which attaches no information to values.\n *\n * The Identity type is a very simple type that has no interesting side effects and\n * is effectively just a container of some value. So why does it exist ?\n * The Identity type is often used as the base monad of a monad\n * transformer when no other behaviour is required.\n *\n * @memberOf RA\n * @implements\n * {@link https://github.com/fantasyland/fantasy-land#apply|Apply},\n * {@link https://github.com/fantasyland/fantasy-land#applicative|Applicative},\n * {@link https://github.com/fantasyland/fantasy-land#functor|Functor},\n * {@link https://github.com/fantasyland/fantasy-land#setoid|Setoid},\n * {@link https://github.com/fantasyland/fantasy-land#semigroup|Semigroup},\n * {@link https://github.com/fantasyland/fantasy-land#chain|Chain},\n * {@link https://github.com/fantasyland/fantasy-land#monad|Monad},\n * {@link https://github.com/fantasyland/fantasy-land#ord|Ord},\n * {@link https://github.com/fantasyland/fantasy-land#monoid|Monoid*},\n * {@link https://github.com/fantasyland/fantasy-land#contravariant|Contravariant}\n * @since {@link https://char0n.github.io/ramda-adjunct/1.8.0|v1.8.0}\n */\nvar Identity = /*#__PURE__*/function (_fl$of, _fl$ap, _fl$map, _fl$equals, _fl$concat, _fl$chain, _fl$lte, _fl$empty, _fl$contramap) {\n  /**\n   * Private constructor. Use {@link RA.Identity.of|Identity.of} instead.\n   *\n   * @param {*} value\n   * @return {RA.Identity}\n   */\n  function Identity(value) {\n    _classCallCheck(this, Identity);\n\n    this.value = value;\n  }\n  /**\n   * Catamorphism for a value.\n   * @returns {*}\n   * @example\n   *\n   * const a = Identity.of(1);\n   * a.get(); //=> 1\n   */\n\n\n  _createClass(Identity, [{\n    key: \"get\",\n    value: function get() {\n      return this.value;\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#apply|Apply} specification.\n     *\n     * @sig ap :: Apply f => f a ~> f (a -> b) -> f b\n     * @param {RA.Identity} applyWithFn\n     * @return {RA.Identity}\n     * @example\n     *\n     * const a = Identity.of(1);\n     * const b = Identity.of(1).map(a => b => a + b);\n     *\n     * a.ap(b); //=> Identity(2)\n     */\n\n  }, {\n    key: _fl$ap,\n    value: function value(applyWithFn) {\n      return _traits.applyTrait[fl.ap].call(this, applyWithFn);\n    }\n  }, {\n    key: \"ap\",\n    value: function ap(applyWithFn) {\n      return this[fl.ap](applyWithFn);\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#functor|Functor} specification.\n     *\n     * @sig map :: Functor f => f a ~> (a -> b) -> f b\n     * @param {Function} fn\n     * @return {RA.Identity}\n     * @example\n     *\n     * const a = Identity.of(1);\n     * a.map(a => a + 1); //=> Identity(2)\n     */\n\n  }, {\n    key: _fl$map,\n    value: function value(fn) {\n      return _traits.functorTrait[fl.map].call(this, fn);\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      return this[fl.map](fn);\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#setoid|Setoid} specification.\n     *\n     * @sig equals :: Setoid a => a ~> a -> Boolean\n     * @param {RA.Identity} setoid\n     * @return {boolean}\n     * @example\n     *\n     * const a = Identity.of(1);\n     * const b = Identity.of(1);\n     * const c = Identity.of(2);\n     *\n     * a.equals(b); //=> true\n     * a.equals(c); //=> false\n     */\n\n  }, {\n    key: _fl$equals,\n    value: function value(setoid) {\n      return _traits.setoidTrait[fl.equals].call(this, setoid);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(setoid) {\n      return this[fl.equals](setoid);\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#semigroup|Semigroup} specification.\n     *\n     * @sig concat :: Semigroup a => a ~> a -> a\n     * @param {RA.Identity} semigroup\n     * @return {RA.Identity}\n     * @example\n     *\n     * const a = Identity.of(1);\n     * const b = Identity.of(1);\n     * a.concat(b); //=> 2\n     *\n     * const c = Identity.of('c');\n     * const d = Identity.of('d');\n     * c.concat(d); //=> 'cd'\n     *\n     * const e = Identity.of(['e']);\n     * const f = Identity.of(['f']);\n     * e.concat(f); //=> ['e', 'f']\n     */\n\n  }, {\n    key: _fl$concat,\n    value: function value(semigroup) {\n      return _traits.semigroupTrait[fl.concat].call(this, semigroup);\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(semigroup) {\n      return this[fl.concat](semigroup);\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#chain|Chain} specification.\n     *\n     * @sig chain :: Chain m => m a ~> (a -> m b) -> m b\n     * @param {Function} fn Function returning the value of the same {@link https://github.com/fantasyland/fantasy-land#semigroup|Chain}\n     * @return {RA.Identity}\n     * @example\n     *\n     * const a = Identity.of(1);\n     * const fn = val => Identity.of(val + 1);\n     *\n     * a.chain(fn).chain(fn); //=> Identity(3)\n     */\n\n  }, {\n    key: _fl$chain,\n    value: function value(fn) {\n      return _traits.chainTrait[fl.chain].call(this, fn);\n    }\n  }, {\n    key: \"chain\",\n    value: function chain(fn) {\n      return this[fl.chain](fn);\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#ord|Ord} specification.\n     *\n     * @sig lte :: Ord a => a ~> a -> Boolean\n     * @param {RA.Identity} ord\n     * @return {boolean}\n     * @example\n     *\n     * const a = Identity.of(1);\n     * const b = Identity.of(1);\n     * const c = Identity.of(2);\n     *\n     * a.lte(b); //=> true\n     * a.lte(c); //=> true\n     * c.lte(a); //=> false\n     */\n\n  }, {\n    key: _fl$lte,\n    value: function value(ord) {\n      return _traits.ordTrait[fl.lte].call(this, ord);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(ord) {\n      return this[fl.lte](ord);\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#monoid|Monoid*} specification.\n     * Partial implementation of Monoid specification. `empty` method on instance only, returning\n     * identity value of the wrapped type. Using `R.empty` under the hood.\n     *\n     *\n     * @sig empty :: Monoid m => () -> m\n     * @return {RA.Identity}\n     * @example\n     *\n     * const a = Identity.of('test');\n     * const i = a.empty();\n     *\n     * a.concat(i); //=> Identity('string');\n     * i.concat(a); //=> Identity('string');\n     */\n\n  }, {\n    key: _fl$empty,\n    value: function value() {\n      return this.constructor.of((0, _ramda.empty)(this.value));\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return this[fl.empty]();\n    }\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#contravariant|Contravariant} specification.\n     *\n     * @sig contramap :: Contravariant f => f a ~> (b -> a) -> f b\n     * @param {Function} fn\n     * @return {RA.Identity}\n     * @example\n     *\n     * const identity = a => a;\n     * const add1 = a => a + 1;\n     * const divide2 = a => a / 2;\n     *\n     * Identity.of(divide2).contramap(add1).get()(3); //=> 2\n     * Identity.of(identity).contramap(divide2).contramap(add1).get()(3); //=> 2\n     * Identity.of(identity).contramap(a => divide2(add1(a))).get()(3); //=> 2\n     */\n\n  }, {\n    key: _fl$contramap,\n    value: function value(fn) {\n      var _this = this;\n\n      return this.constructor.of(function (value) {\n        return _this.value(fn(value));\n      });\n    }\n  }, {\n    key: \"contramap\",\n    value: function contramap(fn) {\n      return this[fl.contramap](fn);\n    }\n  }], [{\n    key: _fl$of,\n    value:\n    /**\n     * Fantasy land {@link https://github.com/fantasyland/fantasy-land#applicative|Applicative} specification.\n     *\n     * @static\n     * @sig of :: Applicative f => a -> f a\n     * @param {*} value\n     * @returns {RA.Identity}\n     * @example\n     *\n     * const a = Identity.of(1); //=> Identity(1)\n     */\n    function value(_value) {\n      return new Identity(_value);\n    }\n  }, {\n    key: \"of\",\n    value: function of(value) {\n      return new Identity(value);\n    }\n    /**\n     * @static\n     */\n\n  }, {\n    key: '@@type',\n    get: function get() {\n      return 'RA/Identity';\n    }\n  }]);\n\n  return Identity;\n}(fl.of, fl.ap, fl.map, fl.equals, fl.concat, fl.chain, fl.lte, fl.empty, fl.contramap);\n\nvar _default = Identity;\nexports[\"default\"] = _default;"]}