{"version":3,"sources":["split.js"],"names":["invoker","require","split","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,WAAD,CAFP;;AAyBA,IAAIC,KAAK,GAETF,OAAO,CAAC,CAAD,EAAI,OAAJ,CAFP;AAGAG,MAAM,CAACC,OAAP,GAAiBF,KAAjB","sourcesContent":["var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nmodule.exports = split;"]}