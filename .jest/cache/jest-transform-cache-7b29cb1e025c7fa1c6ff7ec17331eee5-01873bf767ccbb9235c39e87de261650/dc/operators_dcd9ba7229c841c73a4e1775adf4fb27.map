{"version":3,"sources":["operators.js"],"names":["operator","createAnimatedOperator","add","sub","multiply","divide","pow","modulo","sqrt","log","sin","cos","exp","round","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","and","or","defined","not","tan","acos","asin","atan","abs","ceil","floor","max","min"],"mappings":";;;;;;;AAAA,IAAA,iBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAMA,QAAQ,GAAGC,iBAAAA,CAAjB,sBAAA;AAEO,IAAMC,GAAG,GAAGF,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMG,GAAG,GAAGH,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMI,QAAQ,GAAGJ,QAAQ,CAAzB,UAAyB,CAAzB;;AACA,IAAMK,MAAM,GAAGL,QAAQ,CAAvB,QAAuB,CAAvB;;AACA,IAAMM,GAAG,GAAGN,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMO,MAAM,GAAGP,QAAQ,CAAvB,QAAuB,CAAvB;;AACA,IAAMQ,IAAI,GAAGR,QAAQ,CAArB,MAAqB,CAArB;;AACA,IAAMS,GAAG,GAAGT,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMU,GAAG,GAAGV,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMW,GAAG,GAAGX,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMY,GAAG,GAAGZ,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMa,KAAK,GAAGb,QAAQ,CAAtB,OAAsB,CAAtB;;AACA,IAAMc,QAAQ,GAAGd,QAAQ,CAAzB,UAAyB,CAAzB;;AACA,IAAMe,EAAE,GAAGf,QAAQ,CAAnB,IAAmB,CAAnB;;AACA,IAAMgB,WAAW,GAAGhB,QAAQ,CAA5B,aAA4B,CAA5B;;AACA,IAAMiB,QAAQ,GAAGjB,QAAQ,CAAzB,UAAyB,CAAzB;;AACA,IAAMkB,WAAW,GAAGlB,QAAQ,CAA5B,aAA4B,CAA5B;;AACA,IAAMmB,GAAG,GAAGnB,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMoB,GAAG,GAAGpB,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMqB,EAAE,GAAGrB,QAAQ,CAAnB,IAAmB,CAAnB;;AACA,IAAMsB,OAAO,GAAGtB,QAAQ,CAAxB,SAAwB,CAAxB;;AACA,IAAMuB,GAAG,GAAGvB,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMwB,GAAG,GAAGxB,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMyB,IAAI,GAAGzB,QAAQ,CAArB,MAAqB,CAArB;;AACA,IAAM0B,IAAI,GAAG1B,QAAQ,CAArB,MAAqB,CAArB;;AACA,IAAM2B,IAAI,GAAG3B,QAAQ,CAArB,MAAqB,CAArB;;AACA,IAAM4B,GAAG,GAAG5B,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAM6B,IAAI,GAAG7B,QAAQ,CAArB,MAAqB,CAArB;;AACA,IAAM8B,KAAK,GAAG9B,QAAQ,CAAtB,OAAsB,CAAtB;;AACA,IAAM+B,GAAG,GAAG/B,QAAQ,CAApB,KAAoB,CAApB;;AACA,IAAMgC,GAAG,GAAGhC,QAAQ,CAApB,KAAoB,CAApB","sourcesContent":["import { createAnimatedOperator } from './core/AnimatedOperator';\n\nconst operator = createAnimatedOperator;\n\nexport const add = operator('add');\nexport const sub = operator('sub');\nexport const multiply = operator('multiply');\nexport const divide = operator('divide');\nexport const pow = operator('pow');\nexport const modulo = operator('modulo');\nexport const sqrt = operator('sqrt');\nexport const log = operator('log');\nexport const sin = operator('sin');\nexport const cos = operator('cos');\nexport const exp = operator('exp');\nexport const round = operator('round');\nexport const lessThan = operator('lessThan');\nexport const eq = operator('eq');\nexport const greaterThan = operator('greaterThan');\nexport const lessOrEq = operator('lessOrEq');\nexport const greaterOrEq = operator('greaterOrEq');\nexport const neq = operator('neq');\nexport const and = operator('and');\nexport const or = operator('or');\nexport const defined = operator('defined');\nexport const not = operator('not');\nexport const tan = operator('tan');\nexport const acos = operator('acos');\nexport const asin = operator('asin');\nexport const atan = operator('atan');\nexport const abs = operator('abs');\nexport const ceil = operator('ceil');\nexport const floor = operator('floor');\nexport const max = operator('max');\nexport const min = operator('min');\n"]}