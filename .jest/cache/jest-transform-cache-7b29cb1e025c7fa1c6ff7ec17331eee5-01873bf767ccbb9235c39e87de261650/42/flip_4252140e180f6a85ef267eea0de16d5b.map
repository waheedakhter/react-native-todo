{"version":3,"sources":["flip.js"],"names":["_curry1","require","curryN","flip","fn","length","a","b","args","Array","prototype","slice","call","arguments","apply","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,MAAM,GAEVD,OAAO,CAAC,UAAD,CAFP;;AAyBA,IAAIE,IAAI,GAERH,OAAO,CAAC,SAASG,IAAT,CAAcC,EAAd,EAAkB;AACxB,SAAOF,MAAM,CAACE,EAAE,CAACC,MAAJ,EAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACvC,QAAIC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACAL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUD,CAAV;AACAC,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUF,CAAV;AACA,WAAOF,EAAE,CAACU,KAAH,CAAS,IAAT,EAAeN,IAAf,CAAP;AACD,GALY,CAAb;AAMD,CAPM,CAFP;;AAWAO,MAAM,CAACC,OAAP,GAAiBb,IAAjB","sourcesContent":["var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nmodule.exports = flip;"]}