{"version":3,"sources":["fnull.js"],"names":["exports","__esModule","_ramda","require","_defaultWhen","_interopRequireDefault","_mapIndexed","obj","fnull","curry","fn","defaults","curryN","length","_len","arguments","args","Array","_key","argsWithDefaults","val","idx","isNil","apply","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAIG,WAAW,GAAGD,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAsBjG,IAAIC,KAAK,GAAG,CAAC,GAAGN,MAAM,CAACO,KAAX,EAAkB,UAAUC,EAAV,EAAcC,QAAd,EAAwB;AACpD,SAAO,CAAC,GAAGT,MAAM,CAACU,MAAX,EAAmBF,EAAE,CAACG,MAAtB,EAA8B,YAAY;AAC/C,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACF,MAArB,EAA6BG,IAAI,GAAG,IAAIC,KAAJ,CAAUH,IAAV,CAApC,EAAqDI,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGJ,IAA3E,EAAiFI,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaH,SAAS,CAACG,IAAD,CAAtB;AACD;;AAED,QAAIC,gBAAgB,GAAG,CAAC,GAAGb,WAAW,CAAC,SAAD,CAAf,EAA4B,UAAUc,GAAV,EAAeC,GAAf,EAAoB;AACrE,aAAO,CAAC,GAAGjB,YAAY,CAAC,SAAD,CAAhB,EAA6BF,MAAM,CAACoB,KAApC,EAA2CX,QAAQ,CAACU,GAAD,CAAnD,EAA0DD,GAA1D,CAAP;AACD,KAFsB,EAEpBJ,IAFoB,CAAvB;AAGA,WAAO,CAAC,GAAGd,MAAM,CAACqB,KAAX,EAAkBb,EAAlB,EAAsBS,gBAAtB,CAAP;AACD,GATM,CAAP;AAUD,CAXW,CAAZ;AAYA,IAAIK,QAAQ,GAAGhB,KAAf;AACAR,OAAO,CAAC,SAAD,CAAP,GAAqBwB,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _defaultWhen = _interopRequireDefault(require(\"./defaultWhen\"));\n\nvar _mapIndexed = _interopRequireDefault(require(\"./mapIndexed\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Returns a function which is called with the given arguments. If any of the given arguments are null or undefined,\n * the corresponding default value for that argument is used instead.\n *\n * @func fnull\n * @memberOf RA\n * @category Function\n * @sig (a ... -> b) -> [c] -> a ... | c -> b\n * @param {Function} function to be executed\n * @param {Array} defaults default arguments\n * @return {Function} will apply provided arguments or default ones\n * @example\n *\n * const addDefaults = RA.fnull((a, b) => a + b, [4, 5])\n *\n * addDefaults(1, 2); // => 3\n * addDefaults(null, 2); // => 6\n * addDefaults(2, null); // => 7\n * addDefaults(undefined, undefined); // => 9\n */\nvar fnull = (0, _ramda.curry)(function (fn, defaults) {\n  return (0, _ramda.curryN)(fn.length, function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var argsWithDefaults = (0, _mapIndexed[\"default\"])(function (val, idx) {\n      return (0, _defaultWhen[\"default\"])(_ramda.isNil, defaults[idx], val);\n    }, args);\n    return (0, _ramda.apply)(fn, argsWithDefaults);\n  });\n});\nvar _default = fnull;\nexports[\"default\"] = _default;"]}