{"version":3,"sources":["useBackButton.tsx"],"names":["React","subscription","navigation","ref"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGe,SAAA,aAAA,CAAA,GAAA,EAEb;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAMC,YAAY,GAAG,YAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,mBAAA,EAEnB,YAAM;AACJ,UAAMC,UAAU,GAAGC,GAAG,CAAtB,OAAA;;AAEA,UAAID,UAAU,IAAd,IAAA,EAAwB;AACtB,eAAA,KAAA;AACD;;AAED,UAAIA,UAAU,CAAd,SAAIA,EAAJ,EAA4B;AAC1BA,QAAAA,UAAU,CAAVA,MAAAA;AAEA,eAAA,IAAA;AACD;;AAED,aAAA,KAAA;AAfJ,KAAqB,CAArB;;AAmBA,WAAO;AAAA,aAAMD,YAAY,CAAzB,MAAaA,EAAN;AAAA,KAAP;AApBFD,GAAAA,EAqBG,CArBHA,GAqBG,CArBHA;AAsBD","sourcesContent":["import * as React from 'react';\nimport { BackHandler } from 'react-native';\nimport type { NavigationContainerRef } from '@react-navigation/core';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n"]}