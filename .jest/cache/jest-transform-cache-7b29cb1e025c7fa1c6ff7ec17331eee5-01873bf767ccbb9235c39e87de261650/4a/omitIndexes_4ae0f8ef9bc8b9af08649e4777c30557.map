{"version":3,"sources":["omitIndexes.js"],"names":["exports","__esModule","_ramda","require","rejectIndexed","addIndex","reject","containsIndex","curry","indexes","val","index","contains","omitIndexes","list","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAGA,IAAIC,aAAa,GAAG,CAAC,GAAGF,MAAM,CAACG,QAAX,EAAqBH,MAAM,CAACI,MAA5B,CAApB;AACA,IAAIC,aAAa,GAAG,CAAC,GAAGL,MAAM,CAACM,KAAX,EAAkB,UAAUC,OAAV,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AACnE,SAAO,CAAC,GAAGT,MAAM,CAACU,QAAX,EAAqBD,KAArB,EAA4BF,OAA5B,CAAP;AACD,CAFmB,CAApB;AAoBA,IAAII,WAAW,GAAG,CAAC,GAAGX,MAAM,CAACM,KAAX,EAAkB,UAAUC,OAAV,EAAmBK,IAAnB,EAAyB;AAC3D,SAAOV,aAAa,CAACG,aAAa,CAACE,OAAD,CAAd,EAAyBK,IAAzB,CAApB;AACD,CAFiB,CAAlB;AAGA,IAAIC,QAAQ,GAAGF,WAAf;AACAb,OAAO,CAAC,SAAD,CAAP,GAAqBe,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n// helpers\nvar rejectIndexed = (0, _ramda.addIndex)(_ramda.reject);\nvar containsIndex = (0, _ramda.curry)(function (indexes, val, index) {\n  return (0, _ramda.contains)(index, indexes);\n});\n/**\n * Returns a partial copy of an array omitting the indexes specified.\n *\n * @func omitIndexes\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.19.0|v1.19.0}\n * @category List\n * @sig [Int] -> [a] -> [a]\n * @see {@link http://ramdajs.com/docs/#omit|R.omit}, {@link RA.pickIndexes|pickIndexes}\n * @param {!Array} indexes The array of indexes to omit from the new array\n * @param {!Array} list The array to copy from\n * @return {!Array} The new array with omitted indexes\n * @example\n *\n * RA.omitIndexes([-1, 1, 3], ['a', 'b', 'c', 'd']); //=> ['a', 'c']\n */\n\nvar omitIndexes = (0, _ramda.curry)(function (indexes, list) {\n  return rejectIndexed(containsIndex(indexes), list);\n});\nvar _default = omitIndexes;\nexports[\"default\"] = _default;"]}