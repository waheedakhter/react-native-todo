a9f61b2fc163093ca2c1635457289cda
var _arity = require("./internal/_arity");

var _concat = require("./internal/_concat");

var _curry2 = require("./internal/_curry2");

var tryCatch = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});

module.exports = tryCatch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyeUNhdGNoLmpzIl0sIm5hbWVzIjpbIl9hcml0eSIsInJlcXVpcmUiLCJfY29uY2F0IiwiX2N1cnJ5MiIsInRyeUNhdGNoIiwiX3RyeUNhdGNoIiwidHJ5ZXIiLCJjYXRjaGVyIiwibGVuZ3RoIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTSxHQUVWQyxPQUFPLENBQUMsbUJBQUQsQ0FGUDs7QUFJQSxJQUFJQyxPQUFPLEdBRVhELE9BQU8sQ0FBQyxvQkFBRCxDQUZQOztBQUlBLElBQUlFLE9BQU8sR0FFWEYsT0FBTyxDQUFDLG9CQUFELENBRlA7O0FBNEJBLElBQUlHLFFBQVEsR0FFWkQsT0FBTyxDQUFDLFNBQVNFLFNBQVQsQ0FBbUJDLEtBQW5CLEVBQTBCQyxPQUExQixFQUFtQztBQUN6QyxTQUFPUCxNQUFNLENBQUNNLEtBQUssQ0FBQ0UsTUFBUCxFQUFlLFlBQVk7QUFDdEMsUUFBSTtBQUNGLGFBQU9GLEtBQUssQ0FBQ0csS0FBTixDQUFZLElBQVosRUFBa0JDLFNBQWxCLENBQVA7QUFDRCxLQUZELENBRUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1YsYUFBT0osT0FBTyxDQUFDRSxLQUFSLENBQWMsSUFBZCxFQUFvQlAsT0FBTyxDQUFDLENBQUNTLENBQUQsQ0FBRCxFQUFNRCxTQUFOLENBQTNCLENBQVA7QUFDRDtBQUNGLEdBTlksQ0FBYjtBQU9ELENBUk0sQ0FGUDs7QUFZQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxRQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfYXJpdHkgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vaW50ZXJuYWwvX2FyaXR5XCIpO1xuXG52YXIgX2NvbmNhdCA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fY29uY2F0XCIpO1xuXG52YXIgX2N1cnJ5MiA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fY3VycnkyXCIpO1xuLyoqXG4gKiBgdHJ5Q2F0Y2hgIHRha2VzIHR3byBmdW5jdGlvbnMsIGEgYHRyeWVyYCBhbmQgYSBgY2F0Y2hlcmAuIFRoZSByZXR1cm5lZFxuICogZnVuY3Rpb24gZXZhbHVhdGVzIHRoZSBgdHJ5ZXJgOyBpZiBpdCBkb2VzIG5vdCB0aHJvdywgaXQgc2ltcGx5IHJldHVybnMgdGhlXG4gKiByZXN1bHQuIElmIHRoZSBgdHJ5ZXJgICpkb2VzKiB0aHJvdywgdGhlIHJldHVybmVkIGZ1bmN0aW9uIGV2YWx1YXRlcyB0aGVcbiAqIGBjYXRjaGVyYCBmdW5jdGlvbiBhbmQgcmV0dXJucyBpdHMgcmVzdWx0LiBOb3RlIHRoYXQgZm9yIGVmZmVjdGl2ZVxuICogY29tcG9zaXRpb24gd2l0aCB0aGlzIGZ1bmN0aW9uLCBib3RoIHRoZSBgdHJ5ZXJgIGFuZCBgY2F0Y2hlcmAgZnVuY3Rpb25zXG4gKiBtdXN0IHJldHVybiB0aGUgc2FtZSB0eXBlIG9mIHJlc3VsdHMuXG4gKlxuICogQGZ1bmNcbiAqIEBtZW1iZXJPZiBSXG4gKiBAc2luY2UgdjAuMjAuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAc2lnICguLi54IC0+IGEpIC0+ICgoZSwgLi4ueCkgLT4gYSkgLT4gKC4uLnggLT4gYSlcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyeWVyIFRoZSBmdW5jdGlvbiB0aGF0IG1heSB0aHJvdy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhdGNoZXIgVGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBldmFsdWF0ZWQgaWYgYHRyeWVyYCB0aHJvd3MuXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gQSBuZXcgZnVuY3Rpb24gdGhhdCB3aWxsIGNhdGNoIGV4Y2VwdGlvbnMgYW5kIHNlbmQgdGhlbiB0byB0aGUgY2F0Y2hlci5cbiAqIEBleGFtcGxlXG4gKlxuICogICAgICBSLnRyeUNhdGNoKFIucHJvcCgneCcpLCBSLkYpKHt4OiB0cnVlfSk7IC8vPT4gdHJ1ZVxuICogICAgICBSLnRyeUNhdGNoKCgpID0+IHsgdGhyb3cgJ2Zvbyd9LCBSLmFsd2F5cygnY2F0Y2hlZCcpKSgnYmFyJykgLy8gPT4gJ2NhdGNoZWQnXG4gKiAgICAgIFIudHJ5Q2F0Y2goUi50aW1lcyhSLmlkZW50aXR5KSwgUi5hbHdheXMoW10pKSgncycpIC8vID0+IFtdXG4gKiAgICAgIFIudHJ5Q2F0Y2goKCkgPT4geyB0aHJvdyAndGhpcyBpcyBub3QgYSB2YWxpZCB2YWx1ZSd9LCAoZXJyLCB2YWx1ZSk9Pih7ZXJyb3IgOiBlcnIsICB2YWx1ZSB9KSkoJ2JhcicpIC8vID0+IHsnZXJyb3InOiAndGhpcyBpcyBub3QgYSB2YWxpZCB2YWx1ZScsICd2YWx1ZSc6ICdiYXInfVxuICovXG5cblxudmFyIHRyeUNhdGNoID1cbi8qI19fUFVSRV9fKi9cbl9jdXJyeTIoZnVuY3Rpb24gX3RyeUNhdGNoKHRyeWVyLCBjYXRjaGVyKSB7XG4gIHJldHVybiBfYXJpdHkodHJ5ZXIubGVuZ3RoLCBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB0cnllci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBjYXRjaGVyLmFwcGx5KHRoaXMsIF9jb25jYXQoW2VdLCBhcmd1bWVudHMpKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gdHJ5Q2F0Y2g7Il19