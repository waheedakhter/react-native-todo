{"version":3,"sources":["Setup.tsx"],"names":["mock","mockAsyncStorage","getCurrentPosition","jest","fn","mockImplementationOnce","success","Promise","resolve","coords","latitude","longitude","watchPosition","platform","requireActual","constants","reactNativeVersion","major","minor","patch","actualNav","useNavigation","navigate","mockedNavigate","NativeModules","RNCNetInfo","getCurrentConnectivity","isConnectionMetered","addListener","removeListeners"],"mappings":"AAWA,cAAKA,IAAL,CAAU,2CAAV,EAAuD;AAAA,SAAMC,yBAAN;AAAA,CAAvD;;AAEA,cAAKD,IAAL,CAAU,qCAAV,EAAiD,YAAM;AACrD,SAAO;AACLE,IAAAA,kBAAkB,EAAEC,IAAI,CAACC,EAAL,GAAUC,sBAAV,CAAiC,UAAAC,OAAO;AAAA,aAC1DC,OAAO,CAACC,OAAR,CACEF,OAAO,CAAC;AACNG,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE,IADJ;AAENC,UAAAA,SAAS,EAAE;AAFL;AADF,OAAD,CADT,CAD0D;AAAA,KAAxC,CADf;AAWLC,IAAAA,aAAa,EAAET,IAAI,CAACC,EAAL;AAXV,GAAP;AAaD,CAdD;;AAgBA,cAAKJ,IAAL,CAAU,wDAAV;;AAEA,cAAKA,IAAL,CAAU,0BAAV,EAAsC;AAAA,SAAO,EAAP;AAAA,CAAtC;;AAEA,cAAKA,IAAL,CAAU,2CAAV,EAAuD,YAAM;AAC3D,MAAMa,QAAQ,GAAGV,IAAI,CAACW,aAAL,CACf,2CADe,CAAjB;AAGA,oCACKD,QADL;AAEEE,IAAAA,SAAS,6BACJF,QAAQ,CAACE,SADL;AAEPC,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,KAAK,EAAE,CADW;AAElBC,QAAAA,KAAK,EAAE,EAFW;AAGlBC,QAAAA,KAAK,EAAE;AAHW;AAFb;AAFX;AAWD,CAfD;;AAmBA,cAAKnB,IAAL,CAAU,0BAAV,EAAsC,YAAM;AAC1C,MAAMoB,SAAS,GAAGjB,IAAI,CAACW,aAAL,CAAmB,0BAAnB,CAAlB;AACA,oCACKM,SADL;AAEEC,IAAAA,aAAa,EAAE;AAAA,aAAO;AACpBC,QAAAA,QAAQ,EAAEC;AADU,OAAP;AAAA;AAFjB;AAMD,CARD;;;;;;AApDA;;AACA;;AACA;;;;;;;;;;;;;AAEAC,2BAAcC,UAAd,GAA2B;AACzBC,EAAAA,sBAAsB,EAAEvB,IAAI,CAACC,EAAL,EADC;AAEzBuB,EAAAA,mBAAmB,EAAExB,IAAI,CAACC,EAAL,EAFI;AAGzBwB,EAAAA,WAAW,EAAEzB,IAAI,CAACC,EAAL,EAHY;AAIzByB,EAAAA,eAAe,EAAE1B,IAAI,CAACC,EAAL;AAJQ,CAA3B;AA8CA,IAAMmB,cAAc,GAAGpB,IAAI,CAACC,EAAL,EAAvB","sourcesContent":["import mockAsyncStorage from '@react-native-async-storage/async-storage/jest/async-storage-mock';\nimport {NativeModules} from 'react-native';\nimport 'react-native-gesture-handler/jestSetup';\n\nNativeModules.RNCNetInfo = {\n  getCurrentConnectivity: jest.fn(),\n  isConnectionMetered: jest.fn(),\n  addListener: jest.fn(),\n  removeListeners: jest.fn(),\n};\n\njest.mock('@react-native-async-storage/async-storage', () => mockAsyncStorage);\n\njest.mock('@react-native-community/geolocation', () => {\n  return {\n    getCurrentPosition: jest.fn().mockImplementationOnce(success =>\n      Promise.resolve(\n        success({\n          coords: {\n            latitude: 51.1,\n            longitude: 45.3,\n          },\n        }),\n      ),\n    ),\n    watchPosition: jest.fn(),\n  };\n});\n\njest.mock('react-native/Libraries/EventEmitter/NativeEventEmitter');\n\njest.mock('react-native-permissions', () => ({}));\n\njest.mock('react-native/Libraries/Utilities/Platform', () => {\n  const platform = jest.requireActual(\n    'react-native/Libraries/Utilities/Platform',\n  );\n  return {\n    ...platform,\n    constants: {\n      ...platform.constants,\n      reactNativeVersion: {\n        major: 0,\n        minor: 65,\n        patch: 1,\n      },\n    },\n  };\n});\n\nconst mockedNavigate = jest.fn();\n\njest.mock('@react-navigation/native', () => {\n  const actualNav = jest.requireActual('@react-navigation/native');\n  return {\n    ...actualNav,\n    useNavigation: () => ({\n      navigate: mockedNavigate,\n    }),\n  };\n});\n"]}