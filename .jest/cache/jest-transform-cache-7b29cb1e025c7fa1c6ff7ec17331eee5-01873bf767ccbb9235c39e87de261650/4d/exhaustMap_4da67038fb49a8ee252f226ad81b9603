5039b37ec681869efb8e0624430d18c6
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var map_1 = require("./map");

var from_1 = require("../observable/from");

var innerSubscribe_1 = require("../innerSubscribe");

function exhaustMap(project, resultSelector) {
  if (resultSelector) {
    return function (source) {
      return source.pipe(exhaustMap(function (a, i) {
        return from_1.from(project(a, i)).pipe(map_1.map(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new ExhaustMapOperator(project));
  };
}

exports.exhaustMap = exhaustMap;

var ExhaustMapOperator = function () {
  function ExhaustMapOperator(project) {
    this.project = project;
  }

  ExhaustMapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
  };

  return ExhaustMapOperator;
}();

var ExhaustMapSubscriber = function (_super) {
  __extends(ExhaustMapSubscriber, _super);

  function ExhaustMapSubscriber(destination, project) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.hasSubscription = false;
    _this.hasCompleted = false;
    _this.index = 0;
    return _this;
  }

  ExhaustMapSubscriber.prototype._next = function (value) {
    if (!this.hasSubscription) {
      this.tryNext(value);
    }
  };

  ExhaustMapSubscriber.prototype.tryNext = function (value) {
    var result;
    var index = this.index++;

    try {
      result = this.project(value, index);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.hasSubscription = true;

    this._innerSub(result);
  };

  ExhaustMapSubscriber.prototype._innerSub = function (result) {
    var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
    var destination = this.destination;
    destination.add(innerSubscriber);
    var innerSubscription = innerSubscribe_1.innerSubscribe(result, innerSubscriber);

    if (innerSubscription !== innerSubscriber) {
      destination.add(innerSubscription);
    }
  };

  ExhaustMapSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (!this.hasSubscription) {
      this.destination.complete();
    }

    this.unsubscribe();
  };

  ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {
    this.destination.next(innerValue);
  };

  ExhaustMapSubscriber.prototype.notifyError = function (err) {
    this.destination.error(err);
  };

  ExhaustMapSubscriber.prototype.notifyComplete = function () {
    this.hasSubscription = false;

    if (this.hasCompleted) {
      this.destination.complete();
    }
  };

  return ExhaustMapSubscriber;
}(innerSubscribe_1.SimpleOuterSubscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvZXhoYXVzdE1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtBLElBQUEsS0FBQSxHQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUE7O0FBQ0EsSUFBQSxNQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBQ0EsSUFBQSxnQkFBQSxHQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBOztBQXVEQSxTQUFnQixVQUFoQixDQUNFLE9BREYsRUFFRSxjQUZGLEVBRStHO0FBRTdHLE1BQUksY0FBSixFQUFvQjtBQUVsQixXQUFPLFVBQUMsTUFBRCxFQUFzQjtBQUFLLGFBQUEsTUFBTSxDQUFDLElBQVAsQ0FDaEMsVUFBVSxDQUFDLFVBQUMsQ0FBRCxFQUFJLENBQUosRUFBSztBQUFLLGVBQUEsTUFBQSxDQUFBLElBQUEsQ0FBSyxPQUFPLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBWixFQUFvQixJQUFwQixDQUNuQixLQUFBLENBQUEsR0FBQSxDQUFJLFVBQUMsQ0FBRCxFQUFTLEVBQVQsRUFBZ0I7QUFBSyxpQkFBQSxjQUFjLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQWQsRUFBYyxDQUFkO0FBRE4sU0FDbkIsQ0FEbUIsQ0FBQTtBQURXLE9BQ3RCLENBRHNCLENBQUE7QUFJakMsS0FKRDtBQUtEOztBQUNELFNBQU8sVUFBQyxNQUFELEVBQXNCO0FBQzNCLFdBQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFJLGtCQUFKLENBQXVCLE9BQXZCLENBQVosQ0FBQTtBQUE0QyxHQUQ5QztBQUVEOztBQWRELE9BQUEsQ0FBQSxVQUFBLEdBQUEsVUFBQTs7QUFnQkEsSUFBQSxrQkFBQSxHQUFBLFlBQUE7QUFDRSxXQUFBLGtCQUFBLENBQW9CLE9BQXBCLEVBQTRFO0FBQXhELFNBQUEsT0FBQSxHQUFBLE9BQUE7QUFDbkI7O0FBRUQsRUFBQSxr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