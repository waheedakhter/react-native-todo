{"version":3,"sources":["xprod.js"],"names":["_curry2","require","xprod","a","b","idx","ilen","length","j","jlen","result","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAuBA,IAAIC,KAAK,GAETF,OAAO,CAAC,SAASE,KAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AAE3B,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAGH,CAAC,CAACI,MAAb;AACA,MAAIC,CAAJ;AACA,MAAIC,IAAI,GAAGL,CAAC,CAACG,MAAb;AACA,MAAIG,MAAM,GAAG,EAAb;;AAEA,SAAOL,GAAG,GAAGC,IAAb,EAAmB;AACjBE,IAAAA,CAAC,GAAG,CAAJ;;AAEA,WAAOA,CAAC,GAAGC,IAAX,EAAiB;AACfC,MAAAA,MAAM,CAACA,MAAM,CAACH,MAAR,CAAN,GAAwB,CAACJ,CAAC,CAACE,GAAD,CAAF,EAASD,CAAC,CAACI,CAAD,CAAV,CAAxB;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;;AAEDH,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,SAAOK,MAAP;AACD,CApBM,CAFP;;AAwBAC,MAAM,CAACC,OAAP,GAAiBV,KAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = xprod;"]}