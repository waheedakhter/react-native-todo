{"version":3,"sources":["liftFN.js"],"names":["exports","__esModule","_ramda","require","_ap","_interopRequireDefault","obj","liftFN","curry","arity","fn","lifted","curryN","_len","arguments","length","args","Array","_key","accumulator","map","head","apps","slice","Infinity","reduce","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,GAAG,GAAGC,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAAhC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAiCjG,IAAIC,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACM,KAAX,EAAkB,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AAClD,MAAIC,MAAM,GAAG,CAAC,GAAGT,MAAM,CAACU,MAAX,EAAmBH,KAAnB,EAA0BC,EAA1B,CAAb;AACA,SAAO,CAAC,GAAGR,MAAM,CAACU,MAAX,EAAmBH,KAAnB,EAA0B,YAAY;AAC3C,SAAK,IAAII,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,QAAIC,WAAW,GAAG,CAAC,GAAGjB,MAAM,CAACkB,GAAX,EAAgBT,MAAhB,EAAwB,CAAC,GAAGT,MAAM,CAACmB,IAAX,EAAiBL,IAAjB,CAAxB,CAAlB;AACA,QAAIM,IAAI,GAAG,CAAC,GAAGpB,MAAM,CAACqB,KAAX,EAAkB,CAAlB,EAAqBC,QAArB,EAA+BR,IAA/B,CAAX;AACA,WAAO,CAAC,GAAGd,MAAM,CAACuB,MAAX,EAAmBrB,GAAG,CAAC,SAAD,CAAtB,EAAmCe,WAAnC,EAAgDG,IAAhD,CAAP;AACD,GARM,CAAP;AASD,CAXY,CAAb;AAYA,IAAII,QAAQ,GAAGnB,MAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqB0B,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _ap = _interopRequireDefault(require(\"./internal/ap\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" objects that satisfy\n * the fantasy land Apply spec of algebraic structures.\n *\n * Lifting is specific for {@link https://github.com/scalaz/scalaz|scalaz} and {@link http://www.functionaljava.org/|functional java} implementations.\n * Old version of fantasy land spec were not compatible with this approach,\n * but as of fantasy land 1.0.0 Apply spec also adopted this approach.\n *\n * This function acts as interop for ramda <= 0.23.0 and {@link https://monet.github.io/monet.js/|monet.js}.\n *\n * More info {@link https://github.com/fantasyland/fantasy-land/issues/50|here}.\n *\n * @func liftFN\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.2.0|v1.2.0}\n * @category Function\n * @sig Apply a => Number -> (a... -> a) -> (a... -> a)\n * @param {number} arity The arity of the lifter function\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function\n * @see {@link http://ramdajs.com/docs/#lift|R.lift}, {@link http://ramdajs.com/docs/#ap|R.ap}\n * @example\n *\n * const { Maybe } = require('monet');\n *\n * const add3 = (a, b, c) => a + b + c;\n * const madd3 = RA.liftFN(3, add3);\n *\n * madd3(Maybe.Some(10), Maybe.Some(15), Maybe.Some(17)); //=> Maybe.Some(42)\n * madd3(Maybe.Some(10), Maybe.Nothing(), Maybe.Some(17)); //=> Maybe.Nothing()\n */\nvar liftFN = (0, _ramda.curry)(function (arity, fn) {\n  var lifted = (0, _ramda.curryN)(arity, fn);\n  return (0, _ramda.curryN)(arity, function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var accumulator = (0, _ramda.map)(lifted, (0, _ramda.head)(args));\n    var apps = (0, _ramda.slice)(1, Infinity, args);\n    return (0, _ramda.reduce)(_ap[\"default\"], accumulator, apps);\n  });\n});\nvar _default = liftFN;\nexports[\"default\"] = _default;"]}