0c2d84a0607d21156819fc654d3b6917
var _curry2 = require("./internal/_curry2");

var _isFunction = require("./internal/_isFunction");

var curryN = require("./curryN");

var toString = require("./toString");

var invoker = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];

    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }

    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});

module.exports = invoker;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludm9rZXIuanMiXSwibmFtZXMiOlsiX2N1cnJ5MiIsInJlcXVpcmUiLCJfaXNGdW5jdGlvbiIsImN1cnJ5TiIsInRvU3RyaW5nIiwiaW52b2tlciIsImFyaXR5IiwibWV0aG9kIiwidGFyZ2V0IiwiYXJndW1lbnRzIiwiYXBwbHkiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsIlR5cGVFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE9BQU8sR0FFWEMsT0FBTyxDQUFDLG9CQUFELENBRlA7O0FBSUEsSUFBSUMsV0FBVyxHQUVmRCxPQUFPLENBQUMsd0JBQUQsQ0FGUDs7QUFJQSxJQUFJRSxNQUFNLEdBRVZGLE9BQU8sQ0FBQyxVQUFELENBRlA7O0FBSUEsSUFBSUcsUUFBUSxHQUVaSCxPQUFPLENBQUMsWUFBRCxDQUZQOztBQXVDQSxJQUFJSSxPQUFPLEdBRVhMLE9BQU8sQ0FBQyxTQUFTSyxPQUFULENBQWlCQyxLQUFqQixFQUF3QkMsTUFBeEIsRUFBZ0M7QUFDdEMsU0FBT0osTUFBTSxDQUFDRyxLQUFLLEdBQUcsQ0FBVCxFQUFZLFlBQVk7QUFDbkMsUUFBSUUsTUFBTSxHQUFHQyxTQUFTLENBQUNILEtBQUQsQ0FBdEI7O0FBRUEsUUFBSUUsTUFBTSxJQUFJLElBQVYsSUFBa0JOLFdBQVcsQ0FBQ00sTUFBTSxDQUFDRCxNQUFELENBQVAsQ0FBakMsRUFBbUQ7QUFDakQsYUFBT0MsTUFBTSxDQUFDRCxNQUFELENBQU4sQ0FBZUcsS0FBZixDQUFxQkYsTUFBckIsRUFBNkJHLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDLElBQXRCLENBQTJCTCxTQUEzQixFQUFzQyxDQUF0QyxFQUF5Q0gsS0FBekMsQ0FBN0IsQ0FBUDtBQUNEOztBQUVELFVBQU0sSUFBSVMsU0FBSixDQUFjWCxRQUFRLENBQUNJLE1BQUQsQ0FBUixHQUFtQixpQ0FBbkIsR0FBdURELE1BQXZELEdBQWdFLEdBQTlFLENBQU47QUFDRCxHQVJZLENBQWI7QUFTRCxDQVZNLENBRlA7O0FBY0FTLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlosT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2N1cnJ5MiA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fY3VycnkyXCIpO1xuXG52YXIgX2lzRnVuY3Rpb24gPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vaW50ZXJuYWwvX2lzRnVuY3Rpb25cIik7XG5cbnZhciBjdXJyeU4gPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vY3VycnlOXCIpO1xuXG52YXIgdG9TdHJpbmcgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vdG9TdHJpbmdcIik7XG4vKipcbiAqIFR1cm5zIGEgbmFtZWQgbWV0aG9kIHdpdGggYSBzcGVjaWZpZWQgYXJpdHkgaW50byBhIGZ1bmN0aW9uIHRoYXQgY2FuIGJlXG4gKiBjYWxsZWQgZGlyZWN0bHkgc3VwcGxpZWQgd2l0aCBhcmd1bWVudHMgYW5kIGEgdGFyZ2V0IG9iamVjdC5cbiAqXG4gKiBUaGUgcmV0dXJuZWQgZnVuY3Rpb24gaXMgY3VycmllZCBhbmQgYWNjZXB0cyBgYXJpdHkgKyAxYCBwYXJhbWV0ZXJzIHdoZXJlXG4gKiB0aGUgZmluYWwgcGFyYW1ldGVyIGlzIHRoZSB0YXJnZXQgb2JqZWN0LlxuICpcbiAqIEBmdW5jXG4gKiBAbWVtYmVyT2YgUlxuICogQHNpbmNlIHYwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAc2lnIE51bWJlciAtPiBTdHJpbmcgLT4gKGEgLT4gYiAtPiAuLi4gLT4gbiAtPiBPYmplY3QgLT4gKilcbiAqIEBwYXJhbSB7TnVtYmVyfSBhcml0eSBOdW1iZXIgb2YgYXJndW1lbnRzIHRoZSByZXR1cm5lZCBmdW5jdGlvbiBzaG91bGQgdGFrZVxuICogICAgICAgIGJlZm9yZSB0aGUgdGFyZ2V0IG9iamVjdC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXRob2QgTmFtZSBvZiBhbnkgb2YgdGhlIHRhcmdldCBvYmplY3QncyBtZXRob2RzIHRvIGNhbGwuXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gQSBuZXcgY3VycmllZCBmdW5jdGlvbi5cbiAqIEBzZWUgUi5jb25zdHJ1Y3RcbiAqIEBleGFtcGxlXG4gKlxuICogICAgICBjb25zdCBzbGljZUZyb20gPSBSLmludm9rZXIoMSwgJ3NsaWNlJyk7XG4gKiAgICAgIHNsaWNlRnJvbSg2LCAnYWJjZGVmZ2hpamtsbScpOyAvLz0+ICdnaGlqa2xtJ1xuICogICAgICBjb25zdCBzbGljZUZyb202ID0gUi5pbnZva2VyKDIsICdzbGljZScpKDYpO1xuICogICAgICBzbGljZUZyb202KDgsICdhYmNkZWZnaGlqa2xtJyk7IC8vPT4gJ2doJ1xuICpcbiAqICAgICAgY29uc3QgZG9nID0ge1xuICogICAgICAgIHNwZWFrOiBhc3luYyAoKSA9PiAnV29vZiEnXG4gKiAgICAgIH07XG4gKiAgICAgIGNvbnN0IHNwZWFrID0gUi5pbnZva2VyKDAsICdzcGVhaycpO1xuICogICAgICBzcGVhayhkb2cpLnRoZW4oY29uc29sZS5sb2cpIC8vfj4gJ1dvb2YhJ1xuICpcbiAqIEBzeW1iIFIuaW52b2tlcigwLCAnbWV0aG9kJykobykgPSBvWydtZXRob2QnXSgpXG4gKiBAc3ltYiBSLmludm9rZXIoMSwgJ21ldGhvZCcpKGEsIG8pID0gb1snbWV0aG9kJ10oYSlcbiAqIEBzeW1iIFIuaW52b2tlcigyLCAnbWV0aG9kJykoYSwgYiwgbykgPSBvWydtZXRob2QnXShhLCBiKVxuICovXG5cblxudmFyIGludm9rZXIgPVxuLyojX19QVVJFX18qL1xuX2N1cnJ5MihmdW5jdGlvbiBpbnZva2VyKGFyaXR5LCBtZXRob2QpIHtcbiAgcmV0dXJuIGN1cnJ5Tihhcml0eSArIDEsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGFyZ2V0ID0gYXJndW1lbnRzW2FyaXR5XTtcblxuICAgIGlmICh0YXJnZXQgIT0gbnVsbCAmJiBfaXNGdW5jdGlvbih0YXJnZXRbbWV0aG9kXSkpIHtcbiAgICAgIHJldHVybiB0YXJnZXRbbWV0aG9kXS5hcHBseSh0YXJnZXQsIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMCwgYXJpdHkpKTtcbiAgICB9XG5cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHRvU3RyaW5nKHRhcmdldCkgKyAnIGRvZXMgbm90IGhhdmUgYSBtZXRob2QgbmFtZWQgXCInICsgbWV0aG9kICsgJ1wiJyk7XG4gIH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gaW52b2tlcjsiXX0=