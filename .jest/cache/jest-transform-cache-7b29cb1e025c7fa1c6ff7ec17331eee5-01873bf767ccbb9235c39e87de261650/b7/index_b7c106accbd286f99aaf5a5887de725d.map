{"version":3,"sources":["index.ts"],"names":["createAction","deprecated","createStandardAction","actionCreators","requestTodosList","todosListSuccess","todosListFailure","updateTodoItem","updateTodoSuccess","updateTodoFailure","createTodoItem","createTodoSuccess","createTodoFailure","deleteTodoItem","deleteTodoSuccess","deleteTodoFailure","TodosActions","INITIAL_STATE","SI","from","todos","undefined","fetching","state","merge","payload","reducerMap","TodosReducer"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Reducer } from \"redux\";\nimport * as SI from \"seamless-immutable\";\nimport { deprecated, PayloadAction } from \"typesafe-actions\";\nimport { IAlertCallbacks } from \"../../Lib/AlertsHelper\";\nimport { mapReducers, ReducerMap } from \"../../Lib/ReduxHelpers\";\nimport { Todos } from \"../../Types/ToDo\";\n\nconst { createAction, createStandardAction } = deprecated;\n/* ------------- Types and Action Creators ------------- */\n\nconst actionCreators = {\n  requestTodosList: createStandardAction(\"REQUEST_TODOS_LIST\")<IAlertCallbacks>(),\n  todosListSuccess: createStandardAction(\"REQUEST_TODOS_LIST_SUCCESS\")<any>(),\n  todosListFailure: createAction(\"REQUEST_TODOS_LIST_FAILURE\"),\n\n  updateTodoItem: createStandardAction(\"UPDATE_TODO_ITEM\")<any, IAlertCallbacks>(),\n  updateTodoSuccess: createAction(\"UPDATE_TODO_ITEM_SUCCESS\"),\n  updateTodoFailure: createAction(\"UPDATE_TODO_ITEM_FAILURE\"),\n\n  createTodoItem: createStandardAction(\"CREATE_TODO_ITEM\")<any, IAlertCallbacks>(),\n  createTodoSuccess: createAction(\"CREATE_TODO_ITEM_SUCCESS\"),\n  createTodoFailure: createAction(\"CREATE_TODO_ITEM_FAILURE\"),\n\n  deleteTodoItem: createStandardAction(\"DELETE_TODO_ITEM\")<any, IAlertCallbacks>(),\n  deleteTodoSuccess: createAction(\"DELETE_TODO_ITEM_SUCCESS\"),\n  deleteTodoFailure: createAction(\"DELETE_TODO_ITEM_FAILURE\"),\n};\n\nexport const TodosActions = actionCreators;\n\nexport interface TodosState {\n  todos?: Todos;\n  fetching: boolean;\n}\n\nexport type TodosActions = PayloadAction<string, TodosState>;\n\nexport type ImmutableTodosState = SI.ImmutableObject<TodosState>;\n\n/* ------------- Initial RootState ------------- */\n\nexport const INITIAL_STATE: ImmutableTodosState = SI.from({\n  todos: undefined,\n  fetching: false,\n});\n\n/* ------------- Reducers ------------- */\n// @ts-ignore\nexport const requestTodosList: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: true });\n\n// @ts-ignore\nexport const todosListSuccess: Reducer<ImmutableTodosState> = (state: ImmutableTodosState, { payload }) => state.merge({ fetching: false, todos: payload });\n\n// @ts-ignore\nexport const todosListFailure: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: false, todos: undefined });\n\n// @ts-ignore\nexport const updateTodoItem: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: true });\n\n// @ts-ignore\nexport const updateTodoSuccess: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: false });\n\n// @ts-ignore\nexport const updateTodoFailure: Reducer<ImmutableDeliveriesState> = (state: ImmutableTodosState) => state.merge({ fetching: false });\n\n// @ts-ignore\nexport const createTodoItem: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: true });\n\n// @ts-ignore\nexport const createTodoSuccess: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: false });\n\n// @ts-ignore\nexport const createTodoFailure: Reducer<ImmutableDeliveriesState> = (state: ImmutableTodosState) => state.merge({ fetching: false });\n\n// @ts-ignore\nexport const deleteTodoItem: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: true });\n\n// @ts-ignore\nexport const deleteTodoSuccess: Reducer<ImmutableTodosState> = (state: ImmutableTodosState) => state.merge({ fetching: false });\n\n// @ts-ignore\nexport const deleteTodoFailure: Reducer<ImmutableDeliveriesState> = (state: ImmutableTodosState) => state.merge({ fetching: false });\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nconst reducerMap: ReducerMap<typeof actionCreators, ImmutableTodosState> = {\n  requestTodosList,\n  todosListSuccess,\n  todosListFailure,\n  updateTodoItem,\n  updateTodoSuccess,\n  updateTodoFailure,\n  createTodoItem,\n  createTodoSuccess,\n  createTodoFailure,\n  deleteTodoItem,\n  deleteTodoSuccess,\n  deleteTodoFailure,\n};\n\nexport const TodosReducer = mapReducers(INITIAL_STATE, reducerMap, actionCreators);\n\nexport default TodosReducer;\n"]}