{"version":3,"sources":["isNotPrimitive.js"],"names":["exports","__esModule","_ramda","require","_isPrimitive","_interopRequireDefault","obj","isNotPrimitive","curryN","complement","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAmBjG,IAAIC,cAAc,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGN,MAAM,CAACO,UAAX,EAAuBL,YAAY,CAAC,SAAD,CAAnC,CAAtB,CAArB;AACA,IAAIM,QAAQ,GAAGH,cAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBU,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isPrimitive = _interopRequireDefault(require(\"./isPrimitive\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if value is not a primitive data type. There are 6 primitive data types: `string`, `number`, `bigint`, `boolean`, `undefined`, `symbol` and a special case of `null`.\n *\n * @func isNotPrimitive\n * @category Type\n * @sig * -> Boolean\n * @since {@link https://char0n.github.io/ramda-adjunct/2.32.0|v2.32.0}\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isPrimitive|isPrimitive}, {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#primitive_values|MDN Primitive values}, {@link https://developer.mozilla.org/en-US/docs/Glossary/Primitive|MDN Primitive}\n * @example\n *\n * RA.isNotPrimitive(new String(\"string\")); //=> true\n * RA.isNotPrimitive(new Number(1)); //=> true\n * RA.isNotPrimitive(\"string\"); //=> false\n * RA.isNotPrimitive(1); //=> false\n */\nvar isNotPrimitive = (0, _ramda.curryN)(1, (0, _ramda.complement)(_isPrimitive[\"default\"]));\nvar _default = isNotPrimitive;\nexports[\"default\"] = _default;"]}