7d9ceb0b6303e4d6e827dca1af179d3e
var _curry3 = require("./internal/_curry3");

var _has = require("./internal/_has");

var _isArray = require("./internal/_isArray");

var _isInteger = require("./internal/_isInteger");

var assoc = require("./assoc");

var isNil = require("./isNil");

var assocPath = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }

  var idx = path[0];

  if (path.length > 1) {
    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }

  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});

module.exports = assocPath;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc29jUGF0aC5qcyJdLCJuYW1lcyI6WyJfY3VycnkzIiwicmVxdWlyZSIsIl9oYXMiLCJfaXNBcnJheSIsIl9pc0ludGVnZXIiLCJhc3NvYyIsImlzTmlsIiwiYXNzb2NQYXRoIiwicGF0aCIsInZhbCIsIm9iaiIsImxlbmd0aCIsImlkeCIsIm5leHRPYmoiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImFyciIsImNvbmNhdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE9BQU8sR0FFWEMsT0FBTyxDQUFDLG9CQUFELENBRlA7O0FBSUEsSUFBSUMsSUFBSSxHQUVSRCxPQUFPLENBQUMsaUJBQUQsQ0FGUDs7QUFJQSxJQUFJRSxRQUFRLEdBRVpGLE9BQU8sQ0FBQyxxQkFBRCxDQUZQOztBQUlBLElBQUlHLFVBQVUsR0FFZEgsT0FBTyxDQUFDLHVCQUFELENBRlA7O0FBSUEsSUFBSUksS0FBSyxHQUVUSixPQUFPLENBQUMsU0FBRCxDQUZQOztBQUlBLElBQUlLLEtBQUssR0FFVEwsT0FBTyxDQUFDLFNBQUQsQ0FGUDs7QUE2QkEsSUFBSU0sU0FBUyxHQUViUCxPQUFPLENBQUMsU0FBU08sU0FBVCxDQUFtQkMsSUFBbkIsRUFBeUJDLEdBQXpCLEVBQThCQyxHQUE5QixFQUFtQztBQUN6QyxNQUFJRixJQUFJLENBQUNHLE1BQUwsS0FBZ0IsQ0FBcEIsRUFBdUI7QUFDckIsV0FBT0YsR0FBUDtBQUNEOztBQUVELE1BQUlHLEdBQUcsR0FBR0osSUFBSSxDQUFDLENBQUQsQ0FBZDs7QUFFQSxNQUFJQSxJQUFJLENBQUNHLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNuQixRQUFJRSxPQUFPLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDSSxHQUFELENBQU4sSUFBZVIsSUFBSSxDQUFDVSxHQUFELEVBQU1GLEdBQU4sQ0FBbkIsR0FBZ0NBLEdBQUcsQ0FBQ0UsR0FBRCxDQUFuQyxHQUEyQ1IsVUFBVSxDQUFDSSxJQUFJLENBQUMsQ0FBRCxDQUFMLENBQVYsR0FBc0IsRUFBdEIsR0FBMkIsRUFBcEY7QUFDQUMsSUFBQUEsR0FBRyxHQUFHRixTQUFTLENBQUNPLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDLElBQXRCLENBQTJCVCxJQUEzQixFQUFpQyxDQUFqQyxDQUFELEVBQXNDQyxHQUF0QyxFQUEyQ0ksT0FBM0MsQ0FBZjtBQUNEOztBQUVELE1BQUlULFVBQVUsQ0FBQ1EsR0FBRCxDQUFWLElBQW1CVCxRQUFRLENBQUNPLEdBQUQsQ0FBL0IsRUFBc0M7QUFDcEMsUUFBSVEsR0FBRyxHQUFHLEdBQUdDLE1BQUgsQ0FBVVQsR0FBVixDQUFWO0FBQ0FRLElBQUFBLEdBQUcsQ0FBQ04sR0FBRCxDQUFILEdBQVdILEdBQVg7QUFDQSxXQUFPUyxHQUFQO0FBQ0QsR0FKRCxNQUlPO0FBQ0wsV0FBT2IsS0FBSyxDQUFDTyxHQUFELEVBQU1ILEdBQU4sRUFBV0MsR0FBWCxDQUFaO0FBQ0Q7QUFDRixDQW5CTSxDQUZQOztBQXVCQVUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZCxTQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfY3VycnkzID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL2ludGVybmFsL19jdXJyeTNcIik7XG5cbnZhciBfaGFzID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL2ludGVybmFsL19oYXNcIik7XG5cbnZhciBfaXNBcnJheSA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9faXNBcnJheVwiKTtcblxudmFyIF9pc0ludGVnZXIgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vaW50ZXJuYWwvX2lzSW50ZWdlclwiKTtcblxudmFyIGFzc29jID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL2Fzc29jXCIpO1xuXG52YXIgaXNOaWwgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vaXNOaWxcIik7XG4vKipcbiAqIE1ha2VzIGEgc2hhbGxvdyBjbG9uZSBvZiBhbiBvYmplY3QsIHNldHRpbmcgb3Igb3ZlcnJpZGluZyB0aGUgbm9kZXMgcmVxdWlyZWRcbiAqIHRvIGNyZWF0ZSB0aGUgZ2l2ZW4gcGF0aCwgYW5kIHBsYWNpbmcgdGhlIHNwZWNpZmljIHZhbHVlIGF0IHRoZSB0YWlsIGVuZCBvZlxuICogdGhhdCBwYXRoLiBOb3RlIHRoYXQgdGhpcyBjb3BpZXMgYW5kIGZsYXR0ZW5zIHByb3RvdHlwZSBwcm9wZXJ0aWVzIG9udG8gdGhlXG4gKiBuZXcgb2JqZWN0IGFzIHdlbGwuIEFsbCBub24tcHJpbWl0aXZlIHByb3BlcnRpZXMgYXJlIGNvcGllZCBieSByZWZlcmVuY2UuXG4gKlxuICogQGZ1bmNcbiAqIEBtZW1iZXJPZiBSXG4gKiBAc2luY2UgdjAuOC4wXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAdHlwZWRlZm4gSWR4ID0gU3RyaW5nIHwgSW50XG4gKiBAc2lnIFtJZHhdIC0+IGEgLT4ge2F9IC0+IHthfVxuICogQHBhcmFtIHtBcnJheX0gcGF0aCB0aGUgcGF0aCB0byBzZXRcbiAqIEBwYXJhbSB7Kn0gdmFsIFRoZSBuZXcgdmFsdWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogVGhlIG9iamVjdCB0byBjbG9uZVxuICogQHJldHVybiB7T2JqZWN0fSBBIG5ldyBvYmplY3QgZXF1aXZhbGVudCB0byB0aGUgb3JpZ2luYWwgZXhjZXB0IGFsb25nIHRoZSBzcGVjaWZpZWQgcGF0aC5cbiAqIEBzZWUgUi5kaXNzb2NQYXRoXG4gKiBAZXhhbXBsZVxuICpcbiAqICAgICAgUi5hc3NvY1BhdGgoWydhJywgJ2InLCAnYyddLCA0Miwge2E6IHtiOiB7YzogMH19fSk7IC8vPT4ge2E6IHtiOiB7YzogNDJ9fX1cbiAqXG4gKiAgICAgIC8vIEFueSBtaXNzaW5nIG9yIG5vbi1vYmplY3Qga2V5cyBpbiBwYXRoIHdpbGwgYmUgb3ZlcnJpZGRlblxuICogICAgICBSLmFzc29jUGF0aChbJ2EnLCAnYicsICdjJ10sIDQyLCB7YTogNX0pOyAvLz0+IHthOiB7Yjoge2M6IDQyfX19XG4gKi9cblxuXG52YXIgYXNzb2NQYXRoID1cbi8qI19fUFVSRV9fKi9cbl9jdXJyeTMoZnVuY3Rpb24gYXNzb2NQYXRoKHBhdGgsIHZhbCwgb2JqKSB7XG4gIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB2YWw7XG4gIH1cblxuICB2YXIgaWR4ID0gcGF0aFswXTtcblxuICBpZiAocGF0aC5sZW5ndGggPiAxKSB7XG4gICAgdmFyIG5leHRPYmogPSAhaXNOaWwob2JqKSAmJiBfaGFzKGlkeCwgb2JqKSA/IG9ialtpZHhdIDogX2lzSW50ZWdlcihwYXRoWzFdKSA/IFtdIDoge307XG4gICAgdmFsID0gYXNzb2NQYXRoKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHBhdGgsIDEpLCB2YWwsIG5leHRPYmopO1xuICB9XG5cbiAgaWYgKF9pc0ludGVnZXIoaWR4KSAmJiBfaXNBcnJheShvYmopKSB7XG4gICAgdmFyIGFyciA9IFtdLmNvbmNhdChvYmopO1xuICAgIGFycltpZHhdID0gdmFsO1xuICAgIHJldHVybiBhcnI7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGFzc29jKGlkeCwgdmFsLCBvYmopO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3NvY1BhdGg7Il19