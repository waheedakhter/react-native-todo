{"version":3,"sources":["assocPath.js"],"names":["_curry3","require","_has","_isArray","_isInteger","assoc","isNil","assocPath","path","val","obj","length","idx","nextObj","Array","prototype","slice","call","arr","concat","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,IAAI,GAERD,OAAO,CAAC,iBAAD,CAFP;;AAIA,IAAIE,QAAQ,GAEZF,OAAO,CAAC,qBAAD,CAFP;;AAIA,IAAIG,UAAU,GAEdH,OAAO,CAAC,uBAAD,CAFP;;AAIA,IAAII,KAAK,GAETJ,OAAO,CAAC,SAAD,CAFP;;AAIA,IAAIK,KAAK,GAETL,OAAO,CAAC,SAAD,CAFP;;AA6BA,IAAIM,SAAS,GAEbP,OAAO,CAAC,SAASO,SAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmC;AACzC,MAAIF,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAOF,GAAP;AACD;;AAED,MAAIG,GAAG,GAAGJ,IAAI,CAAC,CAAD,CAAd;;AAEA,MAAIA,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnB,QAAIE,OAAO,GAAG,CAACP,KAAK,CAACI,GAAD,CAAN,IAAeR,IAAI,CAACU,GAAD,EAAMF,GAAN,CAAnB,GAAgCA,GAAG,CAACE,GAAD,CAAnC,GAA2CR,UAAU,CAACI,IAAI,CAAC,CAAD,CAAL,CAAV,GAAsB,EAAtB,GAA2B,EAApF;AACAC,IAAAA,GAAG,GAAGF,SAAS,CAACO,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,IAA3B,EAAiC,CAAjC,CAAD,EAAsCC,GAAtC,EAA2CI,OAA3C,CAAf;AACD;;AAED,MAAIT,UAAU,CAACQ,GAAD,CAAV,IAAmBT,QAAQ,CAACO,GAAD,CAA/B,EAAsC;AACpC,QAAIQ,GAAG,GAAG,GAAGC,MAAH,CAAUT,GAAV,CAAV;AACAQ,IAAAA,GAAG,CAACN,GAAD,CAAH,GAAWH,GAAX;AACA,WAAOS,GAAP;AACD,GAJD,MAIO;AACL,WAAOb,KAAK,CAACO,GAAD,EAAMH,GAAN,EAAWC,GAAX,CAAZ;AACD;AACF,CAnBM,CAFP;;AAuBAU,MAAM,CAACC,OAAP,GAAiBd,SAAjB","sourcesContent":["var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar assoc =\n/*#__PURE__*/\nrequire(\"./assoc\");\n\nvar isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\nmodule.exports = assocPath;"]}