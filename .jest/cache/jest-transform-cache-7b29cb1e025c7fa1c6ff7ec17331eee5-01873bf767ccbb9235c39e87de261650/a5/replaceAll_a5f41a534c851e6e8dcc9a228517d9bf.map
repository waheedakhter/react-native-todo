{"version":3,"sources":["replaceAll.js"],"names":["exports","__esModule","replaceAllPonyfill","replaceAllInvoker","_ramda","require","_isFunction","_interopRequireDefault","_String","obj","curryN","invoker","replaceAll","String","prototype","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,iBAAR,GAA4BH,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAAnF;;AAEA,IAAII,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIG,OAAO,GAAGD,sBAAsB,CAACF,OAAO,CAAC,wCAAD,CAAR,CAApC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACR,UAAX,GAAwBQ,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIP,kBAAkB,GAAG,CAAC,GAAGE,MAAM,CAACM,MAAX,EAAmB,CAAnB,EAAsBF,OAAO,CAAC,SAAD,CAA7B,CAAzB;AACAR,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;AACA,IAAIC,iBAAiB,GAAG,CAAC,GAAGC,MAAM,CAACO,OAAX,EAAoB,CAApB,EAAuB,YAAvB,CAAxB;AAuBAX,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;AACA,IAAIS,UAAU,GAAG,CAAC,GAAGN,WAAW,CAAC,SAAD,CAAf,EAA4BO,MAAM,CAACC,SAAP,CAAiBF,UAA7C,IAA2DT,iBAA3D,GAA+ED,kBAAhG;AACA,IAAIa,QAAQ,GAAGH,UAAf;AACAZ,OAAO,CAAC,SAAD,CAAP,GAAqBe,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.replaceAllPonyfill = exports.replaceAllInvoker = exports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isFunction = _interopRequireDefault(require(\"./isFunction\"));\n\nvar _String = _interopRequireDefault(require(\"./internal/ponyfills/String.replaceAll\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar replaceAllPonyfill = (0, _ramda.curryN)(3, _String[\"default\"]);\nexports.replaceAllPonyfill = replaceAllPonyfill;\nvar replaceAllInvoker = (0, _ramda.invoker)(2, 'replaceAll');\n/**\n * Replaces all substring matches in a string with a replacement.\n *\n * @func replaceAll\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.17.0|v2.17.0}\n * @category String\n * @sig String -> String -> String -> String\n * @param {string} searchValue The substring or a global RegExp to match\n * @param {string} replaceValue The string to replace the matches with\n * @param {string} str The String to do the search and replacement in\n * @return {string} A new string containing all the `searchValue` replaced with the `replaceValue`\n * @throws {TypeError} When invalid arguments provided\n * @see {@link http://ramdajs.com/docs/#replace|R.replace}, {@link https://github.com/tc39/proposal-string-replaceall|TC39 proposal}\n * @example\n *\n * RA.replaceAll('ac', 'ef', 'ac ab ac ab'); //=> 'ef ab ef ab'\n * RA.replaceAll('', '_', 'xxx'); //=> '_x_x_x_'\n * RA.replaceAll(/x/g, 'v', 'xxx'); //=> 'vvv'\n * RA.replaceAll(/x/, 'v', 'xxx'); //=> TypeError\n */\n\nexports.replaceAllInvoker = replaceAllInvoker;\nvar replaceAll = (0, _isFunction[\"default\"])(String.prototype.replaceAll) ? replaceAllInvoker : replaceAllPonyfill;\nvar _default = replaceAll;\nexports[\"default\"] = _default;"]}