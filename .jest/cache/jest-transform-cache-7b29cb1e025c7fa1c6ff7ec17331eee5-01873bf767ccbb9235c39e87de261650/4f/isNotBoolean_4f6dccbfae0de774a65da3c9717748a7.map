{"version":3,"sources":["isNotBoolean.js"],"names":["exports","__esModule","_ramda","require","_isBoolean","_interopRequireDefault","obj","isNotBoolean","complement","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAmBjG,IAAIC,YAAY,GAAG,CAAC,GAAGL,MAAM,CAACM,UAAX,EAAuBJ,UAAU,CAAC,SAAD,CAAjC,CAAnB;AACA,IAAIK,QAAQ,GAAGF,YAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isBoolean = _interopRequireDefault(require(\"./isBoolean\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if input value is complement of `Boolean`.\n *\n * @func isNotBoolean\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.3.0|v0.3.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isBoolean|isBoolean}\n * @example\n *\n * RA.isNotBoolean(false); //=> false\n * RA.isNotBoolean(true); //=> false\n * RA.isNotBoolean(null); //=> true\n */\nvar isNotBoolean = (0, _ramda.complement)(_isBoolean[\"default\"]);\nvar _default = isNotBoolean;\nexports[\"default\"] = _default;"]}