{"version":3,"sources":["mergeProps.js"],"names":["exports","__esModule","_ramda","require","mergeProps","curryN","pipe","props","mergeAll","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAwBA,IAAIC,UAAU,GAAG,CAAC,GAAGF,MAAM,CAACG,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGH,MAAM,CAACI,IAAX,EAAiBJ,MAAM,CAACK,KAAxB,EAA+BL,MAAM,CAACM,QAAtC,CAAtB,CAAjB;AACA,IAAIC,QAAQ,GAAGL,UAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Functional equivalent of merging object properties with object spread operator.\n *\n * @func mergeProps\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.17.0|v1.17.0}\n * @category Object\n * @sig [k] -> {k: {a}} -> {a}\n * @see {@link RA.mergePaths|mergePaths}\n * @param {!Array} ps The property names to merge\n * @param {!Object} obj The object to query\n * @return {!Object} The object composed of merged properties of obj\n * @example\n *\n * const obj = {\n *   foo: { fooInner: 1 },\n *   bar: { barInner: 2 }\n * };\n *\n * { ...obj.foo, ...obj.bar }; //=> { fooInner: 1, barInner: 2 }\n * RA.mergeProps(['foo', 'bar'], obj); //=> { fooInner: 1, barInner: 2 }\n */\nvar mergeProps = (0, _ramda.curryN)(2, (0, _ramda.pipe)(_ramda.props, _ramda.mergeAll));\nvar _default = mergeProps;\nexports[\"default\"] = _default;"]}