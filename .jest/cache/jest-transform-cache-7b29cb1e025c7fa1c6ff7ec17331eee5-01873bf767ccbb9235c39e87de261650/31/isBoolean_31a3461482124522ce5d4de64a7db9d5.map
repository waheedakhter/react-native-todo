{"version":3,"sources":["isBoolean.js"],"names":["exports","__esModule","_ramda","require","isBoolean","curryN","pipe","type","identical","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAmBA,IAAIC,SAAS,GAAG,CAAC,GAAGF,MAAM,CAACG,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGH,MAAM,CAACI,IAAX,EAAiBJ,MAAM,CAACK,IAAxB,EAA8B,CAAC,GAAGL,MAAM,CAACM,SAAX,EAAsB,SAAtB,CAA9B,CAAtB,CAAhB;AACA,IAAIC,QAAQ,GAAGL,SAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Checks if input value is `Boolean`.\n *\n * @func isBoolean\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.3.0|v0.3.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotBoolean|isNotBoolean}\n * @example\n *\n * RA.isBoolean(false); //=> true\n * RA.isBoolean(true); //=> true\n * RA.isBoolean(null); //=> false\n */\nvar isBoolean = (0, _ramda.curryN)(1, (0, _ramda.pipe)(_ramda.type, (0, _ramda.identical)('Boolean')));\nvar _default = isBoolean;\nexports[\"default\"] = _default;"]}