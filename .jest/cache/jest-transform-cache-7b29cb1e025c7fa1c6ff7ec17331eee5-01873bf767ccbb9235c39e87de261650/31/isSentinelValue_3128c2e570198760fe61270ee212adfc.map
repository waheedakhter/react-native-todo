{"version":3,"sources":["isSentinelValue.js"],"names":["exports","__esModule","_ramda","require","_isInteger","_interopRequireDefault","obj","isSentinelValue","curryN","val","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAAvC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAqBjG,IAAIC,eAAe,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmB,CAAnB,EAAsB,UAAUC,GAAV,EAAe;AACzD,SAAO,CAAC,GAAGL,UAAU,CAAC,SAAD,CAAd,EAA2BK,GAA3B,KAAmC,CAACA,GAAD,KAAS,CAAnD;AACD,CAFqB,CAAtB;AAGA,IAAIC,QAAQ,GAAGH,eAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBU,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isInteger = _interopRequireDefault(require(\"./isInteger32\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks whether the passed value is {@link https://github.com/getify/You-Dont-Know-JS/blob/9959fc904d584bbf0b02cf41c192f74ff4238581/types-grammar/ch4.md#the-curious-case-of-the-|a sentinel value}.\n *\n * @func isSentinelValue\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.33.0|v2.33.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @example\n *\n * RA.isSentinelValue(-1); //=> true\n *\n * RA.isSentinelValue('-1'); //=> false\n * RA.isSentinelValue(1); //=> false\n * RA.isSentinelValue([-1]); //=> false\n */\n// eslint-disable-next-line no-bitwise\nvar isSentinelValue = (0, _ramda.curryN)(1, function (val) {\n  return (0, _isInteger[\"default\"])(val) && ~val === 0;\n});\nvar _default = isSentinelValue;\nexports[\"default\"] = _default;"]}