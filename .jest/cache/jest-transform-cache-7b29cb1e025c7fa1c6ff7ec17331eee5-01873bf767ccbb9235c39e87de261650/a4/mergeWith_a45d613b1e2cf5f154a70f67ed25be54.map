{"version":3,"sources":["mergeWith.js"],"names":["_curry3","require","mergeWithKey","mergeWith","fn","l","r","_","_l","_r","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,YAAY,GAEhBD,OAAO,CAAC,gBAAD,CAFP;;AA4BA,IAAIE,SAAS,GAEbH,OAAO,CAAC,SAASG,SAAT,CAAmBC,EAAnB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AACnC,SAAOJ,YAAY,CAAC,UAAUK,CAAV,EAAaC,EAAb,EAAiBC,EAAjB,EAAqB;AACvC,WAAOL,EAAE,CAACI,EAAD,EAAKC,EAAL,CAAT;AACD,GAFkB,EAEhBJ,CAFgB,EAEbC,CAFa,CAAnB;AAGD,CAJM,CAFP;;AAQAI,MAAM,CAACC,OAAP,GAAiBR,SAAjB","sourcesContent":["var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nmodule.exports = mergeWith;"]}