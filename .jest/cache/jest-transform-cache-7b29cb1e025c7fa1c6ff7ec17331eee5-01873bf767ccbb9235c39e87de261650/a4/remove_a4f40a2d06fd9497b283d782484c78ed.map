{"version":3,"sources":["remove.js"],"names":["_curry3","require","remove","start","count","list","result","Array","prototype","slice","call","splice","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAyBA,IAAIC,MAAM,GAEVF,OAAO,CAAC,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAC1C,MAAIC,MAAM,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,IAA3B,EAAiC,CAAjC,CAAb;AACAC,EAAAA,MAAM,CAACK,MAAP,CAAcR,KAAd,EAAqBC,KAArB;AACA,SAAOE,MAAP;AACD,CAJM,CAFP;;AAQAM,MAAM,CAACC,OAAP,GAAiBX,MAAjB","sourcesContent":["var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nmodule.exports = remove;"]}