c140911440c47eb11fde277841d1a39f
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _ramda = require("ramda");

var _isDate = _interopRequireDefault(require("./isDate"));

var _isNotNaN = _interopRequireDefault(require("./isNotNaN"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var isValidDate = (0, _ramda.curryN)(1, (0, _ramda.both)(_isDate["default"], (0, _ramda.pipe)((0, _ramda.invoker)(0, 'getTime'), _isNotNaN["default"])));
var _default = isValidDate;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzVmFsaWREYXRlLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiX3JhbWRhIiwicmVxdWlyZSIsIl9pc0RhdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2lzTm90TmFOIiwib2JqIiwiaXNWYWxpZERhdGUiLCJjdXJyeU4iLCJib3RoIiwicGlwZSIsImludm9rZXIiLCJfZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixJQUFyQjtBQUNBRCxPQUFPLENBQUMsU0FBRCxDQUFQLEdBQXFCLEtBQUssQ0FBMUI7O0FBRUEsSUFBSUUsTUFBTSxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFwQjs7QUFFQSxJQUFJQyxPQUFPLEdBQUdDLHNCQUFzQixDQUFDRixPQUFPLENBQUMsVUFBRCxDQUFSLENBQXBDOztBQUVBLElBQUlHLFNBQVMsR0FBR0Qsc0JBQXNCLENBQUNGLE9BQU8sQ0FBQyxZQUFELENBQVIsQ0FBdEM7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NFLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNOLFVBQVgsR0FBd0JNLEdBQXhCLEdBQThCO0FBQUUsZUFBV0E7QUFBYixHQUFyQztBQUEwRDs7QUFzQmpHLElBQUlDLFdBQVcsR0FBRyxDQUFDLEdBQUdOLE1BQU0sQ0FBQ08sTUFBWCxFQUFtQixDQUFuQixFQUFzQixDQUFDLEdBQUdQLE1BQU0sQ0FBQ1EsSUFBWCxFQUFpQk4sT0FBTyxDQUFDLFNBQUQsQ0FBeEIsRUFBcUMsQ0FBQyxHQUFHRixNQUFNLENBQUNTLElBQVgsRUFBaUIsQ0FBQyxHQUFHVCxNQUFNLENBQUNVLE9BQVgsRUFBb0IsQ0FBcEIsRUFBdUIsU0FBdkIsQ0FBakIsRUFBb0ROLFNBQVMsQ0FBQyxTQUFELENBQTdELENBQXJDLENBQXRCLENBQWxCO0FBQ0EsSUFBSU8sUUFBUSxHQUFHTCxXQUFmO0FBQ0FSLE9BQU8sQ0FBQyxTQUFELENBQVAsR0FBcUJhLFFBQXJCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9yYW1kYSA9IHJlcXVpcmUoXCJyYW1kYVwiKTtcblxudmFyIF9pc0RhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2lzRGF0ZVwiKSk7XG5cbnZhciBfaXNOb3ROYU4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2lzTm90TmFOXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgdmFsdWUgaXMgdmFsaWQgYERhdGVgIG9iamVjdC5cbiAqXG4gKiBAZnVuYyBpc1ZhbGlkRGF0ZVxuICogQG1lbWJlck9mIFJBXG4gKiBAc2luY2Uge0BsaW5rIGh0dHBzOi8vY2hhcjBuLmdpdGh1Yi5pby9yYW1kYS1hZGp1bmN0LzEuOC4wfHYxLjguMH1cbiAqIEBjYXRlZ29yeSBUeXBlXG4gKiBAc2lnICogLT4gQm9vbGVhblxuICogQHBhcmFtIHsqfSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiBAc2VlIHtAbGluayBSQS5pc0RhdGV8aXNEYXRlfSwge0BsaW5rIFJBLmlzTm90RGF0ZXxpc05vdERhdGV9LCB7QGxpbmsgUkEuaXNOb3RWYWxpZERhdGV8aXNOb3RWYWxpZERhdGV9XG4gKiBAZXhhbXBsZVxuICpcbiAqIFJBLmlzVmFsaWREYXRlKG5ldyBEYXRlKCkpOyAvLz0+IHRydWVcbiAqIFJBLmlzVmFsaWREYXRlKG5ldyBEYXRlKCdhJykpOyAvLz0+IGZhbHNlXG4gKi9cblxuLyogZXNsaW50LWVuYWJsZSBtYXgtbGVuICovXG52YXIgaXNWYWxpZERhdGUgPSAoMCwgX3JhbWRhLmN1cnJ5TikoMSwgKDAsIF9yYW1kYS5ib3RoKShfaXNEYXRlW1wiZGVmYXVsdFwiXSwgKDAsIF9yYW1kYS5waXBlKSgoMCwgX3JhbWRhLmludm9rZXIpKDAsICdnZXRUaW1lJyksIF9pc05vdE5hTltcImRlZmF1bHRcIl0pKSk7XG52YXIgX2RlZmF1bHQgPSBpc1ZhbGlkRGF0ZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il19