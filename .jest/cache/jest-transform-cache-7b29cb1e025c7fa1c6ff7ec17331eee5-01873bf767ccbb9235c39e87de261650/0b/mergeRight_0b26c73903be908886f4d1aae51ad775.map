{"version":3,"sources":["mergeRight.js"],"names":["_objectAssign","require","_curry2","mergeRight","l","r","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAEjBC,OAAO,CAAC,0BAAD,CAFP;;AAIA,IAAIC,OAAO,GAEXD,OAAO,CAAC,oBAAD,CAFP;;AA4BA,IAAIE,UAAU,GAEdD,OAAO,CAAC,SAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAChC,SAAOL,aAAa,CAAC,EAAD,EAAKI,CAAL,EAAQC,CAAR,CAApB;AACD,CAFM,CAFP;;AAMAC,MAAM,CAACC,OAAP,GAAiBJ,UAAjB","sourcesContent":["var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = mergeRight;"]}