6e8fca60784482ba7a7b4654afc1ed83
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _ramda = require("ramda");

var isomorphic = function isomorphic(to, from) {
  var isomorphism = function isomorphism(x) {
    return to(x);
  };

  isomorphism.from = from;
  return isomorphism;
};

var isomorphisms = function isomorphisms(to, from) {
  return isomorphic((0, _ramda.curry)(function (toFunctorFn, target) {
    return (0, _ramda.map)(from, toFunctorFn(to(target)));
  }), (0, _ramda.curry)(function (toFunctorFn, target) {
    return (0, _ramda.map)(to, toFunctorFn(from(target)));
  }));
};

var from = (0, _ramda.curry)(function (isomorphism, x) {
  return isomorphism.from(x);
});
var lensIso = (0, _ramda.curry)(isomorphisms);
lensIso.from = from;
var _default = lensIso;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxlbnNJc28uanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJfcmFtZGEiLCJyZXF1aXJlIiwiaXNvbW9ycGhpYyIsInRvIiwiZnJvbSIsImlzb21vcnBoaXNtIiwieCIsImlzb21vcnBoaXNtcyIsImN1cnJ5IiwidG9GdW5jdG9yRm4iLCJ0YXJnZXQiLCJtYXAiLCJsZW5zSXNvIiwiX2RlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQixLQUFLLENBQTFCOztBQUVBLElBQUlFLE1BQU0sR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBcEI7O0FBUUEsSUFBSUMsVUFBVSxHQUFHLFNBQVNBLFVBQVQsQ0FBb0JDLEVBQXBCLEVBQXdCQyxJQUF4QixFQUE4QjtBQUM3QyxNQUFJQyxXQUFXLEdBQUcsU0FBU0EsV0FBVCxDQUFxQkMsQ0FBckIsRUFBd0I7QUFDeEMsV0FBT0gsRUFBRSxDQUFDRyxDQUFELENBQVQ7QUFDRCxHQUZEOztBQUlBRCxFQUFBQSxXQUFXLENBQUNELElBQVosR0FBbUJBLElBQW5CO0FBQ0EsU0FBT0MsV0FBUDtBQUNELENBUEQ7O0FBVUEsSUFBSUUsWUFBWSxHQUFHLFNBQVNBLFlBQVQsQ0FBc0JKLEVBQXRCLEVBQTBCQyxJQUExQixFQUFnQztBQUNqRCxTQUFPRixVQUFVLENBQUMsQ0FBQyxHQUFHRixNQUFNLENBQUNRLEtBQVgsRUFBa0IsVUFBVUMsV0FBVixFQUF1QkMsTUFBdkIsRUFBK0I7QUFDakUsV0FBTyxDQUFDLEdBQUdWLE1BQU0sQ0FBQ1csR0FBWCxFQUFnQlAsSUFBaEIsRUFBc0JLLFdBQVcsQ0FBQ04sRUFBRSxDQUFDTyxNQUFELENBQUgsQ0FBakMsQ0FBUDtBQUNELEdBRmlCLENBQUQsRUFFYixDQUFDLEdBQUdWLE1BQU0sQ0FBQ1EsS0FBWCxFQUFrQixVQUFVQyxXQUFWLEVBQXVCQyxNQUF2QixFQUErQjtBQUNuRCxXQUFPLENBQUMsR0FBR1YsTUFBTSxDQUFDVyxHQUFYLEVBQWdCUixFQUFoQixFQUFvQk0sV0FBVyxDQUFDTCxJQUFJLENBQUNNLE1BQUQsQ0FBTCxDQUEvQixDQUFQO0FBQ0QsR0FGRyxDQUZhLENBQWpCO0FBS0QsQ0FORDs7QUFTQSxJQUFJTixJQUFJLEdBQUcsQ0FBQyxHQUFHSixNQUFNLENBQUNRLEtBQVgsRUFBa0IsVUFBVUgsV0FBVixFQUF1QkMsQ0FBdkIsRUFBMEI7QUFDckQsU0FBT0QsV0FBVyxDQUFDRCxJQUFaLENBQWlCRSxDQUFqQixDQUFQO0FBQ0QsQ0FGVSxDQUFYO0FBMEJBLElBQUlNLE9BQU8sR0FBRyxDQUFDLEdBQUdaLE1BQU0sQ0FBQ1EsS0FBWCxFQUFrQkQsWUFBbEIsQ0FBZDtBQUNBSyxPQUFPLENBQUNSLElBQVIsR0FBZUEsSUFBZjtBQUNBLElBQUlTLFFBQVEsR0FBR0QsT0FBZjtBQUNBZCxPQUFPLENBQUMsU0FBRCxDQUFQLEdBQXFCZSxRQUFyQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfcmFtZGEgPSByZXF1aXJlKFwicmFtZGFcIik7XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gd2FzIGhpZ2hseSBpbnNwaXJlZCBieSB0aGUgaW1wbGVtZW50YXRpb25zXG4vLyBpbiByYW1kYS1sZW5zIGxpYnJhcnkuXG4vL1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3JhbWRhL3JhbWRhLWxlbnNcbi8vIGlzb21vcnBoaWMgOjogKChhIC0+IGIpLCAoYiAtPiBhKSkgLT4gSXNvbW9ycGhpc21cbi8vICAgICBJc29tb3JwaGlzbSA9IHggLT4geVxudmFyIGlzb21vcnBoaWMgPSBmdW5jdGlvbiBpc29tb3JwaGljKHRvLCBmcm9tKSB7XG4gIHZhciBpc29tb3JwaGlzbSA9IGZ1bmN0aW9uIGlzb21vcnBoaXNtKHgpIHtcbiAgICByZXR1cm4gdG8oeCk7XG4gIH07XG5cbiAgaXNvbW9ycGhpc20uZnJvbSA9IGZyb207XG4gIHJldHVybiBpc29tb3JwaGlzbTtcbn07IC8vIGlzb21vcnBoaXNtcyA6OiAoKGEgLT4gYiksIChiIC0+IGEpKSAtPiAoYSAtPiBiKVxuXG5cbnZhciBpc29tb3JwaGlzbXMgPSBmdW5jdGlvbiBpc29tb3JwaGlzbXModG8sIGZyb20pIHtcbiAgcmV0dXJuIGlzb21vcnBoaWMoKDAsIF9yYW1kYS5jdXJyeSkoZnVuY3Rpb24gKHRvRnVuY3RvckZuLCB0YXJnZXQpIHtcbiAgICByZXR1cm4gKDAsIF9yYW1kYS5tYXApKGZyb20sIHRvRnVuY3RvckZuKHRvKHRhcmdldCkpKTtcbiAgfSksICgwLCBfcmFtZGEuY3VycnkpKGZ1bmN0aW9uICh0b0Z1bmN0b3JGbiwgdGFyZ2V0KSB7XG4gICAgcmV0dXJuICgwLCBfcmFtZGEubWFwKSh0bywgdG9GdW5jdG9yRm4oZnJvbSh0YXJnZXQpKSk7XG4gIH0pKTtcbn07IC8vIGZyb20gOjogSXNvbW9ycGhpc20gLT4gYSAtPiBiXG5cblxudmFyIGZyb20gPSAoMCwgX3JhbWRhLmN1cnJ5KShmdW5jdGlvbiAoaXNvbW9ycGhpc20sIHgpIHtcbiAgcmV0dXJuIGlzb21vcnBoaXNtLmZyb20oeCk7XG59KTtcbi8qKlxuICogRGVmaW5lcyBhbiBpc29tb3JwaGlzbSB0aGF0IHdpbGwgd29yayBsaWtlIGEgbGVucy4gSXQgdGFrZXMgdHdvIGZ1bmN0aW9ucy5cbiAqIFRoZSBmdW5jdGlvbiB0aGF0IGNvbnZlcnRzIGFuZCB0aGUgZnVuY3Rpb24gdGhhdCByZWNvdmVycy5cbiAqXG4gKiBAZnVuYyBsZW5zSXNvXG4gKiBAbWVtYmVyT2YgUkFcbiAqIEBzaW5jZSB7QGxpbmsgaHR0cHM6Ly9jaGFyMG4uZ2l0aHViLmlvL3JhbWRhLWFkanVuY3QvMS4xOS4wfDEuMTkuMH1cbiAqIEBjYXRlZ29yeSBSZWxhdGlvblxuICogQHR5cGVkZWYgTGVucyBzIGEgPSBGdW5jdG9yIGYgPT4gKGEgLT4gZiBhKSAtPiBzIC0+IGYgc1xuICogQHNpZyAocyAtPiBhKSAtPiAoYSAtPiBzKSAtPiBMZW5zIHMgYVxuICogQHBhcmFtIHshZnVuY3Rpb259IHRvIFRoZSBmdW5jdGlvbiB0aGF0IGNvbnZlcnRzXG4gKiBAcGFyYW0geyFmdW5jdGlvbn0gZnJvbSBUaGUgZnVuY3Rpb24gdGhhdCByZWNvdmVyc1xuICogQHJldHVybiB7IWZ1bmN0aW9ufSBUaGUgaXNvbW9ycGhpYyBsZW5zXG4gKiBAc2VlIHtAbGluayBodHRwOi8vcmFtZGFqcy5jb20vZG9jcy8jbGVuc3xSLmxlbnN9XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBjb25zdCBsZW5zSlNPTiA9IFJBLmxlbnNJc28oSlNPTi5wYXJzZSwgSlNPTi5zdHJpbmdpZnkpO1xuICpcbiAqIFIub3ZlcihsZW5zSlNPTiwgYXNzb2MoJ2InLCAyKSwgJ3tcImFcIjoxfScpOyAvLz0+ICd7XCJhXCI6MSxcImJcIjoyfSdcbiAqIFIub3ZlcihSQS5sZW5zSXNvLmZyb20obGVuc0pTT04pLCBSLnJlcGxhY2UoJ30nLCAnLFwiYlwiOjJ9JyksIHsgYTogMSB9KTsgLy8gPT4geyBhOiAxLCBiOiAyIH1cbiAqL1xuXG52YXIgbGVuc0lzbyA9ICgwLCBfcmFtZGEuY3VycnkpKGlzb21vcnBoaXNtcyk7XG5sZW5zSXNvLmZyb20gPSBmcm9tO1xudmFyIF9kZWZhdWx0ID0gbGVuc0lzbztcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il19