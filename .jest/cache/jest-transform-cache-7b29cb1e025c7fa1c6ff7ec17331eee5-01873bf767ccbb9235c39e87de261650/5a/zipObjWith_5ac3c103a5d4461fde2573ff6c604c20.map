{"version":3,"sources":["zipObjWith.js"],"names":["exports","__esModule","_ramda","require","zipObjWith","curryN","fn","keys","values","pipe","zip","map","apply","fromPairs","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAsBA,IAAIC,UAAU,GAAG,CAAC,GAAGF,MAAM,CAACG,MAAX,EAAmB,CAAnB,EAAsB,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACjE,SAAO,CAAC,GAAGN,MAAM,CAACO,IAAX,EAAiBP,MAAM,CAACQ,GAAxB,EAA6B,CAAC,GAAGR,MAAM,CAACS,GAAX,EAAgB,CAAC,GAAGT,MAAM,CAACU,KAAX,EAAkBN,EAAlB,CAAhB,CAA7B,EAAqEJ,MAAM,CAACW,SAA5E,EAAuFL,MAAvF,EAA+FD,IAA/F,CAAP;AACD,CAFgB,CAAjB;AAGA,IAAIO,QAAQ,GAAGV,UAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBc,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Creates a new object out of a list of keys and a list of values by applying the function\n * to each equally-positioned pair in the lists.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n *\n * @func zipObjWith\n * @memberOf RA\n * @category Object\n * @since {@link https://char0n.github.io/ramda-adjunct/2.22.0|v2.22.0}\n * @sig (b, a) -> [k, v] -> [a] -> [b] -> { k: v }\n * @param {Function} fn The function to transform each value-key pair\n * @param {Array} keys Array to transform into the properties on the output object\n * @param {Array} values Array to transform into the values on the output object\n * @return {Object}  The object made by pairing up and transforming same-indexed elements of `keys` and `values`.\n * @see {@link https://ramdajs.com/docs/#zipObj|zipObj}, {@link RA.unzipObjWith|unzipObjWith}\n * @example\n *\n * RA.zipObjWith((value, key) => [key, `${key}${value + 1}`]), ['a', 'b', 'c'], [1, 2, 3]);\n *  // => { a: 'a2', b: 'b3', c: 'c4' }\n */\nvar zipObjWith = (0, _ramda.curryN)(3, function (fn, keys, values) {\n  return (0, _ramda.pipe)(_ramda.zip, (0, _ramda.map)((0, _ramda.apply)(fn)), _ramda.fromPairs)(values, keys);\n});\nvar _default = zipObjWith;\nexports[\"default\"] = _default;"]}