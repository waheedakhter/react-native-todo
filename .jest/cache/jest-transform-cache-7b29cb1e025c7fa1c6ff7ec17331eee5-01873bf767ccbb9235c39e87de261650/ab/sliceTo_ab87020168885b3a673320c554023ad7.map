{"version":3,"sources":["sliceTo.js"],"names":["exports","__esModule","_ramda","require","sliceTo","slice","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAoBA,IAAIC,OAAO,GAAG,CAAC,GAAGF,MAAM,CAACG,KAAX,EAAkB,CAAlB,CAAd;AACA,IAAIC,QAAQ,GAAGF,OAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBM,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Returns the elements of the given list or string (or object with a slice method)\n * to toIndex (exclusive).\n * Dispatches to the slice method of the second argument, if present.\n *\n * @func sliceTo\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.16.0|v1.16.0}\n * @category List\n * @sig  Number -> [a] -> [a]\n * @param {number} toIndex The end index (exclusive)\n * @param {Array|string} list The list or string to slice\n * @return {Array|string} The sliced list or string\n * @see {@link http://ramdajs.com/docs/#slice|R.slice}, {@link RA.sliceFrom|sliceFrom}\n * @example\n *\n * RA.sliceTo(2, [1, 2, 3]); //=> [1, 2]\n */\nvar sliceTo = (0, _ramda.slice)(0);\nvar _default = sliceTo;\nexports[\"default\"] = _default;"]}