{"version":3,"sources":["applySpec.js"],"names":["_curry1","require","apply","curryN","max","pluck","reduce","keys","values","mapValues","fn","obj","acc","key","applySpec","spec","v","args","arguments","f","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,KAAK,GAETD,OAAO,CAAC,SAAD,CAFP;;AAIA,IAAIE,MAAM,GAEVF,OAAO,CAAC,UAAD,CAFP;;AAIA,IAAIG,GAAG,GAEPH,OAAO,CAAC,OAAD,CAFP;;AAIA,IAAII,KAAK,GAETJ,OAAO,CAAC,SAAD,CAFP;;AAIA,IAAIK,MAAM,GAEVL,OAAO,CAAC,UAAD,CAFP;;AAIA,IAAIM,IAAI,GAERN,OAAO,CAAC,QAAD,CAFP;;AAIA,IAAIO,MAAM,GAEVP,OAAO,CAAC,UAAD,CAFP;;AAMA,SAASQ,SAAT,CAAmBC,EAAnB,EAAuBC,GAAvB,EAA4B;AAC1B,SAAOJ,IAAI,CAACI,GAAD,CAAJ,CAAUL,MAAV,CAAiB,UAAUM,GAAV,EAAeC,GAAf,EAAoB;AAC1CD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWH,EAAE,CAACC,GAAG,CAACE,GAAD,CAAJ,CAAb;AACA,WAAOD,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;;AA4BD,IAAIE,SAAS,GAEbd,OAAO,CAAC,SAASc,SAAT,CAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,GAAGN,SAAS,CAAC,UAAUO,CAAV,EAAa;AAC5B,WAAO,OAAOA,CAAP,IAAY,UAAZ,GAAyBA,CAAzB,GAA6BF,SAAS,CAACE,CAAD,CAA7C;AACD,GAFe,EAEbD,IAFa,CAAhB;AAGA,SAAOZ,MAAM,CAACG,MAAM,CAACF,GAAD,EAAM,CAAN,EAASC,KAAK,CAAC,QAAD,EAAWG,MAAM,CAACO,IAAD,CAAjB,CAAd,CAAP,EAAgD,YAAY;AACvE,QAAIE,IAAI,GAAGC,SAAX;AACA,WAAOT,SAAS,CAAC,UAAUU,CAAV,EAAa;AAC5B,aAAOjB,KAAK,CAACiB,CAAD,EAAIF,IAAJ,CAAZ;AACD,KAFe,EAEbF,IAFa,CAAhB;AAGD,GALY,CAAb;AAMD,CAVM,CAFP;;AAcAK,MAAM,CAACC,OAAP,GAAiBP,SAAjB","sourcesContent":["var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar apply =\n/*#__PURE__*/\nrequire(\"./apply\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n\nvar values =\n/*#__PURE__*/\nrequire(\"./values\"); // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\n\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nmodule.exports = applySpec;"]}