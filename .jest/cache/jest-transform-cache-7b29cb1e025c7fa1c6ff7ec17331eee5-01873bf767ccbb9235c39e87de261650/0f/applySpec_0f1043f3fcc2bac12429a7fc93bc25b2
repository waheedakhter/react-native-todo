9f55d10d30d62dde9e7a7ac97677e740
var _curry1 = require("./internal/_curry1");

var apply = require("./apply");

var curryN = require("./curryN");

var max = require("./max");

var pluck = require("./pluck");

var reduce = require("./reduce");

var keys = require("./keys");

var values = require("./values");

function mapValues(fn, obj) {
  return keys(obj).reduce(function (acc, key) {
    acc[key] = fn(obj[key]);
    return acc;
  }, {});
}

var applySpec = _curry1(function applySpec(spec) {
  spec = mapValues(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return mapValues(function (f) {
      return apply(f, args);
    }, spec);
  });
});

module.exports = applySpec;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGx5U3BlYy5qcyJdLCJuYW1lcyI6WyJfY3VycnkxIiwicmVxdWlyZSIsImFwcGx5IiwiY3VycnlOIiwibWF4IiwicGx1Y2siLCJyZWR1Y2UiLCJrZXlzIiwidmFsdWVzIiwibWFwVmFsdWVzIiwiZm4iLCJvYmoiLCJhY2MiLCJrZXkiLCJhcHBseVNwZWMiLCJzcGVjIiwidiIsImFyZ3MiLCJhcmd1bWVudHMiLCJmIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUVYQyxPQUFPLENBQUMsb0JBQUQsQ0FGUDs7QUFJQSxJQUFJQyxLQUFLLEdBRVRELE9BQU8sQ0FBQyxTQUFELENBRlA7O0FBSUEsSUFBSUUsTUFBTSxHQUVWRixPQUFPLENBQUMsVUFBRCxDQUZQOztBQUlBLElBQUlHLEdBQUcsR0FFUEgsT0FBTyxDQUFDLE9BQUQsQ0FGUDs7QUFJQSxJQUFJSSxLQUFLLEdBRVRKLE9BQU8sQ0FBQyxTQUFELENBRlA7O0FBSUEsSUFBSUssTUFBTSxHQUVWTCxPQUFPLENBQUMsVUFBRCxDQUZQOztBQUlBLElBQUlNLElBQUksR0FFUk4sT0FBTyxDQUFDLFFBQUQsQ0FGUDs7QUFJQSxJQUFJTyxNQUFNLEdBRVZQLE9BQU8sQ0FBQyxVQUFELENBRlA7O0FBTUEsU0FBU1EsU0FBVCxDQUFtQkMsRUFBbkIsRUFBdUJDLEdBQXZCLEVBQTRCO0FBQzFCLFNBQU9KLElBQUksQ0FBQ0ksR0FBRCxDQUFKLENBQVVMLE1BQVYsQ0FBaUIsVUFBVU0sR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQzFDRCxJQUFBQSxHQUFHLENBQUNDLEdBQUQsQ0FBSCxHQUFXSCxFQUFFLENBQUNDLEdBQUcsQ0FBQ0UsR0FBRCxDQUFKLENBQWI7QUFDQSxXQUFPRCxHQUFQO0FBQ0QsR0FITSxFQUdKLEVBSEksQ0FBUDtBQUlEOztBQTRCRCxJQUFJRSxTQUFTLEdBRWJkLE9BQU8sQ0FBQyxTQUFTYyxTQUFULENBQW1CQyxJQUFuQixFQUF5QjtBQUMvQkEsRUFBQUEsSUFBSSxHQUFHTixTQUFTLENBQUMsVUFBVU8sQ0FBVixFQUFhO0FBQzVCLFdBQU8sT0FBT0EsQ0FBUCxJQUFZLFVBQVosR0FBeUJBLENBQXpCLEdBQTZCRixTQUFTLENBQUNFLENBQUQsQ0FBN0M7QUFDRCxHQUZlLEVBRWJELElBRmEsQ0FBaEI7QUFHQSxTQUFPWixNQUFNLENBQUNHLE1BQU0sQ0FBQ0YsR0FBRCxFQUFNLENBQU4sRUFBU0MsS0FBSyxDQUFDLFFBQUQsRUFBV0csTUFBTSxDQUFDTyxJQUFELENBQWpCLENBQWQsQ0FBUCxFQUFnRCxZQUFZO0FBQ3ZFLFFBQUlFLElBQUksR0FBR0MsU0FBWDtBQUNBLFdBQU9ULFNBQVMsQ0FBQyxVQUFVVSxDQUFWLEVBQWE7QUFDNUIsYUFBT2pCLEtBQUssQ0FBQ2lCLENBQUQsRUFBSUYsSUFBSixDQUFaO0FBQ0QsS0FGZSxFQUViRixJQUZhLENBQWhCO0FBR0QsR0FMWSxDQUFiO0FBTUQsQ0FWTSxDQUZQOztBQWNBSyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLFNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9jdXJyeTEgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vaW50ZXJuYWwvX2N1cnJ5MVwiKTtcblxudmFyIGFwcGx5ID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL2FwcGx5XCIpO1xuXG52YXIgY3VycnlOID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL2N1cnJ5TlwiKTtcblxudmFyIG1heCA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9tYXhcIik7XG5cbnZhciBwbHVjayA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9wbHVja1wiKTtcblxudmFyIHJlZHVjZSA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9yZWR1Y2VcIik7XG5cbnZhciBrZXlzID1cbi8qI19fUFVSRV9fKi9cbnJlcXVpcmUoXCIuL2tleXNcIik7XG5cbnZhciB2YWx1ZXMgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vdmFsdWVzXCIpOyAvLyBVc2UgY3VzdG9tIG1hcFZhbHVlcyBmdW5jdGlvbiB0byBhdm9pZCBpc3N1ZXMgd2l0aCBzcGVjcyB0aGF0IGluY2x1ZGUgYSBcIm1hcFwiIGtleSBhbmQgUi5tYXBcbi8vIGRlbGVnYXRpbmcgY2FsbHMgdG8gLm1hcFxuXG5cbmZ1bmN0aW9uIG1hcFZhbHVlcyhmbiwgb2JqKSB7XG4gIHJldHVybiBrZXlzKG9iaikucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgIGFjY1trZXldID0gZm4ob2JqW2tleV0pO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn1cbi8qKlxuICogR2l2ZW4gYSBzcGVjIG9iamVjdCByZWN1cnNpdmVseSBtYXBwaW5nIHByb3BlcnRpZXMgdG8gZnVuY3Rpb25zLCBjcmVhdGVzIGFcbiAqIGZ1bmN0aW9uIHByb2R1Y2luZyBhbiBvYmplY3Qgb2YgdGhlIHNhbWUgc3RydWN0dXJlLCBieSBtYXBwaW5nIGVhY2ggcHJvcGVydHlcbiAqIHRvIHRoZSByZXN1bHQgb2YgY2FsbGluZyBpdHMgYXNzb2NpYXRlZCBmdW5jdGlvbiB3aXRoIHRoZSBzdXBwbGllZCBhcmd1bWVudHMuXG4gKlxuICogQGZ1bmNcbiAqIEBtZW1iZXJPZiBSXG4gKiBAc2luY2UgdjAuMjAuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAc2lnIHtrOiAoKGEsIGIsIC4uLiwgbSkgLT4gdil9IC0+ICgoYSwgYiwgLi4uLCBtKSAtPiB7azogdn0pXG4gKiBAcGFyYW0ge09iamVjdH0gc3BlYyBhbiBvYmplY3QgcmVjdXJzaXZlbHkgbWFwcGluZyBwcm9wZXJ0aWVzIHRvIGZ1bmN0aW9ucyBmb3JcbiAqICAgICAgICBwcm9kdWNpbmcgdGhlIHZhbHVlcyBmb3IgdGhlc2UgcHJvcGVydGllcy5cbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBvYmplY3Qgb2YgdGhlIHNhbWUgc3RydWN0dXJlXG4gKiBhcyBgc3BlYycsIHdpdGggZWFjaCBwcm9wZXJ0eSBzZXQgdG8gdGhlIHZhbHVlIHJldHVybmVkIGJ5IGNhbGxpbmcgaXRzXG4gKiBhc3NvY2lhdGVkIGZ1bmN0aW9uIHdpdGggdGhlIHN1cHBsaWVkIGFyZ3VtZW50cy5cbiAqIEBzZWUgUi5jb252ZXJnZSwgUi5qdXh0XG4gKiBAZXhhbXBsZVxuICpcbiAqICAgICAgY29uc3QgZ2V0TWV0cmljcyA9IFIuYXBwbHlTcGVjKHtcbiAqICAgICAgICBzdW06IFIuYWRkLFxuICogICAgICAgIG5lc3RlZDogeyBtdWw6IFIubXVsdGlwbHkgfVxuICogICAgICB9KTtcbiAqICAgICAgZ2V0TWV0cmljcygyLCA0KTsgLy8gPT4geyBzdW06IDYsIG5lc3RlZDogeyBtdWw6IDggfSB9XG4gKiBAc3ltYiBSLmFwcGx5U3BlYyh7IHg6IGYsIHk6IHsgejogZyB9IH0pKGEsIGIpID0geyB4OiBmKGEsIGIpLCB5OiB7IHo6IGcoYSwgYikgfSB9XG4gKi9cblxuXG52YXIgYXBwbHlTcGVjID1cbi8qI19fUFVSRV9fKi9cbl9jdXJyeTEoZnVuY3Rpb24gYXBwbHlTcGVjKHNwZWMpIHtcbiAgc3BlYyA9IG1hcFZhbHVlcyhmdW5jdGlvbiAodikge1xuICAgIHJldHVybiB0eXBlb2YgdiA9PSAnZnVuY3Rpb24nID8gdiA6IGFwcGx5U3BlYyh2KTtcbiAgfSwgc3BlYyk7XG4gIHJldHVybiBjdXJyeU4ocmVkdWNlKG1heCwgMCwgcGx1Y2soJ2xlbmd0aCcsIHZhbHVlcyhzcGVjKSkpLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG1hcFZhbHVlcyhmdW5jdGlvbiAoZikge1xuICAgICAgcmV0dXJuIGFwcGx5KGYsIGFyZ3MpO1xuICAgIH0sIHNwZWMpO1xuICB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcGx5U3BlYzsiXX0=