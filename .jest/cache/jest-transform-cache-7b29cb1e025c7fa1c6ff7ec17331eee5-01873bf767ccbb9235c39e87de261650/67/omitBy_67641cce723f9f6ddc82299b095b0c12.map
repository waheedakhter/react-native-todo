{"version":3,"sources":["omitBy.js"],"names":["exports","__esModule","_ramda","require","omitBy","useWith","pickBy","complement","identity","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAwBA,IAAIC,MAAM,GAAG,CAAC,GAAGF,MAAM,CAACG,OAAX,EAAoBH,MAAM,CAACI,MAA3B,EAAmC,CAACJ,MAAM,CAACK,UAAR,EAAoBL,MAAM,CAACM,QAA3B,CAAnC,CAAb;AACA,IAAIC,QAAQ,GAAGL,MAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/* eslint-disable max-len */\n\n/**\n * Returns a partial copy of an object containing only the keys\n * that don't satisfy the supplied predicate.\n *\n * @func omitBy\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.6.0|v2.6.0}\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {!Function} pred A predicate to determine whether or not a key should be included on the output object\n * @param {!Object} obj The object to copy from\n * @return {!Object} A new object only with properties that don't satisfy `pred`\n *\n * @example\n *\n * const isLowerCase = (val, key) => key.toLowerCase() === key;\n * RA.omitBy(isLowerCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n/* eslint-enable max-len */\nvar omitBy = (0, _ramda.useWith)(_ramda.pickBy, [_ramda.complement, _ramda.identity]);\nvar _default = omitBy;\nexports[\"default\"] = _default;"]}