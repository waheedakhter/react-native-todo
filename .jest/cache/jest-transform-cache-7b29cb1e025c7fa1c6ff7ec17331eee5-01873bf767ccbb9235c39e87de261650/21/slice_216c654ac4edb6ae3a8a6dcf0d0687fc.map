{"version":3,"sources":["slice.js"],"names":["_checkForMethod","require","_curry3","slice","fromIndex","toIndex","list","Array","prototype","call","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAEnBC,OAAO,CAAC,4BAAD,CAFP;;AAIA,IAAIC,OAAO,GAEXD,OAAO,CAAC,oBAAD,CAFP;;AA6BA,IAAIE,KAAK,GAETD,OAAO,CAEPF,eAAe,CAAC,OAAD,EAAU,SAASG,KAAT,CAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AAChE,SAAOC,KAAK,CAACC,SAAN,CAAgBL,KAAhB,CAAsBM,IAAtB,CAA2BH,IAA3B,EAAiCF,SAAjC,EAA4CC,OAA5C,CAAP;AACD,CAFc,CAFR,CAFP;;AAQAK,MAAM,CAACC,OAAP,GAAiBR,KAAjB","sourcesContent":["var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;"]}