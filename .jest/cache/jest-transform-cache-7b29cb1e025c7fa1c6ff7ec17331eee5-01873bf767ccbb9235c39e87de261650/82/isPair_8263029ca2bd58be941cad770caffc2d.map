{"version":3,"sources":["isPair.js"],"names":["exports","__esModule","_ramda","require","_isArray","_interopRequireDefault","obj","isPair","curryN","both","pipe","length","equals","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACF,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAsBjG,IAAIC,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGN,MAAM,CAACO,IAAX,EAAiBL,QAAQ,CAAC,SAAD,CAAzB,EAAsC,CAAC,GAAGF,MAAM,CAACQ,IAAX,EAAiBR,MAAM,CAACS,MAAxB,EAAgC,CAAC,GAAGT,MAAM,CAACU,MAAX,EAAmB,CAAnB,CAAhC,CAAtC,CAAtB,CAAb;AACA,IAAIC,QAAQ,GAAGN,MAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isArray = _interopRequireDefault(require(\"./isArray\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if input value is a pair.\n *\n * @func isPair\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.19.0|v1.19.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link http://ramdajs.com/docs/#pair|R.pair}, {@link RA.isNotPair|isNotPair}\n * @example\n *\n * RA.isPair([]); // => false\n * RA.isPair([0]); // => false\n * RA.isPair([0, 1]); // => true\n * RA.isPair([0, 1, 2]); // => false\n * RA.isPair({ 0: 0, 1: 1 }); // => false\n * RA.isPair({ foo: 0, bar: 0 }); // => false\n */\nvar isPair = (0, _ramda.curryN)(1, (0, _ramda.both)(_isArray[\"default\"], (0, _ramda.pipe)(_ramda.length, (0, _ramda.equals)(2))));\nvar _default = isPair;\nexports[\"default\"] = _default;"]}