{"version":3,"sources":["weaveLazy.js"],"names":["exports","__esModule","_ramda","require","weaveLazy","curryN","fn","configAccessor","length","apply","arguments","run","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAgCA,IAAIC,SAAS,GAAG,CAAC,GAAGF,MAAM,CAACG,MAAX,EAAmB,CAAnB,EAAsB,UAAUC,EAAV,EAAcC,cAAd,EAA8B;AAClE,SAAO,CAAC,GAAGL,MAAM,CAACG,MAAX,EAAmBC,EAAE,CAACE,MAAtB,EAA8B,YAAY;AAC/C,WAAOF,EAAE,CAACG,KAAH,CAAS,KAAK,CAAd,EAAiBC,SAAjB,EAA4BC,GAA5B,CAAgCJ,cAAc,EAA9C,CAAP;AACD,GAFM,CAAP;AAGD,CAJe,CAAhB;AAKA,IAAIK,QAAQ,GAAGR,SAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBY,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Weaves a configuration into function returning the runnable monad like `Reader` or `Free`.\n * This allows us to pre-bind the configuration in advance and use the weaved function\n * without need to explicitly pass the configuration on every call.\n *\n * @func weaveLazy\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.10.0|v1.10.0}\n * @category Function\n * @sig (*... -> *) -> (* -> *) -> (*... -> *)\n * @param {Function} fn The function to weave\n * @param {Function} configAccessor The function that returns the configuration object\n * @return {Function} Auto-curried weaved function\n * @example\n *\n * const { Reader: reader } = require('monet');\n *\n * const log = value => reader(\n *   config => config.log(value)\n * );\n *\n * const consoleAccessor = R.always(console);\n *\n * // no weaving\n * log('test').run(console); //=> prints 'test'\n *\n * // weaving\n * const wlog = RA.weaveLazy(log, consoleAccessor);\n * wlog('test'); //=> prints 'test'\n */\nvar weaveLazy = (0, _ramda.curryN)(2, function (fn, configAccessor) {\n  return (0, _ramda.curryN)(fn.length, function () {\n    return fn.apply(void 0, arguments).run(configAccessor());\n  });\n});\nvar _default = weaveLazy;\nexports[\"default\"] = _default;"]}