a4868e4fb65702fb875d2890a912655a
"use strict";

exports.__esModule = true;
exports.padStartPonyfill = exports.padStartInvoker = exports["default"] = void 0;

var _ramda = require("ramda");

var _isFunction = _interopRequireDefault(require("./isFunction"));

var _String = _interopRequireDefault(require("./internal/ponyfills/String.padStart"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var padStartInvoker = (0, _ramda.flip)((0, _ramda.invoker)(2, 'padStart'));
exports.padStartInvoker = padStartInvoker;
var padStartPonyfill = (0, _ramda.curry)(_String["default"]);
exports.padStartPonyfill = padStartPonyfill;
var padCharsStart = (0, _isFunction["default"])(String.prototype.padStart) ? padStartInvoker : padStartPonyfill;
var _default = padCharsStart;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZENoYXJzU3RhcnQuanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJwYWRTdGFydFBvbnlmaWxsIiwicGFkU3RhcnRJbnZva2VyIiwiX3JhbWRhIiwicmVxdWlyZSIsIl9pc0Z1bmN0aW9uIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9TdHJpbmciLCJvYmoiLCJmbGlwIiwiaW52b2tlciIsImN1cnJ5IiwicGFkQ2hhcnNTdGFydCIsIlN0cmluZyIsInByb3RvdHlwZSIsInBhZFN0YXJ0IiwiX2RlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDRSxnQkFBUixHQUEyQkYsT0FBTyxDQUFDRyxlQUFSLEdBQTBCSCxPQUFPLENBQUMsU0FBRCxDQUFQLEdBQXFCLEtBQUssQ0FBL0U7O0FBRUEsSUFBSUksTUFBTSxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFwQjs7QUFFQSxJQUFJQyxXQUFXLEdBQUdDLHNCQUFzQixDQUFDRixPQUFPLENBQUMsY0FBRCxDQUFSLENBQXhDOztBQUVBLElBQUlHLE9BQU8sR0FBR0Qsc0JBQXNCLENBQUNGLE9BQU8sQ0FBQyxzQ0FBRCxDQUFSLENBQXBDOztBQUVBLFNBQVNFLHNCQUFULENBQWdDRSxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDUixVQUFYLEdBQXdCUSxHQUF4QixHQUE4QjtBQUFFLGVBQVdBO0FBQWIsR0FBckM7QUFBMEQ7O0FBRWpHLElBQUlOLGVBQWUsR0FBRyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ00sSUFBWCxFQUFpQixDQUFDLEdBQUdOLE1BQU0sQ0FBQ08sT0FBWCxFQUFvQixDQUFwQixFQUF1QixVQUF2QixDQUFqQixDQUF0QjtBQUNBWCxPQUFPLENBQUNHLGVBQVIsR0FBMEJBLGVBQTFCO0FBQ0EsSUFBSUQsZ0JBQWdCLEdBQUcsQ0FBQyxHQUFHRSxNQUFNLENBQUNRLEtBQVgsRUFBa0JKLE9BQU8sQ0FBQyxTQUFELENBQXpCLENBQXZCO0FBdUJBUixPQUFPLENBQUNFLGdCQUFSLEdBQTJCQSxnQkFBM0I7QUFDQSxJQUFJVyxhQUFhLEdBQUcsQ0FBQyxHQUFHUCxXQUFXLENBQUMsU0FBRCxDQUFmLEVBQTRCUSxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQTdDLElBQXlEYixlQUF6RCxHQUEyRUQsZ0JBQS9GO0FBQ0EsSUFBSWUsUUFBUSxHQUFHSixhQUFmO0FBQ0FiLE9BQU8sQ0FBQyxTQUFELENBQVAsR0FBcUJpQixRQUFyQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5wYWRTdGFydFBvbnlmaWxsID0gZXhwb3J0cy5wYWRTdGFydEludm9rZXIgPSBleHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9yYW1kYSA9IHJlcXVpcmUoXCJyYW1kYVwiKTtcblxudmFyIF9pc0Z1bmN0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9pc0Z1bmN0aW9uXCIpKTtcblxudmFyIF9TdHJpbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2ludGVybmFsL3BvbnlmaWxscy9TdHJpbmcucGFkU3RhcnRcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxudmFyIHBhZFN0YXJ0SW52b2tlciA9ICgwLCBfcmFtZGEuZmxpcCkoKDAsIF9yYW1kYS5pbnZva2VyKSgyLCAncGFkU3RhcnQnKSk7XG5leHBvcnRzLnBhZFN0YXJ0SW52b2tlciA9IHBhZFN0YXJ0SW52b2tlcjtcbnZhciBwYWRTdGFydFBvbnlmaWxsID0gKDAsIF9yYW1kYS5jdXJyeSkoX1N0cmluZ1tcImRlZmF1bHRcIl0pO1xuLyoqXG4gKiBUaGUgZnVuY3Rpb24gcGFkcyB0aGUgY3VycmVudCBzdHJpbmcgd2l0aCBhIGdpdmVuIHN0cmluZ1xuICogKHJlcGVhdGVkLCBpZiBuZWVkZWQpIHNvIHRoYXQgdGhlIHJlc3VsdGluZyBzdHJpbmcgcmVhY2hlcyBhIGdpdmVuIGxlbmd0aC5cbiAqIFRoZSBwYWRkaW5nIGlzIGFwcGxpZWQgZnJvbSB0aGUgc3RhcnQgb2YgdGhlIGN1cnJlbnQgc3RyaW5nLlxuICpcbiAqIEBmdW5jIHBhZENoYXJzU3RhcnRcbiAqIEBtZW1iZXJPZiBSQVxuICogQHNpbmNlIHtAbGluayBodHRwczovL2NoYXIwbi5naXRodWIuaW8vcmFtZGEtYWRqdW5jdC8yLjIyLjB8djIuMjIuMH1cbiAqIEBjYXRlZ29yeSBTdHJpbmdcbiAqIEBzaWcgU3RyaW5nIC0+IE51bWJlciAtPiBTdHJpbmcgLT4gU3RyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFkU3RyaW5nIFRoZSBzdHJpbmcgdG8gcGFkIHRoZSBjdXJyZW50IHN0cmluZyB3aXRoXG4gKiBAcGFyYW0ge251bWJlcn0gdGFyZ2V0TGVuZ3RoIFRoZSBsZW5ndGggb2YgdGhlIHJlc3VsdGluZyBzdHJpbmcgb25jZSB0aGUgY3VycmVudCBzdHJpbmcgaGFzIGJlZW4gcGFkZGVkXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgU3RyaW5nIHZhbHVlIHRvIGJlIHBhZGRlZFxuICogQHJldHVybiB7c3RyaW5nfSBBIG5ldyBzdHJpbmcgb2YgdGhlIHNwZWNpZmllZCBsZW5ndGggd2l0aCB0aGUgcGFkIHN0cmluZyBvbiB0aGUgc3RhcnQgb2YgY3VycmVudCBzdHJpbmdcbiAqIEBzZWUge0BsaW5rIFJBLnBhZFN0YXJ0fHBhZFN0YXJ0fSwge0BsaW5rIFJBLnBhZEVuZHxwYWRFbmR9LCB7QGxpbmsgUkEucGFkQ2hhcnNFbmR8cGFkQ2hhcnNFbmR9XG4gKiBAZXhhbXBsZVxuICpcbiAqIFJBLnBhZENoYXJzU3RhcnQoJy0nLCAzLCAnYScpOyAvLyA9PiAnLS1hJ1xuICogUkEucGFkQ2hhcnNTdGFydCgnZm9vJywgMTAsICdhYmMnKTsgLy8gPT4gJ2Zvb2Zvb2ZhYmMnXG4gKiBSQS5wYWRDaGFyc1N0YXJ0KCcxMjM0NTYnLCA2LCAnYWJjJyk7IC8vID0+ICcxMjNhYmMnXG4gKi9cblxuZXhwb3J0cy5wYWRTdGFydFBvbnlmaWxsID0gcGFkU3RhcnRQb255ZmlsbDtcbnZhciBwYWRDaGFyc1N0YXJ0ID0gKDAsIF9pc0Z1bmN0aW9uW1wiZGVmYXVsdFwiXSkoU3RyaW5nLnByb3RvdHlwZS5wYWRTdGFydCkgPyBwYWRTdGFydEludm9rZXIgOiBwYWRTdGFydFBvbnlmaWxsO1xudmFyIF9kZWZhdWx0ID0gcGFkQ2hhcnNTdGFydDtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il19