{"version":3,"sources":["AnimatedCallFunc.js"],"names":["AnimatedNode","constructor","what","args","el","params","type","toString","beginContext","param","endContext","__onEvaluate","value","p"],"mappings":"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","sourcesContent":["import AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport { adapt } from './AnimatedBlock';\nimport { val } from '../val';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedCallFunc extends AnimatedNode {\n  _previousCallID;\n  _what;\n  _args;\n  _params;\n  constructor(what, args, params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      args.every(el => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got ${args}`\n    );\n    invariant(\n      params.every(el => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got ${params}`\n    );\n    super(\n      {\n        type: 'callfunc',\n        what,\n        args,\n        params,\n      },\n      [...args]\n    );\n    this._what = what;\n    this._args = args;\n    this._params = params;\n  }\n\n  toString() {\n    return `AnimatedCallFunc, id: ${this.__nodeID}`;\n  }\n\n  beginContext() {\n    this._previousCallID = getCallID();\n    setCallID(getCallID() + '/' + this.__nodeID);\n\n    this._params.forEach((param, index) => {\n      param.beginContext(this._args[index], this._previousCallID);\n    });\n  }\n\n  endContext() {\n    this._params.forEach((param, index) => {\n      param.endContext();\n    });\n    setCallID(this._previousCallID);\n  }\n\n  __onEvaluate() {\n    this.beginContext();\n    const value = val(this._what);\n    this.endContext();\n    return value;\n  }\n}\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(p => adapt(p)), params);\n}\n"]}