{"version":3,"sources":["AnimatedFunction.js"],"names":["AnimatedNode","constructor","what","type","__onEvaluate","toString","params","cb","i","func","args"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IAEA,gB;;;;;AAGEC,4BAAW,IAAXA,EAA6B;AAAA;;AAAA;AAC3B,KAAA,GAAA,UAAA,CAAA,OAAA,EACEC,IAAI,YAAYF,aAAAA,CADlB,OAAA,EAAA,uFAAA,MAAA,CAAA,IAAA,CAAA;;AAD2B,sCAAlB,MAAkB;AAAlB,MAAA,MAAkB;AAAA;;AAK3B,8BACE;AACEG,MAAAA,IAAI,EADN,MAAA;AAEED,MAAAA,IAAAA,EAAAA;AAFF,KADF,GAKE,IALF,SAAA,MAAA;;AAL2B,IAAA,eAAA,8CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAY3B,UAAA,KAAA,GAAA,IAAA;;AACA,UAAA,QAAA;;AAb2B;AAc5B;;;;WAEDE,wBAAe;AACb,aAAO,CAAA,GAAA,IAAA,CAAA,GAAA,EAAI,KAAX,KAAO,CAAP;AACD;;;WAEDC,oBAAW;AACT,aAAA,yBAAA,MAAA,CAAgC,KAAhC,QAAA,CAAA;AACD;;;EAzB4BL,aAAAA,CAA/B,O;;AA4BO,SAAA,sBAAA,CAAA,EAAA,EAAoC;AACzC,MAAMM,MAAM,GAAG,IAAA,KAAA,CAAUC,EAAE,CAA3B,MAAe,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,MAAM,CAA1B,MAAA,EAAmCE,CAAnC,EAAA,EAAwC;AACtCF,IAAAA,MAAM,CAANA,CAAM,CAANA,GAAY,CAAA,GAAA,cAAA,CAAZA,mBAAY,GAAZA;AAHuC;;AAMzC,MAAMJ,IAAI,GAAGK,EAAE,MAAFA,SAAb,MAAaA,CAAb;AACA,MAAME,IAAI,4BAAG,gBAAH,GAAG,IAAH,SAAV,MAAU,EAAV;AACA,SAAO,YAAa;AAAA,uCAAb,IAAa;AAAb,MAAA,IAAa;AAAA;;AAClB,QAAIC,IAAI,CAAJA,MAAAA,KAAgBJ,MAAM,CAA1B,MAAA,EAAmC;AACjC,YAAM,IAAA,KAAA,CACJ,mEACEA,MAAM,CADR,MAAA,GAAA,mBAAA,GAGEI,IAAI,CAHN,MAAA,GADF,GAAM,CAAN;AAOD;;AACD,WAAO,CAAA,GAAA,iBAAA,CAAA,sBAAA,EAAA,IAAA,EAAA,IAAA,EAAP,MAAO,CAAP;AAVF,GAAA;AAYD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    super(\n      {\n        type: 'func',\n        what,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n\n  toString() {\n    return `AnimatedFunction, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  // eslint-disable-next-line standard/no-callback-literal\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"]}