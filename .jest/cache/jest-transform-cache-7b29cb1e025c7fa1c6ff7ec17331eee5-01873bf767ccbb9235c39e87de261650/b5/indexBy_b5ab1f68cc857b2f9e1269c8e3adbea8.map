{"version":3,"sources":["indexBy.js"],"names":["reduceBy","require","indexBy","acc","elem","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAEZC,OAAO,CAAC,YAAD,CAFP;;AA2BA,IAAIC,OAAO,GAEXF,QAAQ,CAAC,UAAUG,GAAV,EAAeC,IAAf,EAAqB;AAC5B,SAAOA,IAAP;AACD,CAFO,EAEL,IAFK,CAFR;AAKAC,MAAM,CAACC,OAAP,GAAiBJ,OAAjB","sourcesContent":["var reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;"]}