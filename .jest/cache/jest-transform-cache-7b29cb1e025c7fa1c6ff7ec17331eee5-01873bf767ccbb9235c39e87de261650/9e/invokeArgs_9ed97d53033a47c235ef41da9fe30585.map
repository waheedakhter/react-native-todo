{"version":3,"sources":["invokeArgs.js"],"names":["exports","__esModule","_ramda","require","_isNotFunction","_interopRequireDefault","_isEmptyArray","obj","invokeArgs","curryN","mpath","args","method","path","context","init","undefined","boundMethod","bind","apply","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,IAAIG,aAAa,GAAGD,sBAAsB,CAACF,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAmBjG,IAAIC,UAAU,GAAG,CAAC,GAAGN,MAAM,CAACO,MAAX,EAAmB,CAAnB,EAAsB,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBJ,GAAvB,EAA4B;AACjE,MAAIK,MAAM,GAAG,CAAC,GAAGV,MAAM,CAACW,IAAX,EAAiBH,KAAjB,EAAwBH,GAAxB,CAAb;AACA,MAAIO,OAAO,GAAG,CAAC,GAAGZ,MAAM,CAACW,IAAX,EAAiB,CAAC,GAAGX,MAAM,CAACa,IAAX,EAAiBL,KAAjB,CAAjB,EAA0CH,GAA1C,CAAd;AACA,MAAI,CAAC,GAAGH,cAAc,CAAC,SAAD,CAAlB,EAA+BQ,MAA/B,CAAJ,EAA4C,OAAOI,SAAP;AAC5C,MAAI,CAAC,GAAGV,aAAa,CAAC,SAAD,CAAjB,EAA8BI,KAA9B,CAAJ,EAA0C,OAAOM,SAAP;AAC1C,MAAIC,WAAW,GAAG,CAAC,GAAGf,MAAM,CAACgB,IAAX,EAAiBN,MAAjB,EAAyBE,OAAzB,CAAlB;AACA,SAAO,CAAC,GAAGZ,MAAM,CAACiB,KAAX,EAAkBF,WAAlB,EAA+BN,IAA/B,CAAP;AACD,CAPgB,CAAjB;AAQA,IAAIS,QAAQ,GAAGZ,UAAf;AACAR,OAAO,CAAC,SAAD,CAAP,GAAqBoB,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isNotFunction = _interopRequireDefault(require(\"./isNotFunction\"));\n\nvar _isEmptyArray = _interopRequireDefault(require(\"./isEmptyArray\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Invokes the method at path of object with given arguments.\n *\n * @func invokeArgs\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.27.0|v2.27.0}\n * @category Object\n * @sig Array -> Array -> Object -> *\n * @param {Array.<string|number>} path The path of the method to invoke\n * @param {Array} args The arguments to invoke the method with\n * @param {Object} obj The object to query\n * @return {*}\n * @example\n *\n * RA.invokeArgs(['abs'], [-1], Math); //=> 1\n * RA.invokeArgs(['path', 'to', 'non-existent', 'method'], [-1], Math); //=> undefined\n */\nvar invokeArgs = (0, _ramda.curryN)(3, function (mpath, args, obj) {\n  var method = (0, _ramda.path)(mpath, obj);\n  var context = (0, _ramda.path)((0, _ramda.init)(mpath), obj);\n  if ((0, _isNotFunction[\"default\"])(method)) return undefined;\n  if ((0, _isEmptyArray[\"default\"])(mpath)) return undefined;\n  var boundMethod = (0, _ramda.bind)(method, context);\n  return (0, _ramda.apply)(boundMethod, args);\n});\nvar _default = invokeArgs;\nexports[\"default\"] = _default;"]}