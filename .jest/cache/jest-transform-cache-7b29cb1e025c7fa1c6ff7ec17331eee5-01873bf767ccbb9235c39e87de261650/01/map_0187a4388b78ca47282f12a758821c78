4f725f6f349ef5fa6bee46571c13aec7
var _curry2 = require("./internal/_curry2");

var _dispatchable = require("./internal/_dispatchable");

var _map = require("./internal/_map");

var _reduce = require("./internal/_reduce");

var _xmap = require("./internal/_xmap");

var curryN = require("./curryN");

var keys = require("./keys");

var map = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });

    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));

    default:
      return _map(fn, functor);
  }
}));

module.exports = map;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC5qcyJdLCJuYW1lcyI6WyJfY3VycnkyIiwicmVxdWlyZSIsIl9kaXNwYXRjaGFibGUiLCJfbWFwIiwiX3JlZHVjZSIsIl94bWFwIiwiY3VycnlOIiwia2V5cyIsIm1hcCIsImZuIiwiZnVuY3RvciIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsImxlbmd0aCIsImFwcGx5IiwiYXJndW1lbnRzIiwiYWNjIiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUVYQyxPQUFPLENBQUMsb0JBQUQsQ0FGUDs7QUFJQSxJQUFJQyxhQUFhLEdBRWpCRCxPQUFPLENBQUMsMEJBQUQsQ0FGUDs7QUFJQSxJQUFJRSxJQUFJLEdBRVJGLE9BQU8sQ0FBQyxpQkFBRCxDQUZQOztBQUlBLElBQUlHLE9BQU8sR0FFWEgsT0FBTyxDQUFDLG9CQUFELENBRlA7O0FBSUEsSUFBSUksS0FBSyxHQUVUSixPQUFPLENBQUMsa0JBQUQsQ0FGUDs7QUFJQSxJQUFJSyxNQUFNLEdBRVZMLE9BQU8sQ0FBQyxVQUFELENBRlA7O0FBSUEsSUFBSU0sSUFBSSxHQUVSTixPQUFPLENBQUMsUUFBRCxDQUZQOztBQXdDQSxJQUFJTyxHQUFHLEdBRVBSLE9BQU8sQ0FFUEUsYUFBYSxDQUFDLENBQUMsa0JBQUQsRUFBcUIsS0FBckIsQ0FBRCxFQUE4QkcsS0FBOUIsRUFBcUMsU0FBU0csR0FBVCxDQUFhQyxFQUFiLEVBQWlCQyxPQUFqQixFQUEwQjtBQUMxRSxVQUFRQyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxJQUExQixDQUErQkosT0FBL0IsQ0FBUjtBQUNFLFNBQUssbUJBQUw7QUFDRSxhQUFPSixNQUFNLENBQUNJLE9BQU8sQ0FBQ0ssTUFBVCxFQUFpQixZQUFZO0FBQ3hDLGVBQU9OLEVBQUUsQ0FBQ0ssSUFBSCxDQUFRLElBQVIsRUFBY0osT0FBTyxDQUFDTSxLQUFSLENBQWMsSUFBZCxFQUFvQkMsU0FBcEIsQ0FBZCxDQUFQO0FBQ0QsT0FGWSxDQUFiOztBQUlGLFNBQUssaUJBQUw7QUFDRSxhQUFPYixPQUFPLENBQUMsVUFBVWMsR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQ2pDRCxRQUFBQSxHQUFHLENBQUNDLEdBQUQsQ0FBSCxHQUFXVixFQUFFLENBQUNDLE9BQU8sQ0FBQ1MsR0FBRCxDQUFSLENBQWI7QUFDQSxlQUFPRCxHQUFQO0FBQ0QsT0FIYSxFQUdYLEVBSFcsRUFHUFgsSUFBSSxDQUFDRyxPQUFELENBSEcsQ0FBZDs7QUFLRjtBQUNFLGFBQU9QLElBQUksQ0FBQ00sRUFBRCxFQUFLQyxPQUFMLENBQVg7QUFiSjtBQWVELENBaEJZLENBRk4sQ0FGUDs7QUFzQkFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2N1cnJ5MiA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fY3VycnkyXCIpO1xuXG52YXIgX2Rpc3BhdGNoYWJsZSA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fZGlzcGF0Y2hhYmxlXCIpO1xuXG52YXIgX21hcCA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fbWFwXCIpO1xuXG52YXIgX3JlZHVjZSA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9pbnRlcm5hbC9fcmVkdWNlXCIpO1xuXG52YXIgX3htYXAgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vaW50ZXJuYWwvX3htYXBcIik7XG5cbnZhciBjdXJyeU4gPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vY3VycnlOXCIpO1xuXG52YXIga2V5cyA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi9rZXlzXCIpO1xuLyoqXG4gKiBUYWtlcyBhIGZ1bmN0aW9uIGFuZFxuICogYSBbZnVuY3Rvcl0oaHR0cHM6Ly9naXRodWIuY29tL2ZhbnRhc3lsYW5kL2ZhbnRhc3ktbGFuZCNmdW5jdG9yKSxcbiAqIGFwcGxpZXMgdGhlIGZ1bmN0aW9uIHRvIGVhY2ggb2YgdGhlIGZ1bmN0b3IncyB2YWx1ZXMsIGFuZCByZXR1cm5zXG4gKiBhIGZ1bmN0b3Igb2YgdGhlIHNhbWUgc2hhcGUuXG4gKlxuICogUmFtZGEgcHJvdmlkZXMgc3VpdGFibGUgYG1hcGAgaW1wbGVtZW50YXRpb25zIGZvciBgQXJyYXlgIGFuZCBgT2JqZWN0YCxcbiAqIHNvIHRoaXMgZnVuY3Rpb24gbWF5IGJlIGFwcGxpZWQgdG8gYFsxLCAyLCAzXWAgb3IgYHt4OiAxLCB5OiAyLCB6OiAzfWAuXG4gKlxuICogRGlzcGF0Y2hlcyB0byB0aGUgYG1hcGAgbWV0aG9kIG9mIHRoZSBzZWNvbmQgYXJndW1lbnQsIGlmIHByZXNlbnQuXG4gKlxuICogQWN0cyBhcyBhIHRyYW5zZHVjZXIgaWYgYSB0cmFuc2Zvcm1lciBpcyBnaXZlbiBpbiBsaXN0IHBvc2l0aW9uLlxuICpcbiAqIEFsc28gdHJlYXRzIGZ1bmN0aW9ucyBhcyBmdW5jdG9ycyBhbmQgd2lsbCBjb21wb3NlIHRoZW0gdG9nZXRoZXIuXG4gKlxuICogQGZ1bmNcbiAqIEBtZW1iZXJPZiBSXG4gKiBAc2luY2UgdjAuMS4wXG4gKiBAY2F0ZWdvcnkgTGlzdFxuICogQHNpZyBGdW5jdG9yIGYgPT4gKGEgLT4gYikgLT4gZiBhIC0+IGYgYlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBvbiBldmVyeSBlbGVtZW50IG9mIHRoZSBpbnB1dCBgbGlzdGAuXG4gKiBAcGFyYW0ge0FycmF5fSBsaXN0IFRoZSBsaXN0IHRvIGJlIGl0ZXJhdGVkIG92ZXIuXG4gKiBAcmV0dXJuIHtBcnJheX0gVGhlIG5ldyBsaXN0LlxuICogQHNlZSBSLnRyYW5zZHVjZSwgUi5hZGRJbmRleFxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgIGNvbnN0IGRvdWJsZSA9IHggPT4geCAqIDI7XG4gKlxuICogICAgICBSLm1hcChkb3VibGUsIFsxLCAyLCAzXSk7IC8vPT4gWzIsIDQsIDZdXG4gKlxuICogICAgICBSLm1hcChkb3VibGUsIHt4OiAxLCB5OiAyLCB6OiAzfSk7IC8vPT4ge3g6IDIsIHk6IDQsIHo6IDZ9XG4gKiBAc3ltYiBSLm1hcChmLCBbYSwgYl0pID0gW2YoYSksIGYoYildXG4gKiBAc3ltYiBSLm1hcChmLCB7IHg6IGEsIHk6IGIgfSkgPSB7IHg6IGYoYSksIHk6IGYoYikgfVxuICogQHN5bWIgUi5tYXAoZiwgZnVuY3Rvcl9vKSA9IGZ1bmN0b3Jfby5tYXAoZilcbiAqL1xuXG5cbnZhciBtYXAgPVxuLyojX19QVVJFX18qL1xuX2N1cnJ5Mihcbi8qI19fUFVSRV9fKi9cbl9kaXNwYXRjaGFibGUoWydmYW50YXN5LWxhbmQvbWFwJywgJ21hcCddLCBfeG1hcCwgZnVuY3Rpb24gbWFwKGZuLCBmdW5jdG9yKSB7XG4gIHN3aXRjaCAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGZ1bmN0b3IpKSB7XG4gICAgY2FzZSAnW29iamVjdCBGdW5jdGlvbl0nOlxuICAgICAgcmV0dXJuIGN1cnJ5TihmdW5jdG9yLmxlbmd0aCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCBmdW5jdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgICAgfSk7XG5cbiAgICBjYXNlICdbb2JqZWN0IE9iamVjdF0nOlxuICAgICAgcmV0dXJuIF9yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgICAgIGFjY1trZXldID0gZm4oZnVuY3RvcltrZXldKTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIHt9LCBrZXlzKGZ1bmN0b3IpKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gX21hcChmbiwgZnVuY3Rvcik7XG4gIH1cbn0pKTtcblxubW9kdWxlLmV4cG9ydHMgPSBtYXA7Il19