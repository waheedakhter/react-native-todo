d0a289138edac6383d2e9fd262a8f194
"use strict";

exports.__esModule = true;
exports["default"] = exports.allSettledPPonyfill = void 0;

var _ramda = require("ramda");

var _isFunction = _interopRequireDefault(require("./isFunction"));

var _Promise = _interopRequireDefault(require("./internal/ponyfills/Promise.allSettled"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var allSettledPPonyfill = (0, _ramda.curryN)(1, _Promise["default"]);
exports.allSettledPPonyfill = allSettledPPonyfill;
var allSettledP = (0, _isFunction["default"])(Promise.allSettled) ? (0, _ramda.curryN)(1, (0, _ramda.bind)(Promise.allSettled, Promise)) : allSettledPPonyfill;
var _default = allSettledP;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsbFNldHRsZWRQLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiYWxsU2V0dGxlZFBQb255ZmlsbCIsIl9yYW1kYSIsInJlcXVpcmUiLCJfaXNGdW5jdGlvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfUHJvbWlzZSIsIm9iaiIsImN1cnJ5TiIsImFsbFNldHRsZWRQIiwiUHJvbWlzZSIsImFsbFNldHRsZWQiLCJiaW5kIiwiX2RlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQkEsT0FBTyxDQUFDRSxtQkFBUixHQUE4QixLQUFLLENBQXhEOztBQUVBLElBQUlDLE1BQU0sR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBcEI7O0FBRUEsSUFBSUMsV0FBVyxHQUFHQyxzQkFBc0IsQ0FBQ0YsT0FBTyxDQUFDLGNBQUQsQ0FBUixDQUF4Qzs7QUFFQSxJQUFJRyxRQUFRLEdBQUdELHNCQUFzQixDQUFDRixPQUFPLENBQUMseUNBQUQsQ0FBUixDQUFyQzs7QUFFQSxTQUFTRSxzQkFBVCxDQUFnQ0UsR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ1AsVUFBWCxHQUF3Qk8sR0FBeEIsR0FBOEI7QUFBRSxlQUFXQTtBQUFiLEdBQXJDO0FBQTBEOztBQUVqRyxJQUFJTixtQkFBbUIsR0FBRyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ00sTUFBWCxFQUFtQixDQUFuQixFQUFzQkYsUUFBUSxDQUFDLFNBQUQsQ0FBOUIsQ0FBMUI7QUF3QkFQLE9BQU8sQ0FBQ0UsbUJBQVIsR0FBOEJBLG1CQUE5QjtBQUNBLElBQUlRLFdBQVcsR0FBRyxDQUFDLEdBQUdMLFdBQVcsQ0FBQyxTQUFELENBQWYsRUFBNEJNLE9BQU8sQ0FBQ0MsVUFBcEMsSUFBa0QsQ0FBQyxHQUFHVCxNQUFNLENBQUNNLE1BQVgsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBQyxHQUFHTixNQUFNLENBQUNVLElBQVgsRUFBaUJGLE9BQU8sQ0FBQ0MsVUFBekIsRUFBcUNELE9BQXJDLENBQXRCLENBQWxELEdBQXlIVCxtQkFBM0k7QUFDQSxJQUFJWSxRQUFRLEdBQUdKLFdBQWY7QUFDQVYsT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQmMsUUFBckIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZXhwb3J0cy5hbGxTZXR0bGVkUFBvbnlmaWxsID0gdm9pZCAwO1xuXG52YXIgX3JhbWRhID0gcmVxdWlyZShcInJhbWRhXCIpO1xuXG52YXIgX2lzRnVuY3Rpb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2lzRnVuY3Rpb25cIikpO1xuXG52YXIgX1Byb21pc2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2ludGVybmFsL3BvbnlmaWxscy9Qcm9taXNlLmFsbFNldHRsZWRcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxudmFyIGFsbFNldHRsZWRQUG9ueWZpbGwgPSAoMCwgX3JhbWRhLmN1cnJ5TikoMSwgX1Byb21pc2VbXCJkZWZhdWx0XCJdKTtcbi8qKlxuICogUmV0dXJucyBhIHByb21pc2UgdGhhdCBpcyBmdWxmaWxsZWQgd2l0aCBhbiBhcnJheSBvZiBwcm9taXNlIHN0YXRlIHNuYXBzaG90cyxcbiAqIGJ1dCBvbmx5IGFmdGVyIGFsbCB0aGUgb3JpZ2luYWwgcHJvbWlzZXMgaGF2ZSBzZXR0bGVkLCBpLmUuIGJlY29tZSBlaXRoZXIgZnVsZmlsbGVkIG9yIHJlamVjdGVkLlxuICogV2Ugc2F5IHRoYXQgYSBwcm9taXNlIGlzIHNldHRsZWQgaWYgaXQgaXMgbm90IHBlbmRpbmcsIGkuZS4gaWYgaXQgaXMgZWl0aGVyIGZ1bGZpbGxlZCBvciByZWplY3RlZC5cbiAqXG4gKiBAZnVuYyBhbGxTZXR0bGVkUFxuICogQG1lbWJlck9mIFJBXG4gKiBAc2luY2Uge0BsaW5rIGh0dHBzOi8vY2hhcjBuLmdpdGh1Yi5pby9yYW1kYS1hZGp1bmN0LzIuMTguMHx2Mi4xOC4wfVxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAdHlwZWRlZiBTZXR0bGVtZW50ID0geyBzdGF0dXM6IFN0cmluZywgdmFsdWU6ICogfVxuICogQHNpZyBbUHJvbWlzZSBhXSAtPiBQcm9taXNlIFtTZXR0bGVtZW50IGFdXG4gKiBAcGFyYW0ge0l0ZXJhYmxlLjwqPn0gaXRlcmFibGUgQW4gaXRlcmFibGUgb2JqZWN0IHN1Y2ggYXMgYW4gQXJyYXkgb3IgU3RyaW5nXG4gKiBAcmV0dXJuIHtQcm9taXNlfSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGlzIGZ1bGZpbGxlZCB3aXRoIGFuIGFycmF5IG9mIHByb21pc2Ugc3RhdGUgc25hcHNob3RzXG4gKiBAc2VlIHtAbGluayBSQS5hbGxQfGFsbFB9XG4gKiBAZXhhbXBsZVxuICpcbiAqIFJBLmFsbFNldHRsZWRQKFtcbiAqICAgUHJvbWlzZS5yZXNvbHZlKDEpLFxuICogICAyLFxuICogICBQcm9taXNlLnJlamVjdCgzKSxcbiAqIF0pOyAvLz0+IFByb21pc2UoW3sgc3RhdHVzOiAnZnVsZmlsbGVkJywgdmFsdWU6IDEgfSwgeyBzdGF0dXM6ICdmdWxmaWxsZWQnLCB2YWx1ZTogMiB9LCB7IHN0YXR1czogJ3JlamVjdGVkJywgcmVhc29uOiAzIH1dKVxuICovXG5cbmV4cG9ydHMuYWxsU2V0dGxlZFBQb255ZmlsbCA9IGFsbFNldHRsZWRQUG9ueWZpbGw7XG52YXIgYWxsU2V0dGxlZFAgPSAoMCwgX2lzRnVuY3Rpb25bXCJkZWZhdWx0XCJdKShQcm9taXNlLmFsbFNldHRsZWQpID8gKDAsIF9yYW1kYS5jdXJyeU4pKDEsICgwLCBfcmFtZGEuYmluZCkoUHJvbWlzZS5hbGxTZXR0bGVkLCBQcm9taXNlKSkgOiBhbGxTZXR0bGVkUFBvbnlmaWxsO1xudmFyIF9kZWZhdWx0ID0gYWxsU2V0dGxlZFA7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdfQ==