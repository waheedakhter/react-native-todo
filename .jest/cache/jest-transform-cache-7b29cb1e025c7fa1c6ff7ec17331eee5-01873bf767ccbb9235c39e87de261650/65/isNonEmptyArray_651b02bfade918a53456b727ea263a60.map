{"version":3,"sources":["isNonEmptyArray.js"],"names":["exports","__esModule","_ramda","require","_isNotEmpty","_interopRequireDefault","_isArray","obj","isNonEmptyArray","both","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIG,QAAQ,GAAGD,sBAAsB,CAACF,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAuBjG,IAAIC,eAAe,GAAG,CAAC,GAAGN,MAAM,CAACO,IAAX,EAAiBH,QAAQ,CAAC,SAAD,CAAzB,EAAsCF,WAAW,CAAC,SAAD,CAAjD,CAAtB;AACA,IAAIM,QAAQ,GAAGF,eAAf;AACAR,OAAO,CAAC,SAAD,CAAP,GAAqBU,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isNotEmpty = _interopRequireDefault(require(\"./isNotEmpty\"));\n\nvar _isArray = _interopRequireDefault(require(\"./isArray\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if input value is not an empty `Array`.\n *\n * @func isNonEmptyArray\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.4.0|v2.4.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isEmptyArray|isEmptyArray}\n * @example\n *\n * RA.isNonEmptyArray([42]); // => true\n * RA.isNonEmptyArray([]); // => false\n * RA.isNonEmptyArray({}); // => false\n * RA.isNonEmptyArray(null); // => false\n * RA.isNonEmptyArray(undefined); // => false\n * RA.isNonEmptyArray(42); // => false\n * RA.isNonEmptyArray('42'); // => false\n */\nvar isNonEmptyArray = (0, _ramda.both)(_isArray[\"default\"], _isNotEmpty[\"default\"]);\nvar _default = isNonEmptyArray;\nexports[\"default\"] = _default;"]}