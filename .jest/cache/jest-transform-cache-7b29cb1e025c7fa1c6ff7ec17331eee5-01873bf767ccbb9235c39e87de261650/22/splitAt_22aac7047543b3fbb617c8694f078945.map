{"version":3,"sources":["splitAt.js"],"names":["_curry2","require","length","slice","splitAt","index","array","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,MAAM,GAEVD,OAAO,CAAC,UAAD,CAFP;;AAIA,IAAIE,KAAK,GAETF,OAAO,CAAC,SAAD,CAFP;;AAuBA,IAAIG,OAAO,GAEXJ,OAAO,CAAC,SAASI,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AACrC,SAAO,CAACH,KAAK,CAAC,CAAD,EAAIE,KAAJ,EAAWC,KAAX,CAAN,EAAyBH,KAAK,CAACE,KAAD,EAAQH,MAAM,CAACI,KAAD,CAAd,EAAuBA,KAAvB,CAA9B,CAAP;AACD,CAFM,CAFP;;AAMAC,MAAM,CAACC,OAAP,GAAiBJ,OAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar length =\n/*#__PURE__*/\nrequire(\"./length\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nmodule.exports = splitAt;"]}