{"version":3,"sources":["composeWith.js"],"names":["_curry2","require","pipeWith","reverse","composeWith","xf","list","apply","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,QAAQ,GAEZD,OAAO,CAAC,YAAD,CAFP;;AAIA,IAAIE,OAAO,GAEXF,OAAO,CAAC,WAAD,CAFP;;AA6BA,IAAIG,WAAW,GAEfJ,OAAO,CAAC,SAASI,WAAT,CAAqBC,EAArB,EAAyBC,IAAzB,EAA+B;AACrC,SAAOJ,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqB,CAACF,EAAD,EAAKF,OAAO,CAACG,IAAD,CAAZ,CAArB,CAAP;AACD,CAFM,CAFP;;AAMAE,MAAM,CAACC,OAAP,GAAiBL,WAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar pipeWith =\n/*#__PURE__*/\nrequire(\"./pipeWith\");\n\nvar reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\n/**\n * Performs right-to-left function composition using transforming function. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried. Transforming function is not used on the\n * last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nmodule.exports = composeWith;"]}