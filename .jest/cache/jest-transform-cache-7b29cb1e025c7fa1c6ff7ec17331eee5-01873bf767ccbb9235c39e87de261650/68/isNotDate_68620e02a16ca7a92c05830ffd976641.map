{"version":3,"sources":["isNotDate.js"],"names":["exports","__esModule","_ramda","require","_isDate","_interopRequireDefault","obj","isNotDate","complement","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACF,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAkBjG,IAAIC,SAAS,GAAG,CAAC,GAAGL,MAAM,CAACM,UAAX,EAAuBJ,OAAO,CAAC,SAAD,CAA9B,CAAhB;AACA,IAAIK,QAAQ,GAAGF,SAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isDate = _interopRequireDefault(require(\"./isDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if value is complement of `Date` object.\n *\n * @func isNotDate\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.6.0|v0.6.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isDate|isDate}\n * @example\n *\n * RA.isNotDate(new Date()); //=> false\n * RA.isNotDate('1997-07-16T19:20+01:00'); //=> true\n */\nvar isNotDate = (0, _ramda.complement)(_isDate[\"default\"]);\nvar _default = isNotDate;\nexports[\"default\"] = _default;"]}