{"version":3,"sources":["nand.js"],"names":["exports","__esModule","_ramda","require","nand","complement","and","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAwBA,IAAIC,IAAI,GAAG,CAAC,GAAGF,MAAM,CAACG,UAAX,EAAuBH,MAAM,CAACI,GAA9B,CAAX;AAEA,IAAIC,QAAQ,GAAGH,IAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBO,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Returns false if both arguments are truthy; true otherwise.\n *\n * @func nand\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.19.0|v2.19.0}\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean} false if both arguments are truesy\n * @example\n *\n * RA.nand(true, true); //=> false\n * RA.nand(false, true); //=> true\n * RA.nand(true, false); //=> true\n * RA.nand(false, false); //=> true\n * RA.nand(1.0, 1.0); //=> false\n * RA.nand(1.0, 0); //=> true\n * RA.nand(0, 1.0); //=> true\n * RA.nand(0, 0); //=> true\n */\nvar nand = (0, _ramda.complement)(_ramda.and); // eslint-disable-line ramda/complement-simplification\n\nvar _default = nand;\nexports[\"default\"] = _default;"]}