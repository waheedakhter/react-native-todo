{"version":3,"sources":["NavigationContainer.tsx"],"names":["NavigationContainer","theme","DefaultTheme","fallback","rest","isLinkingEnabled","linking","refContainer","React","getInitialState","enabled","prefixes","linkingContext","options","isReady","onReadyRef"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport LinkingContext from './LinkingContext';\nimport useThenable from './useThenable';\nimport useLinking from './useLinking';\nimport useDocumentTitle from './useDocumentTitle';\nimport useBackButton from './useBackButton';\nimport type { Theme, LinkingOptions, DocumentTitleOptions } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props,\n  ref?: React.Ref<NavigationContainerRef | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n});\n\nexport default NavigationContainer;\n"]}