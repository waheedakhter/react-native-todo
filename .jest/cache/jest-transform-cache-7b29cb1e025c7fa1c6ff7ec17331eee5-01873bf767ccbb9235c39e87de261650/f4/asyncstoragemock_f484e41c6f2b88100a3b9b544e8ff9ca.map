{"version":3,"sources":["async-storage-mock.js"],"names":["merge","require","bind","concatArrays","ignoreUndefined","asMock","__INTERNAL_MOCK_STORAGE__","setItem","jest","fn","key","value","callback","multiSet","undefined","setResult","getItem","multiGet","getResult","result","removeItem","multiRemove","mergeItem","multiMerge","clear","_clear","getAllKeys","_getAllKeys","flushGetRequests","_multiGet","_multiSet","_multiRemove","_multiMerge","useAsyncStorage","args","keyValuePairs","forEach","keyValue","keys","values","map","Object","oldValue","JSON","stringify","parse","module","exports"],"mappings":"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","sourcesContent":["/**\n * @format\n */\n\nconst merge = require('merge-options').bind({\n  concatArrays: true,\n  ignoreUndefined: true,\n});\n\nconst asMock = {\n  __INTERNAL_MOCK_STORAGE__: {},\n\n  setItem: jest.fn(async (key, value, callback) => {\n    const setResult = await asMock.multiSet([[key, value]], undefined);\n\n    callback && callback(setResult);\n    return setResult;\n  }),\n\n  getItem: jest.fn(async (key, callback) => {\n    const getResult = await asMock.multiGet([key], undefined);\n\n    const result = getResult[0] ? getResult[0][1] : null;\n\n    callback && callback(null, result);\n    return result;\n  }),\n\n  removeItem: jest.fn((key, callback) => asMock.multiRemove([key], callback)),\n  mergeItem: jest.fn((key, value, callback) =>\n    asMock.multiMerge([[key, value]], callback),\n  ),\n\n  clear: jest.fn(_clear),\n  getAllKeys: jest.fn(_getAllKeys),\n  flushGetRequests: jest.fn(),\n\n  multiGet: jest.fn(_multiGet),\n  multiSet: jest.fn(_multiSet),\n  multiRemove: jest.fn(_multiRemove),\n  multiMerge: jest.fn(_multiMerge),\n  useAsyncStorage: jest.fn((key) => {\n    return {\n      getItem: (...args) => asMock.getItem(key, ...args),\n      setItem: (...args) => asMock.setItem(key, ...args),\n      mergeItem: (...args) => asMock.mergeItem(key, ...args),\n      removeItem: (...args) => asMock.removeItem(key, ...args),\n    };\n  }),\n};\n\nasync function _multiSet(keyValuePairs, callback) {\n  keyValuePairs.forEach((keyValue) => {\n    const key = keyValue[0];\n\n    asMock.__INTERNAL_MOCK_STORAGE__[key] = keyValue[1];\n  });\n  callback && callback(null);\n  return null;\n}\n\nasync function _multiGet(keys, callback) {\n  const values = keys.map((key) => [\n    key,\n    asMock.__INTERNAL_MOCK_STORAGE__[key] || null,\n  ]);\n  callback && callback(null, values);\n\n  return values;\n}\n\nasync function _multiRemove(keys, callback) {\n  keys.forEach((key) => {\n    if (asMock.__INTERNAL_MOCK_STORAGE__[key]) {\n      delete asMock.__INTERNAL_MOCK_STORAGE__[key];\n    }\n  });\n\n  callback && callback(null);\n  return null;\n}\n\nasync function _clear(callback) {\n  asMock.__INTERNAL_MOCK_STORAGE__ = {};\n\n  callback && callback(null);\n\n  return null;\n}\n\nasync function _getAllKeys() {\n  return Object.keys(asMock.__INTERNAL_MOCK_STORAGE__);\n}\n\nasync function _multiMerge(keyValuePairs, callback) {\n  keyValuePairs.forEach((keyValue) => {\n    const [key, value] = keyValue;\n    const oldValue = asMock.__INTERNAL_MOCK_STORAGE__[key];\n    asMock.__INTERNAL_MOCK_STORAGE__[key] =\n      oldValue != null\n        ? JSON.stringify(merge(JSON.parse(oldValue), JSON.parse(value)))\n        : value;\n  });\n\n  callback && callback(null);\n  return null;\n}\n\nmodule.exports = asMock;\n"]}