{"version":3,"sources":["paths.js"],"names":["exports","__esModule","_ramda","require","paths","curry","ps","obj","ap","path","__","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAuBA,IAAIC,KAAK,GAAG,CAAC,GAAGF,MAAM,CAACG,KAAX,EAAkB,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AAC/C,SAAO,CAAC,GAAGL,MAAM,CAACM,EAAX,EAAe,CAAC,CAAC,GAAGN,MAAM,CAACO,IAAX,EAAiBP,MAAM,CAACQ,EAAxB,EAA4BH,GAA5B,CAAD,CAAf,EAAmDD,EAAnD,CAAP;AACD,CAFW,CAAZ;AAGA,IAAIK,QAAQ,GAAGP,KAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBW,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Acts as multiple path: arrays of paths in, array of values out. Preserves order.\n *\n * @func paths\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.2.0|v1.2.0}\n * @category List\n * @sig  [[k]] -> {k: v} - [v]\n * @param {Array} ps The property paths to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function\n * @see {@link https://github.com/ramda/ramda/wiki/Cookbook#derivative-of-rprops-for-deep-fields|Ramda Cookbook}, {@link http://ramdajs.com/docs/#props|R.props}\n * @example\n *\n * const obj = {\n *   a: { b: { c: 1 } },\n *   x: 2,\n * };\n *\n * RA.paths([['a', 'b', 'c'], ['x']], obj); //=> [1, 2]\n */\nvar paths = (0, _ramda.curry)(function (ps, obj) {\n  return (0, _ramda.ap)([(0, _ramda.path)(_ramda.__, obj)], ps);\n});\nvar _default = paths;\nexports[\"default\"] = _default;"]}