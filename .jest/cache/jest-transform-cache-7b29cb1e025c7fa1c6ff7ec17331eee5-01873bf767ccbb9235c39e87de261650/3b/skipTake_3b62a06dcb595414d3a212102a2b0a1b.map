{"version":3,"sources":["skipTake.js"],"names":["exports","__esModule","_ramda","require","skipTake","curry","n","list","addIndex","filter","pipe","nthArg","modulo","__","identical","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAkBA,IAAIC,QAAQ,GAAG,CAAC,GAAGF,MAAM,CAACG,KAAX,EAAkB,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AAClD,SAAO,CAAC,GAAGL,MAAM,CAACM,QAAX,EAAqBN,MAAM,CAACO,MAA5B,EAAoC,CAAC,GAAGP,MAAM,CAACQ,IAAX,EAAiB,CAAC,GAAGR,MAAM,CAACS,MAAX,EAAmB,CAAnB,CAAjB,EAAwC,CAAC,GAAGT,MAAM,CAACU,MAAX,EAAmBV,MAAM,CAACW,EAA1B,EAA8BP,CAA9B,CAAxC,EAA0E,CAAC,GAAGJ,MAAM,CAACY,SAAX,EAAsB,CAAtB,CAA1E,CAApC,EAAyIP,IAAzI,CAAP;AACD,CAFc,CAAf;AAGA,IAAIQ,QAAQ,GAAGX,QAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBe,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * When given a number n and an array, returns an array containing every nth element.\n *\n * @func skipTake\n * @memberOf RA\n * @category List\n * @since {@link https://char0n.github.io/ramda-adjunct/2.26.0|v2.26.0}\n * @sig Number -> [a] -> [a]\n * @param {number} the nth element to extract\n * @param {Array} value the input array\n * @return {Array} An array containing every nth element\n * @example\n *\n * RA.skipTake(2, [1,2,3,4]) //=> [1, 3]\n * RA.skipTake(3, R.range(0, 20)); //=> [0, 3, 6, 9, 12, 15, 18]\n */\nvar skipTake = (0, _ramda.curry)(function (n, list) {\n  return (0, _ramda.addIndex)(_ramda.filter)((0, _ramda.pipe)((0, _ramda.nthArg)(1), (0, _ramda.modulo)(_ramda.__, n), (0, _ramda.identical)(0)))(list);\n});\nvar _default = skipTake;\nexports[\"default\"] = _default;"]}