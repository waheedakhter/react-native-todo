1ff17d5d15b3cf90a4ad905052e9ae5f
var equals = require("../equals");

function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;

          while (idx < list.length) {
            item = list[idx];

            if (item === 0 && 1 / item === inf) {
              return idx;
            }

            idx += 1;
          }

          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];

            if (typeof item === 'number' && item !== item) {
              return idx;
            }

            idx += 1;
          }

          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }

    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }

    idx += 1;
  }

  return -1;
}

module.exports = _indexOf;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9pbmRleE9mLmpzIl0sIm5hbWVzIjpbImVxdWFscyIsInJlcXVpcmUiLCJfaW5kZXhPZiIsImxpc3QiLCJhIiwiaWR4IiwiaW5mIiwiaXRlbSIsImluZGV4T2YiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBRVZDLE9BQU8sQ0FBQyxXQUFELENBRlA7O0FBSUEsU0FBU0MsUUFBVCxDQUFrQkMsSUFBbEIsRUFBd0JDLENBQXhCLEVBQTJCQyxHQUEzQixFQUFnQztBQUM5QixNQUFJQyxHQUFKLEVBQVNDLElBQVQ7O0FBRUEsTUFBSSxPQUFPSixJQUFJLENBQUNLLE9BQVosS0FBd0IsVUFBNUIsRUFBd0M7QUFDdEMsWUFBUSxPQUFPSixDQUFmO0FBQ0UsV0FBSyxRQUFMO0FBQ0UsWUFBSUEsQ0FBQyxLQUFLLENBQVYsRUFBYTtBQUVYRSxVQUFBQSxHQUFHLEdBQUcsSUFBSUYsQ0FBVjs7QUFFQSxpQkFBT0MsR0FBRyxHQUFHRixJQUFJLENBQUNNLE1BQWxCLEVBQTBCO0FBQ3hCRixZQUFBQSxJQUFJLEdBQUdKLElBQUksQ0FBQ0UsR0FBRCxDQUFYOztBQUVBLGdCQUFJRSxJQUFJLEtBQUssQ0FBVCxJQUFjLElBQUlBLElBQUosS0FBYUQsR0FBL0IsRUFBb0M7QUFDbEMscUJBQU9ELEdBQVA7QUFDRDs7QUFFREEsWUFBQUEsR0FBRyxJQUFJLENBQVA7QUFDRDs7QUFFRCxpQkFBTyxDQUFDLENBQVI7QUFDRCxTQWZELE1BZU8sSUFBSUQsQ0FBQyxLQUFLQSxDQUFWLEVBQWE7QUFFbEIsaUJBQU9DLEdBQUcsR0FBR0YsSUFBSSxDQUFDTSxNQUFsQixFQUEwQjtBQUN4QkYsWUFBQUEsSUFBSSxHQUFHSixJQUFJLENBQUNFLEdBQUQsQ0FBWDs7QUFFQSxnQkFBSSxPQUFPRSxJQUFQLEtBQWdCLFFBQWhCLElBQTRCQSxJQUFJLEtBQUtBLElBQXpDLEVBQStDO0FBQzdDLHFCQUFPRixHQUFQO0FBQ0Q7O0FBRURBLFlBQUFBLEdBQUcsSUFBSSxDQUFQO0FBQ0Q7O0FBRUQsaUJBQU8sQ0FBQyxDQUFSO0FBQ0Q7O0FBR0QsZUFBT0YsSUFBSSxDQUFDSyxPQUFMLENBQWFKLENBQWIsRUFBZ0JDLEdBQWhCLENBQVA7O0FBR0YsV0FBSyxRQUFMO0FBQ0EsV0FBSyxTQUFMO0FBQ0EsV0FBSyxVQUFMO0FBQ0EsV0FBSyxXQUFMO0FBQ0UsZUFBT0YsSUFBSSxDQUFDSyxPQUFMLENBQWFKLENBQWIsRUFBZ0JDLEdBQWhCLENBQVA7O0FBRUYsV0FBSyxRQUFMO0FBQ0UsWUFBSUQsQ0FBQyxLQUFLLElBQVYsRUFBZ0I7QUFFZCxpQkFBT0QsSUFBSSxDQUFDSyxPQUFMLENBQWFKLENBQWIsRUFBZ0JDLEdBQWhCLENBQVA7QUFDRDs7QUE5Q0w7QUFpREQ7O0FBR0QsU0FBT0EsR0FBRyxHQUFHRixJQUFJLENBQUNNLE1BQWxCLEVBQTBCO0FBQ3hCLFFBQUlULE1BQU0sQ0FBQ0csSUFBSSxDQUFDRSxHQUFELENBQUwsRUFBWUQsQ0FBWixDQUFWLEVBQTBCO0FBQ3hCLGFBQU9DLEdBQVA7QUFDRDs7QUFFREEsSUFBQUEsR0FBRyxJQUFJLENBQVA7QUFDRDs7QUFFRCxTQUFPLENBQUMsQ0FBUjtBQUNEOztBQUVESyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGVxdWFscyA9XG4vKiNfX1BVUkVfXyovXG5yZXF1aXJlKFwiLi4vZXF1YWxzXCIpO1xuXG5mdW5jdGlvbiBfaW5kZXhPZihsaXN0LCBhLCBpZHgpIHtcbiAgdmFyIGluZiwgaXRlbTsgLy8gQXJyYXkucHJvdG90eXBlLmluZGV4T2YgZG9lc24ndCBleGlzdCBiZWxvdyBJRTlcblxuICBpZiAodHlwZW9mIGxpc3QuaW5kZXhPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHN3aXRjaCAodHlwZW9mIGEpIHtcbiAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgIGlmIChhID09PSAwKSB7XG4gICAgICAgICAgLy8gbWFudWFsbHkgY3Jhd2wgdGhlIGxpc3QgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiArMCBhbmQgLTBcbiAgICAgICAgICBpbmYgPSAxIC8gYTtcblxuICAgICAgICAgIHdoaWxlIChpZHggPCBsaXN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgaXRlbSA9IGxpc3RbaWR4XTtcblxuICAgICAgICAgICAgaWYgKGl0ZW0gPT09IDAgJiYgMSAvIGl0ZW0gPT09IGluZikge1xuICAgICAgICAgICAgICByZXR1cm4gaWR4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZHggKz0gMTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH0gZWxzZSBpZiAoYSAhPT0gYSkge1xuICAgICAgICAgIC8vIE5hTlxuICAgICAgICAgIHdoaWxlIChpZHggPCBsaXN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgaXRlbSA9IGxpc3RbaWR4XTtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBpdGVtID09PSAnbnVtYmVyJyAmJiBpdGVtICE9PSBpdGVtKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpZHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlkeCArPSAxO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfSAvLyBub24temVybyBudW1iZXJzIGNhbiB1dGlsaXNlIFNldFxuXG5cbiAgICAgICAgcmV0dXJuIGxpc3QuaW5kZXhPZihhLCBpZHgpO1xuICAgICAgLy8gYWxsIHRoZXNlIHR5cGVzIGNhbiB1dGlsaXNlIFNldFxuXG4gICAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICBjYXNlICd1bmRlZmluZWQnOlxuICAgICAgICByZXR1cm4gbGlzdC5pbmRleE9mKGEsIGlkeCk7XG5cbiAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgIGlmIChhID09PSBudWxsKSB7XG4gICAgICAgICAgLy8gbnVsbCBjYW4gdXRpbGlzZSBTZXRcbiAgICAgICAgICByZXR1cm4gbGlzdC5pbmRleE9mKGEsIGlkeCk7XG4gICAgICAgIH1cblxuICAgIH1cbiAgfSAvLyBhbnl0aGluZyBlbHNlIG5vdCBjb3ZlcmVkIGFib3ZlLCBkZWZlciB0byBSLmVxdWFsc1xuXG5cbiAgd2hpbGUgKGlkeCA8IGxpc3QubGVuZ3RoKSB7XG4gICAgaWYgKGVxdWFscyhsaXN0W2lkeF0sIGEpKSB7XG4gICAgICByZXR1cm4gaWR4O1xuICAgIH1cblxuICAgIGlkeCArPSAxO1xuICB9XG5cbiAgcmV0dXJuIC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmRleE9mOyJdfQ==