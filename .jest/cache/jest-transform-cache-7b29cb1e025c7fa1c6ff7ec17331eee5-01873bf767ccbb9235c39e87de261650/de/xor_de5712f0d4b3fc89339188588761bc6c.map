{"version":3,"sources":["xor.js"],"names":["_curry2","require","xor","a","b","Boolean","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AA0BA,IAAIC,GAAG,GAEPF,OAAO,CAAC,SAASE,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACzB,SAAOC,OAAO,CAAC,CAACF,CAAD,GAAK,CAACC,CAAP,CAAd;AACD,CAFM,CAFP;;AAMAE,MAAM,CAACC,OAAP,GAAiBL,GAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nmodule.exports = xor;"]}