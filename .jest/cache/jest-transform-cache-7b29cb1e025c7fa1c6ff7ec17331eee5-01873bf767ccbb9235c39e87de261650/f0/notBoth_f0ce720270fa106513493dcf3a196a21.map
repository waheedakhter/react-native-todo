{"version":3,"sources":["notBoth.js"],"names":["exports","__esModule","_ramda","require","notBoth","curry","compose","complement","both","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAqCA,IAAIC,OAAO,GAAG,CAAC,GAAGF,MAAM,CAACG,KAAX,EAAkB,CAAC,GAAGH,MAAM,CAACI,OAAX,EAAoBJ,MAAM,CAACK,UAA3B,EAAuCL,MAAM,CAACM,IAA9C,CAAlB,CAAd;AACA,IAAIC,QAAQ,GAAGL,OAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/* eslint-disable max-len */\n\n/**\n * A function which calls the two provided functions and returns the complement of `&&`ing the\n * results.\n * It returns true if the first function is false-y and the complement of the second function\n * otherwise. Note that this is short-circuited, meaning that the second function will not be\n * invoked if the first returns a false-y value. In short it will return true unless both predicates\n * return true.\n *\n * In addition to functions, `RA.notBoth` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func notBoth\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.3.0|v2.3.0}\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} Returns a function that applies its arguments to `f` and `g` and returns the complement of `&&`ing their outputs together.\n * @see {@link http://ramdajs.com/docs/#both|R.both}\n * @example\n *\n * const gt10 = R.gt(R.__, 10)\n * const even = (x) => x % 2 === 0;\n * const f = RA.notBoth(gt10, even);\n *\n * f(12); //=> false\n * f(8); //=> true\n * f(11); //=> true\n * f(9); //=> true\n */\n\n/* eslint-enable max-len */\nvar notBoth = (0, _ramda.curry)((0, _ramda.compose)(_ramda.complement, _ramda.both));\nvar _default = notBoth;\nexports[\"default\"] = _default;"]}