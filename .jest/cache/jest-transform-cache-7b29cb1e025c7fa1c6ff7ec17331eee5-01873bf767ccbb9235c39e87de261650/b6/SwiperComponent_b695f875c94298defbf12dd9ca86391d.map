{"version":3,"sources":["SwiperComponent.tsx"],"names":["WIDTH","Metrics","screenWidth","BUTTON_SIZE","SwiperComponent","props","position","Value","lastPos","gestureX","stateG","velocityX","clock","Clock","swiped","swipeFromRef","fullSwipeSubject","Subject","interaction","gestureTranslation","gestureState","swipe","onFullSwipe","dragging","start","Animated","lessOrEq","State","ACTIVE","END","or","greaterOrEq","eq","setValue","state","width","pipe","subscribe","RA","noop","transX","next","onGestureEvent","nativeEvent","translationX","show","setTimeout","backView","children","event1","setState","layout","transform","translateX","styles","animatedViewStyle","swipeRightToPopOneScreenEnabler","React","Component"],"mappings":"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","sourcesContent":["import RA from \"ramda-adjunct\";\nimport * as React from \"react\";\nimport { View } from \"react-native\";\nimport { PanGestureHandler, PanGestureHandlerProperties, State } from \"react-native-gesture-handler\";\nimport Animated, { add, Clock, cond, eq, event, set, Value } from \"react-native-reanimated\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime } from \"rxjs/operators\";\nimport { runTiming } from \"../../Lib/AnimationHelper\";\nimport { Metrics } from \"../../Themes\";\nimport styles from \"./SwiperComponentStyle\";\ninterface Props extends PanGestureHandlerProperties {\n  onFullSwipe: () => void;\n  backView: React.ReactElement;\n  ref: any;\n}\n\ninterface IState {\n  width: number;\n}\n\nconst WIDTH = Metrics.screenWidth;\nconst BUTTON_SIZE = 100;\n\nclass SwiperComponent extends React.Component<Props, IState> {\n  private readonly position = new Value(0);\n  private readonly lastPos = new Value(0);\n  private readonly gestureX = new Value(0);\n  private readonly stateG = new Value(-1);\n  private readonly velocityX = new Value(0);\n  private readonly clock = new Clock();\n  private readonly swiped = new Value(-1);\n  private readonly transX: any;\n  private readonly onGestureEvent: any;\n  private readonly swipeFromRef = new Value(0);\n  private fullSwipeSubject = new Subject();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      width: 0,\n    };\n\n    this.fullSwipeSubject.pipe(debounceTime(100)).subscribe(this.props.onFullSwipe || RA.noop);\n\n    this.transX = this.interaction(this.gestureX, this.stateG, this.velocityX, this.swipeFromRef, () => {\n      this.fullSwipeSubject.next(\"\");\n    });\n    this.onGestureEvent = event([\n      {\n        nativeEvent: {\n          translationX: this.gestureX,\n          state: this.stateG,\n          velocityX: this.velocityX,\n        },\n      },\n    ]);\n  }\n\n  public swipe(show) {\n    setTimeout(() => {\n      this.swiped.setValue(show ? 1 : 2);\n      this.stateG.setValue(State.END);\n    }, 10);\n  }\n\n  public render() {\n    const { backView, children } = this.props;\n    return (\n      <View>\n        <PanGestureHandler {...this.props} minDeltaX={4} onGestureEvent={this.onGestureEvent} onHandlerStateChange={this.onGestureEvent}>\n          <Animated.View onLayout={event1 => this.setState({ width: event1.nativeEvent.layout.width })} style={[{ transform: [{ translateX: this.transX }] }]}>\n            {children}\n          </Animated.View>\n        </PanGestureHandler>\n        <Animated.View\n          style={[\n            {\n              width: this.state.width,\n              transform: [{ translateX: add(this.transX, this.state.width) }],\n            },\n            styles.animatedViewStyle,\n          ]}\n        >\n          {backView}\n        </Animated.View>\n        <View style={styles.swipeRightToPopOneScreenEnabler} />\n      </View>\n    );\n  }\n\n  private interaction = (gestureTranslation, gestureState, velocityX, swipe, onFullSwipe) => {\n    const dragging = new Value(0);\n    const start = new Value(0);\n\n    return cond(Animated.lessOrEq(velocityX, 0), [\n      cond(\n        eq(gestureState, State.ACTIVE),\n        [cond(dragging, 0, [set(dragging, 1), set(start, this.position)]), set(this.position, add(start, gestureTranslation))],\n        cond(\n          eq(gestureState, State.END),\n          [\n            set(dragging, 0),\n            // Check if the item is dragged to the first position\n            cond(\n              Animated.or(Animated.greaterOrEq(this.position, -WIDTH / 6), Animated.eq(this.swiped, 1)),\n              [\n                set(this.lastPos, 0),\n                set(\n                  this.position,\n                  runTiming(this.clock, this.position, 0, () => {\n                    this.swiped.setValue(-1);\n                  }),\n                ),\n              ],\n              // if its more than the first position set accordingly\n              cond(\n                Animated.greaterOrEq(this.position, -WIDTH / 2.5),\n                [set(this.lastPos, -BUTTON_SIZE), set(this.position, runTiming(this.clock, this.position, -BUTTON_SIZE))],\n                // Last condition for full removal of view\n                [set(this.lastPos, -WIDTH), set(this.position, runTiming(this.clock, this.position, -WIDTH, onFullSwipe))],\n              ),\n            ),\n            this.position,\n          ],\n          [set(dragging, 0), this.lastPos],\n        ),\n      ),\n    ]);\n  };\n}\n\nexport default SwiperComponent;\n"]}