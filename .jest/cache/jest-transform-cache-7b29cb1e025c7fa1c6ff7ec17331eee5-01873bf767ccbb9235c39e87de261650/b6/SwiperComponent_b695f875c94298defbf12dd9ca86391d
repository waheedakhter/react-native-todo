63aa7e2cefda0b49435bebd915b33e18
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _ramdaAdjunct = _interopRequireDefault(require("ramda-adjunct"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeGestureHandler = require("react-native-gesture-handler");

var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _AnimationHelper = require("../../Lib/AnimationHelper");

var _Themes = require("../../Themes");

var _SwiperComponentStyle = _interopRequireDefault(require("./SwiperComponentStyle"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var WIDTH = _Themes.Metrics.screenWidth;
var BUTTON_SIZE = 100;

var SwiperComponent = function (_React$Component) {
  (0, _inherits2.default)(SwiperComponent, _React$Component);

  var _super = _createSuper(SwiperComponent);

  function SwiperComponent(props) {
    var _this;

    (0, _classCallCheck2.default)(this, SwiperComponent);
    _this = _super.call(this, props);
    _this.position = new _reactNativeReanimated.Value(0);
    _this.lastPos = new _reactNativeReanimated.Value(0);
    _this.gestureX = new _reactNativeReanimated.Value(0);
    _this.stateG = new _reactNativeReanimated.Value(-1);
    _this.velocityX = new _reactNativeReanimated.Value(0);
    _this.clock = new _reactNativeReanimated.Clock();
    _this.swiped = new _reactNativeReanimated.Value(-1);
    _this.swipeFromRef = new _reactNativeReanimated.Value(0);
    _this.fullSwipeSubject = new _rxjs.Subject();

    _this.interaction = function (gestureTranslation, gestureState, velocityX, swipe, onFullSwipe) {
      var dragging = new _reactNativeReanimated.Value(0);
      var start = new _reactNativeReanimated.Value(0);
      return (0, _reactNativeReanimated.cond)(_reactNativeReanimated.default.lessOrEq(velocityX, 0), [(0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.eq)(gestureState, _reactNativeGestureHandler.State.ACTIVE), [(0, _reactNativeReanimated.cond)(dragging, 0, [(0, _reactNativeReanimated.set)(dragging, 1), (0, _reactNativeReanimated.set)(start, _this.position)]), (0, _reactNativeReanimated.set)(_this.position, (0, _reactNativeReanimated.add)(start, gestureTranslation))], (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.eq)(gestureState, _reactNativeGestureHandler.State.END), [(0, _reactNativeReanimated.set)(dragging, 0), (0, _reactNativeReanimated.cond)(_reactNativeReanimated.default.or(_reactNativeReanimated.default.greaterOrEq(_this.position, -WIDTH / 6), _reactNativeReanimated.default.eq(_this.swiped, 1)), [(0, _reactNativeReanimated.set)(_this.lastPos, 0), (0, _reactNativeReanimated.set)(_this.position, (0, _AnimationHelper.runTiming)(_this.clock, _this.position, 0, function () {
        _this.swiped.setValue(-1);
      }))], (0, _reactNativeReanimated.cond)(_reactNativeReanimated.default.greaterOrEq(_this.position, -WIDTH / 2.5), [(0, _reactNativeReanimated.set)(_this.lastPos, -BUTTON_SIZE), (0, _reactNativeReanimated.set)(_this.position, (0, _AnimationHelper.runTiming)(_this.clock, _this.position, -BUTTON_SIZE))], [(0, _reactNativeReanimated.set)(_this.lastPos, -WIDTH), (0, _reactNativeReanimated.set)(_this.position, (0, _AnimationHelper.runTiming)(_this.clock, _this.position, -WIDTH, onFullSwipe))])), _this.position], [(0, _reactNativeReanimated.set)(dragging, 0), _this.lastPos]))]);
    };

    _this.state = {
      width: 0
    };

    _this.fullSwipeSubject.pipe((0, _operators.debounceTime)(100)).subscribe(_this.props.onFullSwipe || _ramdaAdjunct.default.noop);

    _this.transX = _this.interaction(_this.gestureX, _this.stateG, _this.velocityX, _this.swipeFromRef, function () {
      _this.fullSwipeSubject.next("");
    });
    _this.onGestureEvent = (0, _reactNativeReanimated.event)([{
      nativeEvent: {
        translationX: _this.gestureX,
        state: _this.stateG,
        velocityX: _this.velocityX
      }
    }]);
    return _this;
  }

  (0, _createClass2.default)(SwiperComponent, [{
    key: "swipe",
    value: function swipe(show) {
      var _this2 = this;

      setTimeout(function () {
        _this2.swiped.setValue(show ? 1 : 2);

        _this2.stateG.setValue(_reactNativeGestureHandler.State.END);
      }, 10);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          backView = _this$props.backView,
          children = _this$props.children;
      return React.createElement(_reactNative.View, null, React.createElement(_reactNativeGestureHandler.PanGestureHandler, (0, _extends2.default)({}, this.props, {
        minDeltaX: 4,
        onGestureEvent: this.onGestureEvent,
        onHandlerStateChange: this.onGestureEvent
      }), React.createElement(_reactNativeReanimated.default.View, {
        onLayout: function onLayout(event1) {
          return _this3.setState({
            width: event1.nativeEvent.layout.width
          });
        },
        style: [{
          transform: [{
            translateX: this.transX
          }]
        }]
      }, children)), React.createElement(_reactNativeReanimated.default.View, {
        style: [{
          width: this.state.width,
          transform: [{
            translateX: (0, _reactNativeReanimated.add)(this.transX, this.state.width)
          }]
        }, _SwiperComponentStyle.default.animatedViewStyle]
      }, backView), React.createElement(_reactNative.View, {
        style: _SwiperComponentStyle.default.swipeRightToPopOneScreenEnabler
      }));
    }
  }]);
  return SwiperComponent;
}(React.Component);

var _default = SwiperComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,