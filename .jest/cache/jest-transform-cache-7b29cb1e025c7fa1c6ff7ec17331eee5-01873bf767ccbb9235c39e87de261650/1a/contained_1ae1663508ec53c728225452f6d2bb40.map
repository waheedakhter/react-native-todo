{"version":3,"sources":["contained.js"],"names":["exports","__esModule","_ramda","require","contained","flip","contains","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AA2BA,IAAIC,SAAS,GAAG,CAAC,GAAGF,MAAM,CAACG,IAAX,EAAiBH,MAAM,CAACI,QAAxB,CAAhB;AACA,IAAIC,QAAQ,GAAGH,SAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBO,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Returns true if the specified value is equal, in R.equals terms,\n * to at least one element of the given list or false otherwise.\n * Given list can be a string.\n *\n * Like {@link http://ramdajs.com/docs/#contains|R.contains} but with argument order reversed.\n *\n * @func contained\n * @aliases included\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.8.0|v2.8.0}\n * @deprecated since v2.12.0; please use RA.included alias\n * @category List\n * @sig [a] -> a -> Boolean\n * @param {Array|String} list The list to consider\n * @param {*} a The item to compare against\n * @return {boolean} Returns Boolean `true` if an equivalent item is in the list or `false` otherwise\n * @see {@link http://ramdajs.com/docs/#contains|R.contains}\n * @example\n *\n * RA.contained([1, 2, 3], 3); //=> true\n * RA.contained([1, 2, 3], 4); //=> false\n * RA.contained([{ name: 'Fred' }], { name: 'Fred' }); //=> true\n * RA.contained([[42]], [42]); //=> true\n */\nvar contained = (0, _ramda.flip)(_ramda.contains);\nvar _default = contained;\nexports[\"default\"] = _default;"]}