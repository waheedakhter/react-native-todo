5ef6e5c711320f5499323132f0b2f0e1
var _curryN = require("./_curryN");

var _has = require("./_has");

var _xfBase = require("./_xfBase");

var XReduceBy = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }

  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;

  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;

    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);

        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }

    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };

  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return XReduceBy;
}();

var _xreduceBy = _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
  return new XReduceBy(valueFn, valueAcc, keyFn, xf);
});

module.exports = _xreduceBy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl94cmVkdWNlQnkuanMiXSwibmFtZXMiOlsiX2N1cnJ5TiIsInJlcXVpcmUiLCJfaGFzIiwiX3hmQmFzZSIsIlhSZWR1Y2VCeSIsInZhbHVlRm4iLCJ2YWx1ZUFjYyIsImtleUZuIiwieGYiLCJpbnB1dHMiLCJwcm90b3R5cGUiLCJpbml0IiwicmVzdWx0Iiwia2V5IiwiaW5wdXQiLCJfeHJlZHVjZUJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUVYQyxPQUFPLENBQUMsV0FBRCxDQUZQOztBQUlBLElBQUlDLElBQUksR0FFUkQsT0FBTyxDQUFDLFFBQUQsQ0FGUDs7QUFJQSxJQUFJRSxPQUFPLEdBRVhGLE9BQU8sQ0FBQyxXQUFELENBRlA7O0FBSUEsSUFBSUcsU0FBUyxHQUViLFlBQVk7QUFDVixXQUFTQSxTQUFULENBQW1CQyxPQUFuQixFQUE0QkMsUUFBNUIsRUFBc0NDLEtBQXRDLEVBQTZDQyxFQUE3QyxFQUFpRDtBQUMvQyxTQUFLSCxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0Q7O0FBRURMLEVBQUFBLFNBQVMsQ0FBQ00sU0FBVixDQUFvQixtQkFBcEIsSUFBMkNQLE9BQU8sQ0FBQ1EsSUFBbkQ7O0FBRUFQLEVBQUFBLFNBQVMsQ0FBQ00sU0FBVixDQUFvQixxQkFBcEIsSUFBNkMsVUFBVUUsTUFBVixFQUFrQjtBQUM3RCxRQUFJQyxHQUFKOztBQUVBLFNBQUtBLEdBQUwsSUFBWSxLQUFLSixNQUFqQixFQUF5QjtBQUN2QixVQUFJUCxJQUFJLENBQUNXLEdBQUQsRUFBTSxLQUFLSixNQUFYLENBQVIsRUFBNEI7QUFDMUJHLFFBQUFBLE1BQU0sR0FBRyxLQUFLSixFQUFMLENBQVEsbUJBQVIsRUFBNkJJLE1BQTdCLEVBQXFDLEtBQUtILE1BQUwsQ0FBWUksR0FBWixDQUFyQyxDQUFUOztBQUVBLFlBQUlELE1BQU0sQ0FBQyxzQkFBRCxDQUFWLEVBQW9DO0FBQ2xDQSxVQUFBQSxNQUFNLEdBQUdBLE1BQU0sQ0FBQyxvQkFBRCxDQUFmO0FBQ0E7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQsU0FBS0gsTUFBTCxHQUFjLElBQWQ7QUFDQSxXQUFPLEtBQUtELEVBQUwsQ0FBUSxxQkFBUixFQUErQkksTUFBL0IsQ0FBUDtBQUNELEdBaEJEOztBQWtCQVIsRUFBQUEsU0FBUyxDQUFDTSxTQUFWLENBQW9CLG1CQUFwQixJQUEyQyxVQUFVRSxNQUFWLEVBQWtCRSxLQUFsQixFQUF5QjtBQUNsRSxRQUFJRCxHQUFHLEdBQUcsS0FBS04sS0FBTCxDQUFXTyxLQUFYLENBQVY7QUFDQSxTQUFLTCxNQUFMLENBQVlJLEdBQVosSUFBbUIsS0FBS0osTUFBTCxDQUFZSSxHQUFaLEtBQW9CLENBQUNBLEdBQUQsRUFBTSxLQUFLUCxRQUFYLENBQXZDO0FBQ0EsU0FBS0csTUFBTCxDQUFZSSxHQUFaLEVBQWlCLENBQWpCLElBQXNCLEtBQUtSLE9BQUwsQ0FBYSxLQUFLSSxNQUFMLENBQVlJLEdBQVosRUFBaUIsQ0FBakIsQ0FBYixFQUFrQ0MsS0FBbEMsQ0FBdEI7QUFDQSxXQUFPRixNQUFQO0FBQ0QsR0FMRDs7QUFPQSxTQUFPUixTQUFQO0FBQ0QsQ0FyQ0QsRUFGQTs7QUF5Q0EsSUFBSVcsVUFBVSxHQUVkZixPQUFPLENBQUMsQ0FBRCxFQUFJLEVBQUosRUFBUSxTQUFTZSxVQUFULENBQW9CVixPQUFwQixFQUE2QkMsUUFBN0IsRUFBdUNDLEtBQXZDLEVBQThDQyxFQUE5QyxFQUFrRDtBQUMvRCxTQUFPLElBQUlKLFNBQUosQ0FBY0MsT0FBZCxFQUF1QkMsUUFBdkIsRUFBaUNDLEtBQWpDLEVBQXdDQyxFQUF4QyxDQUFQO0FBQ0QsQ0FGTSxDQUZQOztBQU1BUSxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9jdXJyeU4gPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vX2N1cnJ5TlwiKTtcblxudmFyIF9oYXMgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vX2hhc1wiKTtcblxudmFyIF94ZkJhc2UgPVxuLyojX19QVVJFX18qL1xucmVxdWlyZShcIi4vX3hmQmFzZVwiKTtcblxudmFyIFhSZWR1Y2VCeSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFhSZWR1Y2VCeSh2YWx1ZUZuLCB2YWx1ZUFjYywga2V5Rm4sIHhmKSB7XG4gICAgdGhpcy52YWx1ZUZuID0gdmFsdWVGbjtcbiAgICB0aGlzLnZhbHVlQWNjID0gdmFsdWVBY2M7XG4gICAgdGhpcy5rZXlGbiA9IGtleUZuO1xuICAgIHRoaXMueGYgPSB4ZjtcbiAgICB0aGlzLmlucHV0cyA9IHt9O1xuICB9XG5cbiAgWFJlZHVjZUJ5LnByb3RvdHlwZVsnQEB0cmFuc2R1Y2VyL2luaXQnXSA9IF94ZkJhc2UuaW5pdDtcblxuICBYUmVkdWNlQnkucHJvdG90eXBlWydAQHRyYW5zZHVjZXIvcmVzdWx0J10gPSBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgdmFyIGtleTtcblxuICAgIGZvciAoa2V5IGluIHRoaXMuaW5wdXRzKSB7XG4gICAgICBpZiAoX2hhcyhrZXksIHRoaXMuaW5wdXRzKSkge1xuICAgICAgICByZXN1bHQgPSB0aGlzLnhmWydAQHRyYW5zZHVjZXIvc3RlcCddKHJlc3VsdCwgdGhpcy5pbnB1dHNba2V5XSk7XG5cbiAgICAgICAgaWYgKHJlc3VsdFsnQEB0cmFuc2R1Y2VyL3JlZHVjZWQnXSkge1xuICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdFsnQEB0cmFuc2R1Y2VyL3ZhbHVlJ107XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmlucHV0cyA9IG51bGw7XG4gICAgcmV0dXJuIHRoaXMueGZbJ0BAdHJhbnNkdWNlci9yZXN1bHQnXShyZXN1bHQpO1xuICB9O1xuXG4gIFhSZWR1Y2VCeS5wcm90b3R5cGVbJ0BAdHJhbnNkdWNlci9zdGVwJ10gPSBmdW5jdGlvbiAocmVzdWx0LCBpbnB1dCkge1xuICAgIHZhciBrZXkgPSB0aGlzLmtleUZuKGlucHV0KTtcbiAgICB0aGlzLmlucHV0c1trZXldID0gdGhpcy5pbnB1dHNba2V5XSB8fCBba2V5LCB0aGlzLnZhbHVlQWNjXTtcbiAgICB0aGlzLmlucHV0c1trZXldWzFdID0gdGhpcy52YWx1ZUZuKHRoaXMuaW5wdXRzW2tleV1bMV0sIGlucHV0KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIHJldHVybiBYUmVkdWNlQnk7XG59KCk7XG5cbnZhciBfeHJlZHVjZUJ5ID1cbi8qI19fUFVSRV9fKi9cbl9jdXJyeU4oNCwgW10sIGZ1bmN0aW9uIF94cmVkdWNlQnkodmFsdWVGbiwgdmFsdWVBY2MsIGtleUZuLCB4Zikge1xuICByZXR1cm4gbmV3IFhSZWR1Y2VCeSh2YWx1ZUZuLCB2YWx1ZUFjYywga2V5Rm4sIHhmKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IF94cmVkdWNlQnk7Il19