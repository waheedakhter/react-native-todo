{"version":3,"sources":["rejectP.js"],"names":["exports","__esModule","_ramda","require","rejectP","bind","Promise","reject","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAqBA,IAAIC,OAAO,GAAG,CAAC,GAAGF,MAAM,CAACG,IAAX,EAAiBC,OAAO,CAACC,MAAzB,EAAiCD,OAAjC,CAAd;AACA,IAAIE,QAAQ,GAAGJ,OAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBQ,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Composable shortcut for `Promise.reject`.\n *\n * Returns a Promise object that is rejected with the given reason.\n *\n * @func rejectP\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.16.0|v1.16.0}\n * @category Function\n * @sig a -> Promise a\n * @param {*} [reason=undefined] Reason why this Promise rejected\n * @return {Promise} A Promise that is rejected with the given reason\n * @see {@link RA.resolveP|resolveP}\n * @example\n *\n * RA.rejectP(); //=> Promise(undefined)\n * RA.rejectP('a'); //=> Promise('a')\n * RA.rejectP([1, 2, 3]); //=> Promise([1, 2, 3])\n */\nvar rejectP = (0, _ramda.bind)(Promise.reject, Promise);\nvar _default = rejectP;\nexports[\"default\"] = _default;"]}