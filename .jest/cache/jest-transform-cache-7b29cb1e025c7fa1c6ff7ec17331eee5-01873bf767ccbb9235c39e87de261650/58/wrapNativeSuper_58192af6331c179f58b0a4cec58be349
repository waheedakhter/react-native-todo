50cf5a4cab7b382ad46e3a36c1687659
var getPrototypeOf = require("./getPrototypeOf.js");

var setPrototypeOf = require("./setPrototypeOf.js");

var isNativeFunction = require("./isNativeFunction.js");

var construct = require("./construct.js");

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}

module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyYXBOYXRpdmVTdXBlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm90b3R5cGVPZiIsInJlcXVpcmUiLCJzZXRQcm90b3R5cGVPZiIsImlzTmF0aXZlRnVuY3Rpb24iLCJjb25zdHJ1Y3QiLCJfd3JhcE5hdGl2ZVN1cGVyIiwiQ2xhc3MiLCJfY2FjaGUiLCJNYXAiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJleHBvcnRzIiwiVHlwZUVycm9yIiwiaGFzIiwiZ2V0Iiwic2V0IiwiV3JhcHBlciIsImFyZ3VtZW50cyIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJfX2VzTW9kdWxlIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxxQkFBRCxDQUE1Qjs7QUFFQSxJQUFJQyxjQUFjLEdBQUdELE9BQU8sQ0FBQyxxQkFBRCxDQUE1Qjs7QUFFQSxJQUFJRSxnQkFBZ0IsR0FBR0YsT0FBTyxDQUFDLHVCQUFELENBQTlCOztBQUVBLElBQUlHLFNBQVMsR0FBR0gsT0FBTyxDQUFDLGdCQUFELENBQXZCOztBQUVBLFNBQVNJLGdCQUFULENBQTBCQyxLQUExQixFQUFpQztBQUMvQixNQUFJQyxNQUFNLEdBQUcsT0FBT0MsR0FBUCxLQUFlLFVBQWYsR0FBNEIsSUFBSUEsR0FBSixFQUE1QixHQUF3Q0MsU0FBckQ7O0FBRUFDLEVBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sZ0JBQWdCLEdBQUcsU0FBU0EsZ0JBQVQsQ0FBMEJDLEtBQTFCLEVBQWlDO0FBQ25FLFFBQUlBLEtBQUssS0FBSyxJQUFWLElBQWtCLENBQUNILGdCQUFnQixDQUFDRyxLQUFELENBQXZDLEVBQWdELE9BQU9BLEtBQVA7O0FBRWhELFFBQUksT0FBT0EsS0FBUCxLQUFpQixVQUFyQixFQUFpQztBQUMvQixZQUFNLElBQUlNLFNBQUosQ0FBYyxvREFBZCxDQUFOO0FBQ0Q7O0FBRUQsUUFBSSxPQUFPTCxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0FBQ2pDLFVBQUlBLE1BQU0sQ0FBQ00sR0FBUCxDQUFXUCxLQUFYLENBQUosRUFBdUIsT0FBT0MsTUFBTSxDQUFDTyxHQUFQLENBQVdSLEtBQVgsQ0FBUDs7QUFFdkJDLE1BQUFBLE1BQU0sQ0FBQ1EsR0FBUCxDQUFXVCxLQUFYLEVBQWtCVSxPQUFsQjtBQUNEOztBQUVELGFBQVNBLE9BQVQsR0FBbUI7QUFDakIsYUFBT1osU0FBUyxDQUFDRSxLQUFELEVBQVFXLFNBQVIsRUFBbUJqQixjQUFjLENBQUMsSUFBRCxDQUFkLENBQXFCa0IsV0FBeEMsQ0FBaEI7QUFDRDs7QUFFREYsSUFBQUEsT0FBTyxDQUFDRyxTQUFSLEdBQW9CQyxNQUFNLENBQUNDLE1BQVAsQ0FBY2YsS0FBSyxDQUFDYSxTQUFwQixFQUErQjtBQUNqREQsTUFBQUEsV0FBVyxFQUFFO0FBQ1hJLFFBQUFBLEtBQUssRUFBRU4sT0FESTtBQUVYTyxRQUFBQSxVQUFVLEVBQUUsS0FGRDtBQUdYQyxRQUFBQSxRQUFRLEVBQUUsSUFIQztBQUlYQyxRQUFBQSxZQUFZLEVBQUU7QUFKSDtBQURvQyxLQUEvQixDQUFwQjtBQVFBLFdBQU92QixjQUFjLENBQUNjLE9BQUQsRUFBVVYsS0FBVixDQUFyQjtBQUNELEdBMUJELEVBMEJHSSxNQUFNLENBQUNDLE9BQVAsQ0FBZWUsVUFBZixHQUE0QixJQTFCL0IsRUEwQnFDaEIsTUFBTSxDQUFDQyxPQUFQLENBQWUsU0FBZixJQUE0QkQsTUFBTSxDQUFDQyxPQTFCeEU7QUEyQkEsU0FBT04sZ0JBQWdCLENBQUNDLEtBQUQsQ0FBdkI7QUFDRDs7QUFFREksTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixnQkFBakIsRUFBbUNLLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlZSxVQUFmLEdBQTRCLElBQS9ELEVBQXFFaEIsTUFBTSxDQUFDQyxPQUFQLENBQWUsU0FBZixJQUE0QkQsTUFBTSxDQUFDQyxPQUF4RyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL2dldFByb3RvdHlwZU9mLmpzXCIpO1xuXG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiKTtcblxudmFyIGlzTmF0aXZlRnVuY3Rpb24gPSByZXF1aXJlKFwiLi9pc05hdGl2ZUZ1bmN0aW9uLmpzXCIpO1xuXG52YXIgY29uc3RydWN0ID0gcmVxdWlyZShcIi4vY29uc3RydWN0LmpzXCIpO1xuXG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gIHZhciBfY2FjaGUgPSB0eXBlb2YgTWFwID09PSBcImZ1bmN0aW9uXCIgPyBuZXcgTWFwKCkgOiB1bmRlZmluZWQ7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykge1xuICAgIGlmIChDbGFzcyA9PT0gbnVsbCB8fCAhaXNOYXRpdmVGdW5jdGlvbihDbGFzcykpIHJldHVybiBDbGFzcztcblxuICAgIGlmICh0eXBlb2YgQ2xhc3MgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgX2NhY2hlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTtcblxuICAgICAgX2NhY2hlLnNldChDbGFzcywgV3JhcHBlcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gV3JhcHBlcigpIHtcbiAgICAgIHJldHVybiBjb25zdHJ1Y3QoQ2xhc3MsIGFyZ3VtZW50cywgZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3IpO1xuICAgIH1cblxuICAgIFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBXcmFwcGVyLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzZXRQcm90b3R5cGVPZihXcmFwcGVyLCBDbGFzcyk7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbiAgcmV0dXJuIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF93cmFwTmF0aXZlU3VwZXIsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXX0=