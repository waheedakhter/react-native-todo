{"version":3,"sources":["dropLastWhile.js"],"names":["_curry2","require","_dispatchable","_dropLastWhile","_xdropLastWhile","dropLastWhile","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,aAAa,GAEjBD,OAAO,CAAC,0BAAD,CAFP;;AAIA,IAAIE,cAAc,GAElBF,OAAO,CAAC,2BAAD,CAFP;;AAIA,IAAIG,eAAe,GAEnBH,OAAO,CAAC,4BAAD,CAFP;;AAgCA,IAAII,aAAa,GAEjBL,OAAO,CAEPE,aAAa,CAAC,EAAD,EAAKE,eAAL,EAAsBD,cAAtB,CAFN,CAFP;;AAMAG,MAAM,CAACC,OAAP,GAAiBF,aAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLastWhile =\n/*#__PURE__*/\nrequire(\"./internal/_dropLastWhile\");\n\nvar _xdropLastWhile =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLastWhile\");\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nmodule.exports = dropLastWhile;"]}