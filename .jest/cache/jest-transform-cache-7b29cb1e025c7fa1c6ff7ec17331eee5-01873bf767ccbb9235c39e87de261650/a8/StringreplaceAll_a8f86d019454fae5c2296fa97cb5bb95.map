{"version":3,"sources":["String.replaceAll.js"],"names":["exports","__esModule","_ramda","require","_isRegExp","_interopRequireDefault","_escapeRegExp","obj","checkArguments","searchValue","replaceValue","str","TypeError","checkValue","value","valueName","String","concat","checkSearchValue","RegExp","replaceAll","regexp","replace","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACF,OAAO,CAAC,gBAAD,CAAR,CAAtC;;AAEA,IAAIG,aAAa,GAAGD,sBAAsB,CAACF,OAAO,CAAC,oBAAD,CAAR,CAA1C;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,WAAxB,EAAqCC,YAArC,EAAmDC,GAAnD,EAAwD;AAC3E,MAAIA,GAAG,IAAI,IAAP,IAAeF,WAAW,IAAI,IAA9B,IAAsCC,YAAY,IAAI,IAA1D,EAAgE;AAC9D,UAAME,SAAS,CAAC,gDAAD,CAAf;AACD;AACF,CAJD;;AAMA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,SAA3B,EAAsC;AACrD,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAI,EAAEA,KAAK,YAAYE,MAAnB,CAAJ,EAAgC;AAC9B,YAAMJ,SAAS,CAAC,IAAIK,MAAJ,CAAWF,SAAX,EAAsB,oBAAtB,CAAD,CAAf;AACD;AACF;AACF,CAND;;AAQA,IAAIG,gBAAgB,GAAG,SAASA,gBAAT,CAA0BT,WAA1B,EAAuC;AAC5D,MAAI,OAAOA,WAAP,KAAuB,QAAvB,IAAmC,EAAEA,WAAW,YAAYO,MAAzB,CAAnC,IAAuE,EAAEP,WAAW,YAAYU,MAAzB,CAA3E,EAA6G;AAC3G,UAAMP,SAAS,CAAC,6CAAD,CAAf;AACD;AACF,CAJD;;AAMA,IAAIQ,UAAU,GAAG,SAASA,UAAT,CAAoBX,WAApB,EAAiCC,YAAjC,EAA+CC,GAA/C,EAAoD;AACnEH,EAAAA,cAAc,CAACC,WAAD,EAAcC,YAAd,EAA4BC,GAA5B,CAAd;AACAE,EAAAA,UAAU,CAACF,GAAD,EAAM,KAAN,CAAV;AACAE,EAAAA,UAAU,CAACH,YAAD,EAAe,cAAf,CAAV;AACAQ,EAAAA,gBAAgB,CAACT,WAAD,CAAhB;AACA,MAAIY,MAAM,GAAG,IAAIF,MAAJ,CAAW,CAAC,GAAGf,SAAS,CAAC,SAAD,CAAb,EAA0BK,WAA1B,IAAyCA,WAAzC,GAAuD,CAAC,GAAGH,aAAa,CAAC,SAAD,CAAjB,EAA8BG,WAA9B,CAAlE,EAA8G,GAA9G,CAAb;AACA,SAAO,CAAC,GAAGP,MAAM,CAACoB,OAAX,EAAoBD,MAApB,EAA4BX,YAA5B,EAA0CC,GAA1C,CAAP;AACD,CAPD;;AASA,IAAIY,QAAQ,GAAGH,UAAf;AACApB,OAAO,CAAC,SAAD,CAAP,GAAqBuB,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isRegExp = _interopRequireDefault(require(\"../../isRegExp\"));\n\nvar _escapeRegExp = _interopRequireDefault(require(\"../../escapeRegExp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar checkArguments = function checkArguments(searchValue, replaceValue, str) {\n  if (str == null || searchValue == null || replaceValue == null) {\n    throw TypeError('Input values must not be `null` or `undefined`');\n  }\n};\n\nvar checkValue = function checkValue(value, valueName) {\n  if (typeof value !== 'string') {\n    if (!(value instanceof String)) {\n      throw TypeError(\"`\".concat(valueName, \"` must be a string\"));\n    }\n  }\n};\n\nvar checkSearchValue = function checkSearchValue(searchValue) {\n  if (typeof searchValue !== 'string' && !(searchValue instanceof String) && !(searchValue instanceof RegExp)) {\n    throw TypeError('`searchValue` must be a string or an regexp');\n  }\n};\n\nvar replaceAll = function replaceAll(searchValue, replaceValue, str) {\n  checkArguments(searchValue, replaceValue, str);\n  checkValue(str, 'str');\n  checkValue(replaceValue, 'replaceValue');\n  checkSearchValue(searchValue);\n  var regexp = new RegExp((0, _isRegExp[\"default\"])(searchValue) ? searchValue : (0, _escapeRegExp[\"default\"])(searchValue), 'g');\n  return (0, _ramda.replace)(regexp, replaceValue, str);\n};\n\nvar _default = replaceAll;\nexports[\"default\"] = _default;"]}