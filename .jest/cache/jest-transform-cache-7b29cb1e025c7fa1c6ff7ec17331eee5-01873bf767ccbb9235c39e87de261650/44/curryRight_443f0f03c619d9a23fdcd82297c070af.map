{"version":3,"sources":["curryRight.js"],"names":["exports","__esModule","_ramda","require","_curryRightN","_interopRequireDefault","obj","curryRight","converge","length","identity","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAqBjG,IAAIC,UAAU,GAAG,CAAC,GAAGL,MAAM,CAACM,QAAX,EAAqBJ,YAAY,CAAC,SAAD,CAAjC,EAA8C,CAACF,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACQ,QAAvB,CAA9C,CAAjB;AACA,IAAIC,QAAQ,GAAGJ,UAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBW,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _curryRightN = _interopRequireDefault(require(\"./curryRightN\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Returns a curried equivalent of the provided function.\n * This function is like curry, except that the provided arguments order is reversed.\n *\n * @func curryRight\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.12.0|v1.12.0}\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry\n * @return {Function}  A new, curried function\n * @see {@link http://ramdajs.com/docs/#curry|R.curry}, {@link RA.curryRightN|curryRightN}\n * @example\n *\n * const concatStrings = (a, b, c) => a + b + c;\n * const concatStringsCurried = RA.curryRight(concatStrings);\n *\n * concatStringCurried('a')('b')('c'); // => 'cba'\n */\nvar curryRight = (0, _ramda.converge)(_curryRightN[\"default\"], [_ramda.length, _ramda.identity]);\nvar _default = curryRight;\nexports[\"default\"] = _default;"]}