{"version":3,"sources":["props.js"],"names":["_curry2","require","path","props","ps","obj","map","p","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,IAAI,GAERD,OAAO,CAAC,QAAD,CAFP;;AAyBA,IAAIE,KAAK,GAETH,OAAO,CAAC,SAASG,KAAT,CAAeC,EAAf,EAAmBC,GAAnB,EAAwB;AAC9B,SAAOD,EAAE,CAACE,GAAH,CAAO,UAAUC,CAAV,EAAa;AACzB,WAAOL,IAAI,CAAC,CAACK,CAAD,CAAD,EAAMF,GAAN,CAAX;AACD,GAFM,CAAP;AAGD,CAJM,CAFP;;AAQAG,MAAM,CAACC,OAAP,GAAiBN,KAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nmodule.exports = props;"]}