{"version":3,"sources":["replace.js"],"names":["_curry3","require","replace","regex","replacement","str","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AA6BA,IAAIC,OAAO,GAEXF,OAAO,CAAC,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,GAArC,EAA0C;AAChD,SAAOA,GAAG,CAACH,OAAJ,CAAYC,KAAZ,EAAmBC,WAAnB,CAAP;AACD,CAFM,CAFP;;AAMAE,MAAM,CAACC,OAAP,GAAiBL,OAAjB","sourcesContent":["var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nmodule.exports = replace;"]}