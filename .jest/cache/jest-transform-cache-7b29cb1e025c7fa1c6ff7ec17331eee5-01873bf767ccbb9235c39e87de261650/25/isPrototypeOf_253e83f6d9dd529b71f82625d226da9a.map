{"version":3,"sources":["isPrototypeOf.js"],"names":["exports","__esModule","_ramda","require","_invokeArgs","_interopRequireDefault","obj","isPrototypeOf","curry","type","object","Boolean","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AA6BjG,IAAIC,aAAa,GAAG,CAAC,GAAGL,MAAM,CAACM,KAAX,EAAkB,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC5D,SAAOC,OAAO,CAAC,CAAC,GAAGP,WAAW,CAAC,SAAD,CAAf,EAA4B,CAAC,WAAD,EAAc,eAAd,CAA5B,EAA4D,CAACM,MAAD,CAA5D,EAAsED,IAAtE,CAAD,CAAd;AACD,CAFmB,CAApB;AAGA,IAAIG,QAAQ,GAAGL,aAAf;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBY,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _invokeArgs = _interopRequireDefault(require(\"./invokeArgs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if an object exists in another object's prototype chain.\n *\n * @func isPrototypeOf\n * @category Object\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.31.0|v2.31.0}\n * @sig * -> Boolean\n * @param {Object} type The prototype that we're searching for\n * @param {Object} object The object whose prototype chain will be searched\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf|Object.prorotype.isPrototypeOf}\n * @example\n * function Foo() {}\n * function Bar() {}\n * function Baz() {}\n *\n * Bar.prototype = Object.create(Foo.prototype);\n * Baz.prototype = Object.create(Bar.prototype);\n *\n * const baz = new Baz();\n *\n * RA.isPrototypeOf(Baz, baz); // => true\n * RA.isPrototypeOf(Bar, baz); // => true\n * RA.isPrototypeOf(Foo, baz); // => true\n * RA.isPrototypeOf(Object, baz); // => true\n */\nvar isPrototypeOf = (0, _ramda.curry)(function (type, object) {\n  return Boolean((0, _invokeArgs[\"default\"])(['prototype', 'isPrototypeOf'], [object], type));\n});\nvar _default = isPrototypeOf;\nexports[\"default\"] = _default;"]}