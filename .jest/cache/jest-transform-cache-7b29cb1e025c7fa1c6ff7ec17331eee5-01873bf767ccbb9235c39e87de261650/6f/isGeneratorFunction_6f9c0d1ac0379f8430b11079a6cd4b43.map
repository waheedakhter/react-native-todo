{"version":3,"sources":["isGeneratorFunction.js"],"names":["exports","__esModule","_ramda","require","GeneratorFunction","legacyCheck","Function","constructor","is","e","F","isGeneratorFunction","curryN","either","pipe","type","identical","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,iBAAiB,GAAG,IAAxB;AACA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,IAAI;AACFD,EAAAA,iBAAiB,GAAG,IAAIE,QAAJ,CAAa,wBAAb,IAAyCC,WAA7D;AAEAF,EAAAA,WAAW,GAAG,CAAC,GAAGH,MAAM,CAACM,EAAX,EAAeJ,iBAAf,CAAd;AACD,CAJD,CAIE,OAAOK,CAAP,EAAU;AACVJ,EAAAA,WAAW,GAAGH,MAAM,CAACQ,CAArB;AACD;;AAqBD,IAAIC,mBAAmB,GAAG,CAAC,GAAGT,MAAM,CAACU,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGV,MAAM,CAACW,MAAX,EAAmB,CAAC,GAAGX,MAAM,CAACY,IAAX,EAAiBZ,MAAM,CAACa,IAAxB,EAA8B,CAAC,GAAGb,MAAM,CAACc,SAAX,EAAsB,mBAAtB,CAA9B,CAAnB,EAA8FX,WAA9F,CAAtB,CAA1B;AACA,IAAIY,QAAQ,GAAGN,mBAAf;AACAX,OAAO,CAAC,SAAD,CAAP,GAAqBiB,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar GeneratorFunction = null;\nvar legacyCheck = null;\n\ntry {\n  GeneratorFunction = new Function('return function* () {}')().constructor; // eslint-disable-line no-new-func\n\n  legacyCheck = (0, _ramda.is)(GeneratorFunction);\n} catch (e) {\n  legacyCheck = _ramda.F;\n}\n/**\n * Checks if input value is `Generator Function`.\n *\n * @func isGeneratorFunction\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFunction|isFunction}, {@link RA.isAsyncFunction|isAsyncFunction}, {@link RA.isNotGeneratorFunction|isNotGeneratorFunction}\n * @example\n *\n * RA.isGeneratorFunction(function* test() { }); //=> true\n * RA.isGeneratorFunction(null); //=> false\n * RA.isGeneratorFunction(function test() { }); //=> false\n * RA.isGeneratorFunction(() => {}); //=> false\n */\n\n\nvar isGeneratorFunction = (0, _ramda.curryN)(1, (0, _ramda.either)((0, _ramda.pipe)(_ramda.type, (0, _ramda.identical)('GeneratorFunction')), legacyCheck));\nvar _default = isGeneratorFunction;\nexports[\"default\"] = _default;"]}