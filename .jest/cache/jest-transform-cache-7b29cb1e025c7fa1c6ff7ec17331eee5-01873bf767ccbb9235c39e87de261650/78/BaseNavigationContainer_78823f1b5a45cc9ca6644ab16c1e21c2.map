{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["NOT_INITIALIZED_ERROR","serializableWarnings","Object","set","console","getPartialState","state","partialState","stale","routes","route","BaseNavigationContainer","children","parent","React","NavigationStateContext","initialState","isFirstMountRef","navigatorKeyRef","getKey","setKey","key","addListener","addKeyedListener","dispatch","action","listeners","navigation","canGoBack","handled","resetRoot","target","CommonActions","keyedListeners","getRootState","getCurrentRoute","emitter","getCurrentOptions","acc","getState","getParent","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","type","data","noop","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","scheduleUpdate","flushUpdates","isInitialRef","getIsInitial","context","setState","addOptionsGetter","onStateChangeRef","process","result","reason","path","pointer","params","i","location","curr","prev","JSON","message","defaultOnUnhandledAction","payload","element","onUnhandledAction","undefined"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationContext from './NavigationContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/5.x/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nconst serializableWarnings: string[] = [];\n\ntry {\n  /**\n   * Migration instructions for removal of devtools from core\n   */\n  Object.defineProperty(\n    global,\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n    {\n      set(_) {\n        console.warn(\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/5.x/devtools\"\n        );\n      },\n    }\n  );\n} catch (e) {\n  // Ignore\n}\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners.focus[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners.focus[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          throw new Error(NOT_INITIALIZED_ERROR);\n        }\n\n        listeners.focus[0]((navigation) =>\n          navigation.dispatch({\n            ...CommonActions.reset(state),\n            target,\n          })\n        );\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      getState: () => state,\n      getParent: () => undefined,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (state !== undefined) {\n          const result = checkSerializable(state);\n\n          if (!result.serializable) {\n            const { location, reason } = result;\n\n            let path = '';\n            let pointer: Record<any, any> = state;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/5.x/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/5.x/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/5.x/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider\n              value={onUnhandledAction ?? defaultOnUnhandledAction}\n            >\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"]}