{"version":3,"sources":["GestureComponents.tsx"],"names":["ScrollView","RNScrollView","disallowInterruption","shouldCancelWhenOutside","Switch","RNSwitch","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","Left","Right","FlatList","ref","scrollProps"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAaA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,IAAMA,UAAU,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAExBC,YAAAA,CAFwB,UAAA,EAEV;AACdC,EAAAA,oBAAoB,EADN,IAAA;AAEdC,EAAAA,uBAAuB,EAAE;AAFX,CAFU,CAAnB;;AAiBA,IAAMC,MAAM,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAmCC,YAAAA,CAAnC,MAAA,EAA6C;AACjEF,EAAAA,uBAAuB,EAD0C,KAAA;AAEjEG,EAAAA,qBAAqB,EAF4C,IAAA;AAGjEJ,EAAAA,oBAAoB,EAAE;AAH2C,CAA7C,CAAf;;AAQA,IAAMK,SAAS,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAsCC,YAAAA,CAAxD,SAAkB,CAAlB;;AAIA,IAAMC,mBAAmB,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAEjCC,YAAAA,CAFiC,mBAAA,EAEV;AAAER,EAAAA,oBAAoB,EAAE;AAAxB,CAFU,CAA5B;;AAKPO,mBAAmB,CAAnBA,SAAAA,GAAgC;AAAEE,EAAAA,IAAI,EAAN,MAAA;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAAhCH;AAIO,IAAMI,QAAQ,GAAG,KAAK,CAAL,UAAA,CACtB,UAAA,KAAA,EAAA,GAAA;AAAA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EAAEC;AADP,GAAA,EAAA,KAAA,EAAA;AAGE,IAAA,qBAAqB,EAAGC,+BAAAA,WAAD;AAAA,aAAiB,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,WAAA,CAAjB;AAAA;AAHzB,GAAA,CAAA,CADF;AAAA,CADsB,CAAjB","sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport {\n  ScrollView as RNScrollView,\n  ScrollViewProps as RNScrollViewProps,\n  Switch as RNSwitch,\n  SwitchProps as RNSwitchProps,\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  DrawerLayoutAndroidProps as RNDrawerLayoutAndroidProps,\n  FlatList as RNFlatList,\n  FlatListProps as RNFlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nimport { NativeViewGestureHandlerProps } from '../handlers/NativeViewGestureHandler';\n\nexport const ScrollView = createNativeWrapper<\n  PropsWithChildren<RNScrollViewProps>\n>(RNScrollView, {\n  disallowInterruption: true,\n  shouldCancelWhenOutside: false,\n});\n// backward type compatibility with https://github.com/software-mansion/react-native-gesture-handler/blob/db78d3ca7d48e8ba57482d3fe9b0a15aa79d9932/react-native-gesture-handler.d.ts#L440-L457\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type ScrollView = typeof ScrollView & {\n  scrollTo(\n    y?: number | { x?: number; y?: number; animated?: boolean },\n    x?: number,\n    animated?: boolean\n  ): void;\n  scrollToEnd(options?: { animated: boolean }): void;\n};\n\nexport const Switch = createNativeWrapper<RNSwitchProps>(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Switch = typeof Switch;\n\nexport const TextInput = createNativeWrapper<RNTextInputProps>(RNTextInput);\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type TextInput = typeof TextInput;\n\nexport const DrawerLayoutAndroid = createNativeWrapper<\n  PropsWithChildren<RNDrawerLayoutAndroidProps>\n>(RNDrawerLayoutAndroid, { disallowInterruption: true });\n// we use literal object since TS gives error when using RN's `positions`\n// @ts-ignore FIXME(TS) maybe this should be removed?\nDrawerLayoutAndroid.positions = { Left: 'left', Right: 'right' };\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type DrawerLayoutAndroid = typeof DrawerLayoutAndroid;\n\nexport const FlatList = React.forwardRef<RNFlatList<any>, RNFlatListProps<any>>(\n  (props, ref) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type FlatList<ItemT> = React.ComponentType<\n  RNFlatListProps<ItemT> &\n    NativeViewGestureHandlerProps &\n    React.RefAttributes<any>\n> & {\n  scrollToEnd: (params?: { animated?: boolean }) => void;\n  scrollToIndex: (params: {\n    animated?: boolean;\n    index: number;\n    viewOffset?: number;\n    viewPosition?: number;\n  }) => void;\n  scrollToItem: (params: {\n    animated?: boolean;\n    item: ItemT;\n    viewPosition?: number;\n  }) => void;\n  scrollToOffset: (params: { animated?: boolean; offset: number }) => void;\n};\n"]}