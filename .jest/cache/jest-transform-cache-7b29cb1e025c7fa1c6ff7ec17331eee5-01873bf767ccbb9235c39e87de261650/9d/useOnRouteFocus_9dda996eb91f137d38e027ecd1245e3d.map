{"version":3,"sources":["useOnRouteFocus.tsx"],"names":["key","setState","onRouteFocus","onRouteFocusParent","React","NavigationBuilderContext","state","getState","result","router","sourceRouteKey"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAMA,IAAA,yBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAce,SAAA,eAAA,OAKK;AAAA,MALqD,MAKrD,QALqD,MAKrD;AAAA,MALqD,QAKrD,QALqD,QAKrD;AAAA,MALqD,cAKrD,QAFlBA,GAEkB;AAAA,MADlBC,QACkB,QADlBA,QACkB;;AAClB,0BAA6CG,KAAK,CAALA,UAAAA,CAC3CC,yBAAAA,CADF,OAA6CD,CAA7C;AAAA,MAAsBD,kBAAtB,qBAAQD,YAAR;;AAIA,SAAO,KAAK,CAAL,WAAA,CACJF,UAAAA,GAAD,EAAiB;AACf,QAAMM,KAAK,GAAGC,QAAd,EAAA;AACA,QAAMC,MAAM,GAAGC,MAAM,CAANA,qBAAAA,CAAAA,KAAAA,EAAf,GAAeA,CAAf;;AAEA,QAAID,MAAM,KAAV,KAAA,EAAsB;AACpBP,MAAAA,QAAQ,CAARA,MAAQ,CAARA;AACD;;AAED,QAAIE,kBAAkB,KAAlBA,SAAAA,IAAoCO,cAAc,KAAtD,SAAA,EAAsE;AACpEP,MAAAA,kBAAkB,CAAlBA,cAAkB,CAAlBA;AACD;AAXE,GAAA,EAaL,CAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,QAAA,EAbF,cAaE,CAbK,CAAP;AAeD","sourcesContent":["import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n"]}