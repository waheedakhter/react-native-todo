{"version":3,"sources":["allEqualTo.js"],"names":["exports","__esModule","_ramda","require","allEqualTo","curry","val","list","all","equals","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAsBA,IAAIC,UAAU,GAAG,CAAC,GAAGF,MAAM,CAACG,KAAX,EAAkB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACtD,SAAO,CAAC,GAAGL,MAAM,CAACM,GAAX,EAAgB,CAAC,GAAGN,MAAM,CAACO,MAAX,EAAmBH,GAAnB,CAAhB,EAAyCC,IAAzC,CAAP;AACD,CAFgB,CAAjB;AAGA,IAAIG,QAAQ,GAAGN,UAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBU,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\n/**\n * Returns true if all items in the list are equivalent to user provided value using `R.equals` for equality comparisons.\n *\n * @func allEqualTo\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.11.0|v2.11.0}\n * @category List\n * @sig a -> [b] -> Boolean\n * @param {*} val User provided value to check the `list` against\n * @param {Array} list The list of values\n * @return {boolean}\n * @see {@link RA.allEqual|allEqual}, {@link https://ramdajs.com/docs/#equals|equals}\n * @example\n *\n * RA.allEqualTo(1, [ 1, 2, 3, 4 ]); //=> false\n * RA.allEqualTo(1, [ 1, 1, 1, 1 ]); //=> true\n * RA.allEqualTo({}, [ {}, {} ]); //=> true\n * RA.allEqualTo(1, []); //=> true\n *\n */\nvar allEqualTo = (0, _ramda.curry)(function (val, list) {\n  return (0, _ramda.all)((0, _ramda.equals)(val), list);\n});\nvar _default = allEqualTo;\nexports[\"default\"] = _default;"]}