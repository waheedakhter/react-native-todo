{"version":3,"sources":["isNaturalNumber.js"],"names":["exports","__esModule","_ramda","require","_isInteger","_interopRequireDefault","_isNegative","obj","isNaturalNumber","curryN","both","complement","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIG,WAAW,GAAGD,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAqBjG,IAAIC,eAAe,GAAG,CAAC,GAAGN,MAAM,CAACO,MAAX,EAAmB,CAAnB,EAAsB,CAAC,GAAGP,MAAM,CAACQ,IAAX,EAAiBN,UAAU,CAAC,SAAD,CAA3B,EAAwC,CAAC,GAAGF,MAAM,CAACS,UAAX,EAAuBL,WAAW,CAAC,SAAD,CAAlC,CAAxC,CAAtB,CAAtB;AACA,IAAIM,QAAQ,GAAGJ,eAAf;AACAR,OAAO,CAAC,SAAD,CAAP,GAAqBY,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar _isInteger = _interopRequireDefault(require(\"./isInteger\"));\n\nvar _isNegative = _interopRequireDefault(require(\"./isNegative\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Checks if value is a natural number.\n * Natural numbers correspond to all non-negative integers and 0.\n *\n * @func isNaturalNumber\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.29.0|v2.29.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @example\n *\n * RA.isNaturalNumber(5); // => true\n * RA.isNaturalNumber(Number.MAX_VALUE); // => true\n * RA.isNaturalNumber(0); // => true\n * RA.isNaturalNumber(-1); // => false\n * RA.isNaturalNumber(0.9); // => false\n */\nvar isNaturalNumber = (0, _ramda.curryN)(1, (0, _ramda.both)(_isInteger[\"default\"], (0, _ramda.complement)(_isNegative[\"default\"])));\nvar _default = isNaturalNumber;\nexports[\"default\"] = _default;"]}