{"version":3,"sources":["keysIn.js"],"names":["_curry1","require","keysIn","obj","prop","ks","length","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAEXC,OAAO,CAAC,oBAAD,CAFP;;AA0BA,IAAIC,MAAM,GAEVF,OAAO,CAAC,SAASE,MAAT,CAAgBC,GAAhB,EAAqB;AAC3B,MAAIC,IAAJ;AACA,MAAIC,EAAE,GAAG,EAAT;;AAEA,OAAKD,IAAL,IAAaD,GAAb,EAAkB;AAChBE,IAAAA,EAAE,CAACA,EAAE,CAACC,MAAJ,CAAF,GAAgBF,IAAhB;AACD;;AAED,SAAOC,EAAP;AACD,CATM,CAFP;;AAaAE,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nmodule.exports = keysIn;"]}