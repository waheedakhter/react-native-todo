{"version":3,"sources":["TodoItem.tsx"],"names":["DeliveryItem","item","isActiveDelivery","dispatch","navigation","swipe","React","useRef","removeFunctionality","useCallback","TodosActions","deleteTodoItem","style","btnViewStyle","deleteView","textStyle","navigate","isUpdate","itemContainer","shadowColor","colors","red","Platform","select","android","darkGrey","ios","lightGrey","description","dateStyle","dateTime"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAOA,IAAMA,YAA4C,GAAG,SAA/CA,YAA+C,OAAuC;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,gBAA8B,QAA9BA,gBAA8B;AAC1F,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,UAAU,GAAG,4BAAnB;AACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,MAAN,CAAa,IAAb,CAAd;AACA,MAAMC,mBAAmB,GAAGF,KAAK,CAACG,WAAN,CAAkB,YAAM;AAClDN,IAAAA,QAAQ,CAACO,0BAAaC,cAAb,CAA4BV,IAA5B,EAAkC,EAAlC,CAAD,CAAR;AACD,GAF2B,EAEzB,CAACA,IAAD,CAFyB,CAA5B;AAIA,SACE,oBAAC,wBAAD;AACE,IAAA,GAAG,EAAEI,KADP;AAEE,IAAA,WAAW,EAAE,uBAAM,CAAE,CAFvB;AAGE,IAAA,QAAQ,EACN,oBAAC,6BAAD;AAAkB,MAAA,OAAO,EAAEG,mBAA3B;AAAgD,MAAA,KAAK,EAAEI,uBAAMC;AAA7D,OACE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAED,uBAAME;AAAnB,OACE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEF,uBAAMG;AAAnB,gBADF,CADF;AAJJ,KAWE,oBAAC,6BAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMX,UAAU,CAACY,QAAX,CAAoB,aAApB,EAAmC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBhB,QAAAA,IAAI,EAAEA;AAAxB,OAAnC,CAAN;AAAA;AAA3B,KACGA,IAAI,IACH,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLW,uBAAMM,aADD,EAEL;AACEC,MAAAA,WAAW,EAAEjB,gBAAgB,GACzBkB,gBAAOC,GADkB,GAEzBC,sBAASC,MAAT,CAAgB;AACdC,QAAAA,OAAO,EAAEJ,gBAAOK,QADF;AAEdC,QAAAA,GAAG,EAAEN,gBAAOO;AAFE,OAAhB;AAHN,KAFK;AADT,KAaE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEf,uBAAMgB,WAAnB;AAAgC,IAAA,aAAa,EAAE;AAA/C,KACG3B,IAAI,CAAC2B,WADR,CAbF,EAgBE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEhB,uBAAMiB;AAAnB,KAA+B5B,IAAI,CAAC6B,QAApC,CAhBF,CAFJ,CAXF,CADF;AAoCD,CA5CD;;eA8Ce9B,Y","sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\nimport * as React from \"react\";\nimport { Platform, Text, TouchableOpacity, View, ViewProps } from \"react-native\";\nimport SwiperComponent from \"../SwiperComponent\";\nimport { useDispatch } from \"react-redux\";\nimport colors from \"../../Themes/Colors\";\nimport style from \"./TodoItemStyle\";\nimport { TodosActions } from \"../../Reducers/TodoReducer\";\n\ninterface Props extends ViewProps {\n  item: any;\n  isActiveDelivery?: boolean;\n}\n\nconst DeliveryItem: React.FunctionComponent<Props> = ({ item, isActiveDelivery }: Props) => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const swipe = React.useRef(null);\n  const removeFunctionality = React.useCallback(() => {\n    dispatch(TodosActions.deleteTodoItem(item, {}));\n  }, [item]);\n\n  return (\n    <SwiperComponent\n      ref={swipe}\n      onFullSwipe={() => {}}\n      backView={\n        <TouchableOpacity onPress={removeFunctionality} style={style.btnViewStyle}>\n          <View style={style.deleteView}>\n            <Text style={style.textStyle}>Remove</Text>\n          </View>\n        </TouchableOpacity>\n      }\n    >\n      <TouchableOpacity onPress={() => navigation.navigate(\"TodoDetails\", { isUpdate: true, item: item })}>\n        {item && (\n          <View\n            style={[\n              style.itemContainer,\n              {\n                shadowColor: isActiveDelivery\n                  ? colors.red\n                  : Platform.select({\n                      android: colors.darkGrey,\n                      ios: colors.lightGrey,\n                    }),\n              },\n            ]}\n          >\n            <Text style={style.description} numberOfLines={1}>\n              {item.description}\n            </Text>\n            <Text style={style.dateStyle}>{item.dateTime}</Text>\n          </View>\n        )}\n      </TouchableOpacity>\n    </SwiperComponent>\n  );\n};\n\nexport default DeliveryItem;\n"]}